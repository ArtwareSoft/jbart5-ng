/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '_@angular/core/src/linker/ng_module_factory';
import * as import1 from './aot-test.gen';
import * as import2 from '_@angular/core/src/di/injector';
import * as import3 from '_@angular/core/src/linker/view';
import * as import4 from '_@angular/core/src/render/api';
import * as import5 from '_@angular/core/src/linker/element';
import * as import6 from '_@angular/core/src/linker/view_utils';
import * as import7 from '_@angular/core/src/linker/view_type';
import * as import8 from '_@angular/core/src/change_detection/change_detection';
import * as import9 from '_@angular/core/src/metadata/view';
import * as import10 from '_@angular/core/src/linker/component_factory';
class jBartCompiledViewsModuleInjector extends import0.NgModuleInjector<import1.jBartCompiledViewsModule> {
  _jBartCompiledViewsModule_0:import1.jBartCompiledViewsModule;
  constructor(parent:import2.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  createInternal():import1.jBartCompiledViewsModule {
    this._jBartCompiledViewsModule_0 = new import1.jBartCompiledViewsModule();
    return this._jBartCompiledViewsModule_0;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import1.jBartCompiledViewsModule)) { return this._jBartCompiledViewsModule_0; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const jBartCompiledViewsModuleNgFactory:import0.NgModuleFactory<import1.jBartCompiledViewsModule> = new import0.NgModuleFactory(jBartCompiledViewsModuleInjector,import1.jBartCompiledViewsModule);
export class Wrapper_label__aot___test {
  context:import1.label__aot___test;
  changed:boolean;
  constructor() {
    this.changed = false;
    this.context = new import1.label__aot___test();
  }
  detectChangesInInputProps(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
  detectChangesInHostProps(view:import3.AppView<any>,el:any,throwOnChange:boolean):void {
  }
}
var renderType_label__aot___test_Host:import4.RenderComponentType = (null as any);
class _View_label__aot___test_Host0 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _label__aot___test_0_4:Wrapper_label__aot___test;
  constructor(viewUtils:import6.ViewUtils,parentInjector:import2.Injector,declarationEl:import5.AppElement) {
    super(_View_label__aot___test_Host0,renderType_label__aot___test_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import8.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import6.selectOrCreateRenderHostElement(this.renderer,'jb-comp',import6.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_label__aot___test0(this.viewUtils,this.injector(0),this._appEl_0);
    this._label__aot___test_0_4 = new Wrapper_label__aot___test();
    this._appEl_0.initComponent(this._label__aot___test_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._label__aot___test_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.label__aot___test) && (0 === requestNodeIndex))) { return this._label__aot___test_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._label__aot___test_0_4.detectChangesInInputProps(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._label__aot___test_0_4.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_label__aot___test_Host0(viewUtils:import6.ViewUtils,parentInjector:import2.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  if ((renderType_label__aot___test_Host === (null as any))) { (renderType_label__aot___test_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_label__aot___test_Host0(viewUtils,parentInjector,declarationEl);
}
export const label__aot___testNgFactory:import10.ComponentFactory<import1.label__aot___test> = new import10.ComponentFactory<import1.label__aot___test>('jb-comp',viewFactory_label__aot___test_Host0,import1.label__aot___test);
const styles_label__aot___test:any[] = ([] as any[]);
var renderType_label__aot___test:import4.RenderComponentType = (null as any);
class _View_label__aot___test0 extends import3.AppView<import1.label__aot___test> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import6.ViewUtils,parentInjector:import2.Injector,declarationEl:import5.AppElement) {
    super(_View_label__aot___test0,renderType_label__aot___test,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import8.ChangeDetectorStatus.CheckAlways);
    this._expr_2 = import8.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import5.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = import6.createRenderElement(this.renderer,parentRenderNode,'span',import6.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(([] as any[]),[
      this._el_0,
      this._text_1
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_2:any = import6.interpolate(1,'',this.context.title,'');
    if (import6.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setText(this._text_1,currVal_2);
      this._expr_2 = currVal_2;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_label__aot___test0(viewUtils:import6.ViewUtils,parentInjector:import2.Injector,declarationEl:import5.AppElement):import3.AppView<import1.label__aot___test> {
  if ((renderType_label__aot___test === (null as any))) { (renderType_label__aot___test = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,styles_label__aot___test,{})); }
  return new _View_label__aot___test0(viewUtils,parentInjector,declarationEl);
}