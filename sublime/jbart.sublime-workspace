{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"src",
				"srcFile"
			],
			[
				"de",
				"debugger"
			],
			[
				"is",
				"isArray"
			],
			[
				"pr",
				"profile"
			],
			[
				"end",
				"endIndex"
			],
			[
				"pro",
				"project"
			],
			[
				"to",
				"toFind"
			],
			[
				"jb",
				"jb_rx"
			],
			[
				"re",
				"resolve"
			],
			[
				"Pro",
				"Promise"
			],
			[
				"fla",
				"flatMap"
			],
			[
				"Ob",
				"Observable"
			],
			[
				"defa",
				"defaultValue"
			],
			[
				"Ov",
				"OverlayDemo"
			],
			[
				"con",
				"control"
			],
			[
				"exp",
				"expectedResult"
			],
			[
				"path",
				"pathChangesEm"
			],
			[
				"par",
				"parentPath"
			],
			[
				"inde",
				"indexOf"
			],
			[
				"clos",
				"closets"
			],
			[
				"jbart",
				"jbart_base"
			],
			[
				"min",
				"minMax"
			],
			[
				"in",
				"input"
			],
			[
				"firs",
				"firstProp"
			],
			[
				"su",
				"success"
			],
			[
				"fa",
				"failure"
			],
			[
				"res",
				"resolve"
			],
			[
				"g",
				"globals"
			],
			[
				"call",
				"callerPath"
			],
			[
				"func",
				"function"
			],
			[
				"fu",
				"fullPath"
			],
			[
				"new",
				"newIndex"
			],
			[
				"pre",
				"prevIndex"
			],
			[
				"ite",
				"itemToID"
			],
			[
				"gro",
				"groups"
			],
			[
				"set",
				"setData"
			],
			[
				"ctrl",
				"ctrls"
			],
			[
				"auto",
				"autoSelectFirst"
			],
			[
				"item",
				"itemVariable"
			],
			[
				"load",
				"loadedModules"
			],
			[
				"com",
				"compName"
			],
			[
				"not",
				"notEquals"
			],
			[
				"t",
				"template"
			],
			[
				"flex",
				"flex-wrap"
			],
			[
				"get",
				"getOwnPropertyNames"
			],
			[
				"comp",
				"components"
			],
			[
				"compon",
				"components"
			],
			[
				"fle",
				"flex-direction"
			],
			[
				"strin",
				"stringOnly"
			],
			[
				"write",
				"writeValue"
			],
			[
				"fix",
				"fixDialogOverflow"
			],
			[
				"prov",
				"providesfuncs"
			],
			[
				"MD",
				"MdIcon"
			],
			[
				"dire",
				"directives"
			],
			[
				"ngOn",
				"ngOnInit"
			],
			[
				"jb_",
				"jb_dialogs"
			],
			[
				"probe",
				"probeUtils"
			],
			[
				"pa",
				"parentParam"
			],
			[
				"parent",
				"parentParam"
			],
			[
				"def",
				"defaultValue"
			],
			[
				"jb-edi",
				"jb-editor-menu"
			],
			[
				"jbE",
				"jbEditorSubNodes"
			],
			[
				"stu",
				"studioGlobals"
			],
			[
				"c",
				"clipboard"
			],
			[
				"grou",
				"groupClosed"
			],
			[
				"se",
				"selected"
			],
			[
				"on",
				"onEnter"
			],
			[
				"sug",
				"suggestionObj"
			],
			[
				"ar",
				"arrPath"
			],
			[
				"input",
				"inputClosed"
			],
			[
				"close",
				"closeContainingPopup"
			],
			[
				"sp",
				"split"
			],
			[
				"key",
				"keyCode"
			],
			[
				"pick",
				"pickPath"
			],
			[
				"hight",
				"height"
			],
			[
				"ke",
				"keyCode"
			],
			[
				"take",
				"takeUntil"
			],
			[
				"md",
				"mdInput"
			],
			[
				"map",
				"mapFunc"
			],
			[
				"popup",
				"popupIndex"
			],
			[
				"sub",
				"subscribe"
			],
			[
				"read",
				"ready"
			],
			[
				"dialog",
				"dialogData"
			],
			[
				"click",
				"clickoutEm"
			],
			[
				"no",
				"noprobe"
			],
			[
				"para",
				"parentParam"
			],
			[
				"native",
				"nativeElement"
			],
			[
				"dy",
				"dynamicItems"
			],
			[
				"probeR",
				"probeResult"
			],
			[
				"run",
				"runCircuit"
			],
			[
				"tem",
				"template"
			],
			[
				"ref",
				"refreshPreview"
			],
			[
				"jbC",
				"jbCtrl"
			],
			[
				"me",
				"methodHandler"
			],
			[
				"s",
				"styles"
			],
			[
				"data",
				"databind"
			],
			[
				"ma",
				"match"
			],
			[
				"index",
				"indexOf"
			],
			[
				"va",
				"validation"
			],
			[
				"m",
				"message"
			],
			[
				"fun",
				"function"
			],
			[
				"param",
				"paramDef"
			],
			[
				"textF",
				"textForTrue"
			],
			[
				"el",
				"elementRef"
			],
			[
				"opt",
				"options"
			],
			[
				"gr",
				"groupOfOpt"
			],
			[
				"react",
				"reactElem"
			],
			[
				"fo",
				"forEach"
			],
			[
				"foc",
				"focused"
			],
			[
				"for",
				"forEach"
			],
			[
				"cmp",
				"cmp_prof"
			],
			[
				"fou",
				"focused"
			],
			[
				"ng",
				"ngClass"
			],
			[
				"ti",
				"title"
			],
			[
				"logE",
				"logError"
			],
			[
				"cl",
				"className"
			],
			[
				"ngO",
				"ngDoCheck"
			],
			[
				"bor",
				"border-bottom"
			],
			[
				"arr",
				"array"
			],
			[
				"log",
				"logError"
			],
			[
				"chi",
				"childrenType"
			],
			[
				"mar",
				"margin-top"
			],
			[
				"le",
				"length"
			],
			[
				"l",
				"length"
			],
			[
				"padding",
				"padding-right"
			],
			[
				"li",
				"link	Tag"
			],
			[
				"obj",
				"object"
			],
			[
				"prof",
				"prof_str"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Searching 120 files for \"studio.is-of-type\" (case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-jb-editor.ts:\n  338    impl :{$: 'dynamic-controls',\n  339              controlItems : { \n  340:               $if: {$: 'studio.is-of-type', path: '%$path%', type: '%$type%' }, \n  341                then: '%$components%', \n  342                else: [] \n\nC:\\jbart5-ng\\projects\\studio\\studio-main.ts:\n  170          { $: 'objectProperties' },\n  171          { $filter: {$: 'equals', item1: '%$globals/project%', item2: {$: 'prefix', separator: '.' } }},\n  172:         { $filter: {$: 'studio.is-of-type', type: 'control', path: '%%'} },\n  173          {$: 'suffix', separator: '.' }\n  174        ]\n\nC:\\jbart5-ng\\projects\\studio\\studio-model-components.ts:\n   19  })\n   20  \n   21: jb.component('studio.is-of-type', {\n   22    params: [ \n   23    	{ id: 'path', as: 'string', essential: true },\n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n  524  })\n  525  \n  526: jb.component('studio.is-of-type', {\n  527    params: [ \n  528    	{ id: 'path', as: 'string', essential: true },\n\nC:\\jbart5-ng\\src\\testing\\ui-testers-ctrls.ts:\n   41  			tests: ['%$window.jbart.comps%',\n   42  				{ $: 'objectToArray' },\n   43: 				{ $filter: {$: 'studio.is-of-type', type: 'test', path: '%id%'} },\n   44  				{ $filter: {$: 'contains', allText: '%id%', text: '.' } },\n   45  				{ $filter: {$or: [{$: 'equals', item1: '%$module%', item2: {$: 'prefix', text: '%id%', separator: '.' } }, {$isEmpty: '%$module%'} ]} },\n\n5 matches across 5 files\n\n\nSearching 120 files for \"params: [{ id: 'path', 'string':  }]\" (case sensitive)\n\n0 matches\n\nSearching 120 files for \"params: [{ id: 'path',\" (case sensitive)\n\n0 matches\n\nSearching 120 files for \"{ id: 'path',\" (case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-edit-source.ts:\n    6  	type: 'action',\n    7  	params: [\n    8: 		{ id: 'path', as: 'string', defaultValue: { $: 'studio.currentProfilePath' } }\n    9  	],\n   10  	impl: {\n   ..\n   24  	type: 'data',\n   25  	params: [\n   26: 		{ id: 'path', as: 'string' },\n   27  	],\n   28  	impl: (context,path,stringOnly) => ({\n   ..\n   45  	type: 'data',\n   46  	params: [\n   47: 		{ id: 'path', as: 'string' },\n   48  	],\n   49  	impl: (context,path,stringOnly) => ({\n   ..\n   61  	type: 'action',\n   62  	params: [\n   63: 		{ id: 'path', as: 'string'},\n   64  	],\n   65  	impl: (ctx,path) => {\n\nC:\\jbart5-ng\\projects\\studio\\studio-jb-editor.ts:\n    9    type: 'action', \n   10    params: [\n   11:     { id: 'path', as: 'string' }\n   12    ], \n   13    impl :{$: 'openDialog', \n   ..\n   29    type: 'control', \n   30    params: [\n   31:     { id: 'path', as: 'string' }\n   32    ], \n   33    impl :{$: 'group', \n   ..\n  145    type: 'action', \n  146    params: [\n  147:     { id: 'path', as: 'string' }\n  148    ], \n  149    impl :{$: 'openDialog', \n  ...\n  185    type: 'data',\n  186    params: [\n  187:     { id: 'path', as: 'string' }\n  188    ],\n  189    impl: (context,path) => ({\n  ...\n  224    type: 'action', \n  225    params: [\n  226:     { id: 'path', as: 'string' }\n  227    ], \n  228    impl :{$: 'openDialog', \n  ...\n  236    type: 'control', \n  237    params: [\n  238:     { id: 'path', as: 'string' }\n  239    ], \n  240    impl :{$: 'group', \n  ...\n  332    type: 'control', \n  333    params: [\n  334:     { id: 'path', as: 'string'},\n  335      { id: 'type', as: 'string' },\n  336      { id: 'components', as: 'array' },\n\nC:\\jbart5-ng\\projects\\studio\\studio-model-components.ts:\n   21  jb.component('studio.is-of-type', {\n   22    params: [ \n   23:   	{ id: 'path', as: 'string', essential: true },\n   24    	{ id: 'type', as: 'string', essential: true },\n   25    ],\n   ..\n   44  jb.component('studio.has-param', {\n   45  	params: [ \n   46: 		{ id: 'path', as: 'string' }, \n   47  		{ id: 'param', as: 'string' }, \n   48  	],\n   ..\n  108  	type: 'action',\n  109  	params: [ \n  110: 		{ id: 'path', as: 'string' },\n  111  		{ id: 'comp', as: 'string' },\n  112  	],\n  ...\n  118  	type: 'action',\n  119  	params: [ \n  120: 		{ id: 'path', as: 'string' }, \n  121  		{ id: 'compName', as: 'string' } \n  122  	],\n  ...\n  149  	type: 'action',\n  150  	params: [ \n  151: 		{ id: 'path', as: 'string' },\n  152  	],\n  153  	impl: (context,path) => \n  ...\n  158  	type: 'action',\n  159  	params: [ \n  160: 		{ id: 'path', as: 'string' },\n  161  		{ id: 'moveUp', type: 'boolean', as: 'boolean'} \n  162  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-pick-dialog.ts:\n  145  jb.component('studio.highlight-in-preview',{\n  146  	params: [\n  147: 		{ id: 'path', as: 'string' }\n  148  	],\n  149  	impl: (ctx,path) => {\n\nC:\\jbart5-ng\\projects\\studio\\studio-popups.ts:\n    6  	type: 'action',\n    7  	params: [\n    8: 	    { id: 'path', as: 'string' }\n    9  	], \n   10  	impl: {\n   ..\n  110    type: 'action', \n  111    params: [\n  112:     { id: 'path', as: 'string' }\n  113    ], \n  114    impl :{$: 'openDialog', \n\nC:\\jbart5-ng\\projects\\studio\\studio-probe.ts:\n   69  jb.component('studio.probe', {\n   70    type:'data',\n   71:   params: [ { id: 'path', as: 'string', dynamic: true } ],\n   72    impl: (ctx,path) => {\n   73        var _jbart = jbart_base();\n\nC:\\jbart5-ng\\projects\\studio\\studio-properties-menu.ts:\n    4    type: 'feature', \n    5    params: [\n    6:     { id: 'path', as: 'string' }\n    7    ], \n    8    impl :{$: 'field.toolbar', \n    .\n   14    type: 'feature', \n   15    params: [\n   16:     { id: 'path', as: 'string' }\n   17    ], \n   18    impl :{$: 'field.toolbar', $trace1:true,\n   ..\n   24    type: 'control', \n   25    params: [\n   26:     { id: 'path', as: 'string' }\n   27    ], \n   28    impl :{$: 'group', \n   ..\n   80    type: 'action', \n   81    params: [\n   82:     { id: 'path', as: 'string' }\n   83    ], \n   84    impl :{$: 'openDialog', \n\nC:\\jbart5-ng\\projects\\studio\\studio-properties.ts:\n   42    type: 'control', \n   43    params: [\n   44:     { id: 'path', as: 'string' }\n   45    ], \n   46    impl :{$: 'group', \n   ..\n  117  	type: 'control',\n  118  	params: [\n  119: 		{ id: 'path', as: 'string' },\n  120  	],\n  121  	impl: function(context,path) {\n  ...\n  165    type: 'control', \n  166    params: [\n  167:     { id: 'path', as: 'string' }\n  168    ], \n  169    impl :{$: 'editable-text', \n  ...\n  185    type: 'control', \n  186    params: [\n  187:     { id: 'path', as: 'string' }\n  188    ], \n  189    impl :{$: 'group', \n  ...\n  204    type: 'data', \n  205    params: [\n  206:     { id: 'path', as: 'string' }\n  207    ], \n  208    impl: (ctx,path) => {\n  ...\n  261    type: 'control', \n  262    params: [\n  263:     { id: 'path', as: 'string' }\n  264    ], \n  265    impl :{$: 'group', \n  ...\n  377    type: 'control', \n  378    params: [\n  379:     { id: 'path', as: 'string' }\n  380    ], \n  381    impl :{$: 'group', \n  ...\n  444    type: 'control', \n  445    params: [\n  446:     { id: 'path', as: 'string' }\n  447    ], \n  448    impl :{$: 'group', \n  ...\n  485  	type: 'picklist.options',\n  486  	params: [ \n  487: 		{ id: 'path', as: 'string' },\n  488  	],\n  489  	impl: (context,path) => \n  ...\n  504    type: 'feature',\n  505    params: [\n  506:     { id: 'path', essential: true, as: 'string' },\n  507    ],\n  508    impl: (ctx,path) => \n  ...\n  536    type: 'feature',\n  537    params: [\n  538:     { id: 'path', essential: true, as: 'string' },\n  539      { id: 'data', as: 'ref' }\n  540    ],\n  ...\n  552    type: 'feature',\n  553    params: [\n  554:     { id: 'path', essential: true, as: 'string' },\n  555    ],\n  556    impl: function(context, initialPath) {\n\nC:\\jbart5-ng\\projects\\studio\\studio-style-editor.ts:\n    5  	type: 'action',\n    6  	  params: [\n    7: 	    { id: 'path', as: 'string' }\n    8  	  ], \n    9  	impl :{$: 'openDialog',\n   ..\n   25    type: 'action', \n   26    params: [\n   27:     { id: 'path', as: 'string' }\n   28    ], \n   29    impl :{$: 'openDialog', \n   ..\n   64    type: 'control', \n   65    params: [\n   66:     { id: 'path', as: 'string' }\n   67    ], \n   68    impl :{$: 'group', \n   ..\n   87  jb.component('studio.style-source', {\n   88    params: [\n   89:     { id: 'path', as: 'string' }\n   90    ], \n   91    impl: (ctx,path) =>\n   ..\n  109    type: 'action', \n  110    params: [\n  111:     { id: 'path', as: 'string' }\n  112    ],\n  113    impl :{$: 'openDialog', \n\nC:\\jbart5-ng\\projects\\studio\\studio-suggestions.ts:\n  105    type: 'feature', \n  106    params: [\n  107:     { id: 'path', as: 'string' },\n  108      { id: 'action', type: 'action', dynamic:true },\n  109      { id: 'onEnter', type: 'action', dynamic:true },\n  ...\n  189    type: 'action', \n  190    params: [\n  191:     { id: 'path', as: 'string' }\n  192    ], \n  193    impl :{$: 'openDialog', \n  ...\n  289  jb.component('studio.jb-paste-suggestion', {\n  290    params: [\n  291:     { id: 'path',as: 'string'}\n  292    ],\n  293    type: 'action',\n\nC:\\jbart5-ng\\projects\\studio\\studio-testers.ts:\n   28    type: 'test',\n   29    params: [\n   30:     { id: 'path', as: 'string' },\n   31      { id: 'childrenType', as: 'string', type: ',jb-editor' },\n   32      { id: 'expectedResult', type: 'boolean', dynamic: true, as: 'boolean' }\n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n  526  jb.component('studio.is-of-type', {\n  527    params: [ \n  528:   	{ id: 'path', as: 'string', essential: true },\n  529    	{ id: 'type', as: 'string', essential: true },\n  530    ],\n  ...\n  549  jb.component('studio.has-param', {\n  550  	params: [ \n  551: 		{ id: 'path', as: 'string' }, \n  552  		{ id: 'param', as: 'string' }, \n  553  	],\n  ...\n  613  	type: 'action',\n  614  	params: [ \n  615: 		{ id: 'path', as: 'string' },\n  616  		{ id: 'comp', as: 'string' },\n  617  	],\n  ...\n  623  	type: 'action',\n  624  	params: [ \n  625: 		{ id: 'path', as: 'string' }, \n  626  		{ id: 'compName', as: 'string' } \n  627  	],\n  ...\n  654  	type: 'action',\n  655  	params: [ \n  656: 		{ id: 'path', as: 'string' },\n  657  	],\n  658  	impl: (context,path) => \n  ...\n  663  	type: 'action',\n  664  	params: [ \n  665: 		{ id: 'path', as: 'string' },\n  666  		{ id: 'moveUp', type: 'boolean', as: 'boolean'} \n  667  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-tree.ts:\n   20    type: 'action', \n   21    params: [\n   22:     { id: 'path', as: 'string' }\n   23    ], \n   24    impl :{$: 'openDialog', \n\nC:\\jbart5-ng\\projects\\studio\\studio-utils.ts:\n  102  	type: 'action',\n  103  	params: [ \n  104: 		{ id: 'path', as: 'string' },\n  105  	],\n  106  	impl :{$runActions: [ \n\nC:\\jbart5-ng\\projects\\studio-helper\\studio-helper.ts:\n   37    type: 'control', \n   38    params: [\n   39:     { id: 'path', defaultValue: 'studio-helper-dummy.label' }\n   40    ], \n   41    impl :{$: 'group', \n   ..\n   80    type: 'control', \n   81    params: [\n   82:     { id: 'path', as: 'string' }\n   83    ], \n   84    impl :{$: 'group', \n   ..\n  121    type: 'control', \n  122    params: [\n  123:     { id: 'path', defaultValue: 'studio-helper.sample-control' }\n  124    ],\n  125    impl :{$: 'studio.control-tree',\n  ...\n  133    type: 'control', \n  134    params: [\n  135:     { id: 'path', defaultValue: 'studio-helper-dummy.label' }\n  136    ], \n  137    impl :{$: 'group', \n\n58 matches across 15 files\n\n\nSearching 120 files for \"studio.short-title\" (case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-edit-source.ts:\n   10  	impl: {\n   11  		$: 'openDialog',\n   12: 		title :{$: 'studio.short-title', path: '%$path%' },\n   13  		style :{$: 'dialog.studio-floating', id: 'edit source', width: 600 },\n   14  		features :{$: 'css', css: '.jb-dialog-content-parent {overflow-y: hidden}'},\n\nC:\\jbart5-ng\\projects\\studio\\studio-model-components.ts:\n    2  import {model} from './studio-tgp-model';\n    3  \n    4: jb.component('studio.short-title',{\n    5  	params: [ {id: 'path' as: 'string' } ],\n    6  	impl: (context,path) => model.shortTitle(path)\n    .\n   36  })\n   37  \n   38: jb.component('studio.short-title', {\n   39  	params: [ {id: 'path' as: 'string' } ],\n   40  	impl: (context,path) => \n\nC:\\jbart5-ng\\projects\\studio\\studio-properties.ts:\n   10      title: [\n   11        {$: 'object', \n   12:         title :{$: 'studio.short-title', \n   13            path :{$: 'studio.currentProfilePath' }\n   14          }, \n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n  507  // ************** components\n  508  \n  509: jb.component('studio.short-title',{\n  510  	params: [ {id: 'path' as: 'string' } ],\n  511  	impl: (context,path) => model.shortTitle(path)\n  ...\n  541  })\n  542  \n  543: jb.component('studio.short-title', {\n  544  	params: [ {id: 'path' as: 'string' } ],\n  545  	impl: (context,path) => \n\n6 matches across 4 files\n\n\nSearching 120 files for \"params: [ {id: 'path' as: 'string' } ]\" (case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-jb-editor.ts:\n  136  jb.component('studio.jb-editor.nodes', {\n  137  	type: 'tree.nodeModel',\n  138: 	params: [ {id: 'path' as: 'string' } ],\n  139  	impl: function(context,path) {\n  140  		return new TgpModel(path,'jb-editor');\n  ...\n  161  jb.component('studio.jb-floating-input', {\n  162    type: 'control',\n  163:   params: [ {id: 'path' as: 'string' } ],\n  164    impl :{$: 'editable-text', \n  165        databind :{$: 'studio.profile-value-as-text', path: '%$path%' }, \n\nC:\\jbart5-ng\\projects\\studio\\studio-model-components.ts:\n    3  \n    4  jb.component('studio.short-title',{\n    5: 	params: [ {id: 'path' as: 'string' } ],\n    6  	impl: (context,path) => model.shortTitle(path)\n    7  })\n    8  \n    9  jb.component('studio.val',{\n   10: 	params: [ {id: 'path' as: 'string' } ],\n   11  	impl: (context,path) => \n   12  		model.val(path)\n   ..\n   14  \n   15  jb.component('studio.is-primitive-value', {\n   16:   params: [ {id: 'path' as: 'string' } ],\n   17    impl: (context,path) => \n   18        typeof model.val(path) == 'string'\n   ..\n   37  \n   38  jb.component('studio.short-title', {\n   39: 	params: [ {id: 'path' as: 'string' } ],\n   40  	impl: (context,path) => \n   41  		model.shortTitle(path)\n   ..\n   52  \n   53  jb.component('studio.non-control-children',{\n   54: 	params: [ {id: 'path' as: 'string' } ],\n   55  	impl: (context,path) => \n   56  		model.children(path,'non-controls')\n   ..\n   58  \n   59  jb.component('studio.array-children',{\n   60: 	params: [ {id: 'path' as: 'string' } ],\n   61  	impl: (context,path) => \n   62  		model.children(path,'array')\n   ..\n   64  \n   65  jb.component('studio.compName',{\n   66: 	params: [ {id: 'path' as: 'string' } ],\n   67  	impl: (context,path) => model.compName(path) || ''\n   68  })\n   69  \n   70  jb.component('studio.paramDef',{\n   71: 	params: [ {id: 'path' as: 'string' } ],\n   72  	impl: (context,path) => model.paramDef(path)\n   73  })\n   74  \n   75  jb.component('studio.enum-options',{\n   76: 	params: [ {id: 'path' as: 'string' } ],\n   77  	impl: (context,path) => \n   78  		((model.paramDef(path) || {}).options ||'').split(',').map(x=>{return {code:x,text:x}})\n   ..\n   80  \n   81  jb.component('studio.prop-name',{\n   82: 	params: [ {id: 'path' as: 'string' } ],\n   83  	impl: (context,path) => \n   84  		model.propName(path)\n   ..\n   86  \n   87  jb.component('studio.more-params',{\n   88: 	params: [ {id: 'path' as: 'string' } ],\n   89  	impl: (context,path) => \n   90          model.jbEditorMoreParams(path)\n   ..\n   93  \n   94  jb.component('studio.compName-ref',{\n   95: 	params: [ {id: 'path' as: 'string' } ],\n   96  	impl: (context,path) => { return {\n   97  			$jb_val: function(value) {\n   ..\n  127  jb.component('studio.wrapWithGroup', {\n  128  	type: 'action',\n  129: 	params: [ {id: 'path' as: 'string' } ],\n  130  	impl: (context,path) => \n  131  		model.modify(model.wrapWithGroup, path, {},context)\n  ...\n  134  jb.component('studio.addProperty', {\n  135  	type: 'action',\n  136: 	params: [ {id: 'path' as: 'string' } ],\n  137  	impl: (context,path) => \n  138  		model.modify(model.addProperty, path, {},context)\n  ...\n  141  jb.component('studio.wrapWithPipeline', {\n  142  	type: 'action',\n  143: 	params: [ {id: 'path' as: 'string' } ],\n  144  	impl: (context,path) => \n  145  		model.modify(model.wrapWithPipeline, path, {},context)\n  ...\n  168  jb.component('studio.newArrayItem',{\n  169  	type: 'action',\n  170: 	params: [ {id: 'path' as: 'string' } ],\n  171  	impl: (context,path) => \n  172  		model.modify(model.addArrayItem, path, {},context)\n  ...\n  176  jb.component('studio.delete',{\n  177  	type: 'action',\n  178: 	params: [ {id: 'path' as: 'string' } ],\n  179  	impl: (context,path) => model.modify(model._delete,path,{},context)\n  180  })\n  ...\n  182  jb.component('studio.make-local',{\n  183  	type: 'action',\n  184: 	params: [ {id: 'path' as: 'string' } ],\n  185  	impl: (context,path) => model.modify(model.makeLocal,path,{ctx: context},context)\n  186  })\n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n  180  \n  181  jb.component('studio.ref',{\n  182: 	params: [ {id: 'path' as: 'string' } ],\n  183  	impl: (context,path) => \n  184  		profileRefFromPathWithNotification(path,context)\n\nC:\\jbart5-ng\\projects\\studio\\studio-popups.ts:\n   97  \n   98  jb.component('studio.code-mirror-mode',{\n   99: 	params: [ {id: 'path' as: 'string' } ],\n  100  	impl: function(ctx,path) {\n  101  		if (path.match(/css/))\n\nC:\\jbart5-ng\\projects\\studio\\studio-properties.ts:\n  103  jb.component('studio.properties-in-tgp',{\n  104    type: 'control',\n  105:   params: [ {id: 'path' as: 'string' } ],\n  106    impl :{$: 'group',\n  107      style :{$: 'property-sheet.studio-properties'},\n  ...\n  156  jb.component('studio.property-label',{\n  157  	type: 'control',\n  158: 	params: [ {id: 'path' as: 'string' } ],\n  159  	impl :{$: 'label', \n  160  		title :{$: 'studio.prop-name', path: '%$path%' },\n  ...\n  219  jb.component('studio.property-boolean',{\n  220  	type: 'control',\n  221: 	params: [ {id: 'path' as: 'string' } ],\n  222  	impl :{$: 'editable-boolean',\n  223  		style: {$: 'editable-boolean.studio-slide-toggle'},\n  ...\n  232  jb.component('studio.property-enum',{\n  233  	type: 'control',\n  234: 	params: [ {id: 'path' as: 'string' } ],\n  235  	impl :{$: 'picklist', \n  236  		style :{$: 'picklist.studio-enum'},\n  ...\n  243  jb.component('studio.property-slider', {\n  244  	type: 'control',\n  245: 	params: [ {id: 'path' as: 'string' } ],\n  246  	impl :{$: 'editable-number', \n  247  		$vars: { \n  ...\n  350  jb.component('studio.property-custom-style', {\n  351    type: 'control', \n  352:   params: [ {id: 'path' as: 'string' } ], \n  353    impl :{$: 'group', \n  354      title :{$: 'studio.prop-name', path: '%$path%' }, \n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n  508  \n  509  jb.component('studio.short-title',{\n  510: 	params: [ {id: 'path' as: 'string' } ],\n  511  	impl: (context,path) => model.shortTitle(path)\n  512  })\n  513  \n  514  jb.component('studio.val',{\n  515: 	params: [ {id: 'path' as: 'string' } ],\n  516  	impl: (context,path) => \n  517  		model.val(path)\n  ...\n  519  \n  520  jb.component('studio.is-primitive-value', {\n  521:   params: [ {id: 'path' as: 'string' } ],\n  522    impl: (context,path) => \n  523        typeof model.val(path) == 'string'\n  ...\n  542  \n  543  jb.component('studio.short-title', {\n  544: 	params: [ {id: 'path' as: 'string' } ],\n  545  	impl: (context,path) => \n  546  		model.shortTitle(path)\n  ...\n  557  \n  558  jb.component('studio.non-control-children',{\n  559: 	params: [ {id: 'path' as: 'string' } ],\n  560  	impl: (context,path) => \n  561  		model.children(path,'non-controls')\n  ...\n  563  \n  564  jb.component('studio.array-children',{\n  565: 	params: [ {id: 'path' as: 'string' } ],\n  566  	impl: (context,path) => \n  567  		model.children(path,'array')\n  ...\n  569  \n  570  jb.component('studio.compName',{\n  571: 	params: [ {id: 'path' as: 'string' } ],\n  572  	impl: (context,path) => model.compName(path) || ''\n  573  })\n  574  \n  575  jb.component('studio.paramDef',{\n  576: 	params: [ {id: 'path' as: 'string' } ],\n  577  	impl: (context,path) => model.paramDef(path)\n  578  })\n  579  \n  580  jb.component('studio.enum-options',{\n  581: 	params: [ {id: 'path' as: 'string' } ],\n  582  	impl: (context,path) => \n  583  		((model.paramDef(path) || {}).options ||'').split(',').map(x=>{return {code:x,text:x}})\n  ...\n  585  \n  586  jb.component('studio.prop-name',{\n  587: 	params: [ {id: 'path' as: 'string' } ],\n  588  	impl: (context,path) => \n  589  		model.propName(path)\n  ...\n  591  \n  592  jb.component('studio.more-params',{\n  593: 	params: [ {id: 'path' as: 'string' } ],\n  594  	impl: (context,path) => \n  595          model.jbEditorMoreParams(path)\n  ...\n  598  \n  599  jb.component('studio.compName-ref',{\n  600: 	params: [ {id: 'path' as: 'string' } ],\n  601  	impl: (context,path) => { return {\n  602  			$jb_val: function(value) {\n  ...\n  632  jb.component('studio.wrapWithGroup', {\n  633  	type: 'action',\n  634: 	params: [ {id: 'path' as: 'string' } ],\n  635  	impl: (context,path) => \n  636  		model.modify(model.wrapWithGroup, path, {},context)\n  ...\n  639  jb.component('studio.addProperty', {\n  640  	type: 'action',\n  641: 	params: [ {id: 'path' as: 'string' } ],\n  642  	impl: (context,path) => \n  643  		model.modify(model.addProperty, path, {},context)\n  ...\n  646  jb.component('studio.wrapWithPipeline', {\n  647  	type: 'action',\n  648: 	params: [ {id: 'path' as: 'string' } ],\n  649  	impl: (context,path) => \n  650  		model.modify(model.wrapWithPipeline, path, {},context)\n  ...\n  673  jb.component('studio.newArrayItem',{\n  674  	type: 'action',\n  675: 	params: [ {id: 'path' as: 'string' } ],\n  676  	impl: (context,path) => \n  677  		model.modify(model.addArrayItem, path, {},context)\n  ...\n  681  jb.component('studio.delete',{\n  682  	type: 'action',\n  683: 	params: [ {id: 'path' as: 'string' } ],\n  684  	impl: (context,path) => model.modify(model._delete,path,{},context)\n  685  })\n  ...\n  687  jb.component('studio.make-local',{\n  688  	type: 'action',\n  689: 	params: [ {id: 'path' as: 'string' } ],\n  690  	impl: (context,path) => model.modify(model.makeLocal,path,{ctx: context},context)\n  691  })\n\nC:\\jbart5-ng\\projects\\studio\\studio-undo.ts:\n   51  \n   52  jb.component('studio.copy', {\n   53: 	params: [ {id: 'path' as: 'string' } ],\n   54  	impl: (ctx,path) => \n   55  		undo.copy(ctx,path)\n   ..\n   57  \n   58  jb.component('studio.paste', {\n   59: 	params: [ {id: 'path' as: 'string' } ],\n   60  	impl: (ctx,path) => \n   61  		undo.paste(ctx,path)\n\n48 matches across 7 files\n\n\nSearching 120 files for \"jb-path\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\jb-ui.ts:\n  161  \n  162  		this.callerPath = (context.path.indexOf('~') == -1 && context.componentContext) ? context.componentContext.callerPath:  context.path;\n  163: 		jb.path(options, ['atts','jb-path'], this.callerPath); // for pick & edit\n  164  \n  165  		(context.params.features && context.params.features(context) || []).forEach(f => this.jbExtend(f,context))\n\nC:\\jbart5-ng\\src\\ui\\styles.js:\n   43  		};\n   44  		return jb_ui.Comp(jb.extend({ \n   45: 			jbTemplate: `<div jb-path=\"${ctx.path}\">${html}</div>`, //jb_ui.parseHTML(`<div>${html || ''}</div>`).innerHTML, \n   46  			css: css, \n   47  			featuresOptions: features(),\n\nC:\\jbart5-ng\\projects\\studio\\studio-pick-dialog.ts:\n   99  		  	.filter(x=>x.length > 0)\n  100  		  	.do(profElem=> {\n  101: 		  		ctx.vars.pickPath.path = profElem.attr('jb-path');\n  102  		  		showBox(cmp,profElem,_window,previewOffset);\n  103  		  		jb_ui.apply(ctx);\n  ...\n  116  	return $($el.get().concat($el.parents().get()))\n  117  		.filter((i,e) => \n  118: 			$(e).attr('jb-path') )\n  119  		.first();\n  120  }\n  ...\n  132  	cmp.height = profElem.outerHeight();\n  133  \n  134: 	cmp.title = model.shortTitle(profElem.attr('jb-path'));\n  135  \n  136  	var $el = $(cmp.elementRef.nativeElement);\n  ...\n  150  		var _window = jbart.previewWindow || window;\n  151  		if (!_window) return;\n  152: 		var elems = _window.document.querySelectorAll('[jb-path=\"'+ path +'\"]');\n  153  		if (elems.length == 0) {// studio\n  154: 			elems = window.document.querySelectorAll('[jb-path=\"'+ path +'\"]');\n  155  			if (elems.length)\n  156  				_window = window;\n\nC:\\jbart5-ng\\projects\\studio\\studio-testers.ts:\n   46  \n   47  \n   48: jb.component('jb-path-test', {\n   49    type: 'test',\n   50    params: [\n   ..\n   66          .map(res=>{\n   67            try {\n   68:             var match = Array.from(res.element.querySelectorAll(`[jb-path=\"${static_path}\"]`));\n   69            } catch(e) {\n   70              var match = [];\n   ..\n   73              return success('dynamic counter');\n   74            else\n   75:             return failure('dynamic counter', 'jb-path error: ' + staticPath + ' found ' + match.length +' times. expecting ' + expectedDynamicCounter + ' occurrences');\n   76        }).take(1);\n   77  \n\nC:\\jbart5-ng\\projects\\studio\\studio-utils.ts:\n    1  import {jb} from 'jb-core';\n    2: import * as jb_path from 'jb-path';\n    3  import * as jb_ui from 'jb-ui';\n    4  import * as jb_rx from 'jb-ui/jb-rx';\n\nC:\\jbart5-ng\\projects\\studio-helper\\path-tests.ts:\n    2  \n    3  jb.component('path-test.single-control', {\n    4: 	impl :{$: 'jb-path-test', \n    5  	 	$vars: { tst: 10 },\n    6  		controlWithMark: {$: 'group', \n    .\n   14  \n   15  jb.component('path-test.pt-by-example', {\n   16: 	 impl :{$: 'jb-path-test', \n   17  	 	$vars: { tst: 10 },\n   18  		controlWithMark: {$: 'group', \n   ..\n   29  \n   30  jb.component('path-test.using-global', {\n   31: 	 impl :{$: 'jb-path-test', \n   32  	 	$vars: { tst: 10 },\n   33  		controlWithMark: {$: 'group', \n   ..\n   54  \n   55  jb.component('path-test.inner-in-template', {\n   56: 	 impl :{$: 'jb-path-test', \n   57  	 	$vars: { tst: 10 },\n   58  		controlWithMark: {$: 'group', \n   ..\n   68  \n   69  jb.component('path-test.pipeline-sugar1', {\n   70: 	 impl :{$: 'jb-path-test', \n   71  	 	$vars: { tst: 10 },\n   72  		controlWithMark: {$: 'group', \n   ..\n   80  \n   81  jb.component('path-test.pipeline-sugar2', {\n   82: 	 impl :{$: 'jb-path-test', \n   83  	 	$vars: { tst: 10 },\n   84  		controlWithMark: {$: 'group', \n   ..\n   92  \n   93  jb.component('path-test.pipeline-no-sugar', {\n   94: 	 impl :{$: 'jb-path-test', \n   95  	 	$vars: { tst: 10 },\n   96  		controlWithMark: {$: 'group', \n   ..\n  104  \n  105  jb.component('path-test.pipeline-one-elem', {\n  106: 	 impl :{$: 'jb-path-test', \n  107  	 	$vars: { tst: 10 },\n  108  		controlWithMark: {$: 'group', \n  ...\n  116  \n  117  jb.component('path-test.filter-sugar', {\n  118: 	 impl :{$: 'jb-path-test', \n  119  	 	$vars: { tst: 10 },\n  120  		controlWithMark: {$: 'group', \n  ...\n  128  \n  129  jb.component('path-test.actions-sugar', {\n  130: 	 impl :{$: 'jb-path-test', \n  131  	 	$vars: { tst: 10 },\n  132  		controlWithMark: {$: 'group', \n  ...\n  140  \n  141  jb.component('path-test.filter-no-sugar', {\n  142: 	 impl :{$: 'jb-path-test', \n  143  	 	$vars: { tst: 10 },\n  144  		controlWithMark: {$: 'group', \n  ...\n  152  \n  153  // jb.component('path-test.asIs', {\n  154: // // 	 impl :{$: 'jb-path-test', \n  155  // 	 	$vars: { tst: 10 },\n  156  // 		controlWithMark: {$: 'group', \n\nC:\\jbart5-ng\\src\\testing\\ui-testers-ctrls.ts:\n   54  			total: ctx =>\n   55  				ctx.exp('%$tests%')\n   56: 					.reduce((acc,test)=>acc+(test.val.impl.$ == 'jb-path-test' ? 2: 1),0)\n   57  \n   58  		},\n\n24 matches across 7 files\n\n\nSearching 120 files for \"jb-path-test\" (case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-testers.ts:\n   46  \n   47  \n   48: jb.component('jb-path-test', {\n   49    type: 'test',\n   50    params: [\n\nC:\\jbart5-ng\\projects\\studio-helper\\path-tests.ts:\n    2  \n    3  jb.component('path-test.single-control', {\n    4: 	impl :{$: 'jb-path-test', \n    5  	 	$vars: { tst: 10 },\n    6  		controlWithMark: {$: 'group', \n    .\n   14  \n   15  jb.component('path-test.pt-by-example', {\n   16: 	 impl :{$: 'jb-path-test', \n   17  	 	$vars: { tst: 10 },\n   18  		controlWithMark: {$: 'group', \n   ..\n   29  \n   30  jb.component('path-test.using-global', {\n   31: 	 impl :{$: 'jb-path-test', \n   32  	 	$vars: { tst: 10 },\n   33  		controlWithMark: {$: 'group', \n   ..\n   54  \n   55  jb.component('path-test.inner-in-template', {\n   56: 	 impl :{$: 'jb-path-test', \n   57  	 	$vars: { tst: 10 },\n   58  		controlWithMark: {$: 'group', \n   ..\n   68  \n   69  jb.component('path-test.pipeline-sugar1', {\n   70: 	 impl :{$: 'jb-path-test', \n   71  	 	$vars: { tst: 10 },\n   72  		controlWithMark: {$: 'group', \n   ..\n   80  \n   81  jb.component('path-test.pipeline-sugar2', {\n   82: 	 impl :{$: 'jb-path-test', \n   83  	 	$vars: { tst: 10 },\n   84  		controlWithMark: {$: 'group', \n   ..\n   92  \n   93  jb.component('path-test.pipeline-no-sugar', {\n   94: 	 impl :{$: 'jb-path-test', \n   95  	 	$vars: { tst: 10 },\n   96  		controlWithMark: {$: 'group', \n   ..\n  104  \n  105  jb.component('path-test.pipeline-one-elem', {\n  106: 	 impl :{$: 'jb-path-test', \n  107  	 	$vars: { tst: 10 },\n  108  		controlWithMark: {$: 'group', \n  ...\n  116  \n  117  jb.component('path-test.filter-sugar', {\n  118: 	 impl :{$: 'jb-path-test', \n  119  	 	$vars: { tst: 10 },\n  120  		controlWithMark: {$: 'group', \n  ...\n  128  \n  129  jb.component('path-test.actions-sugar', {\n  130: 	 impl :{$: 'jb-path-test', \n  131  	 	$vars: { tst: 10 },\n  132  		controlWithMark: {$: 'group', \n  ...\n  140  \n  141  jb.component('path-test.filter-no-sugar', {\n  142: 	 impl :{$: 'jb-path-test', \n  143  	 	$vars: { tst: 10 },\n  144  		controlWithMark: {$: 'group', \n  ...\n  152  \n  153  // jb.component('path-test.asIs', {\n  154: // // 	 impl :{$: 'jb-path-test', \n  155  // 	 	$vars: { tst: 10 },\n  156  // 		controlWithMark: {$: 'group', \n\nC:\\jbart5-ng\\src\\testing\\ui-testers-ctrls.ts:\n   54  			total: ctx =>\n   55  				ctx.exp('%$tests%')\n   56: 					.reduce((acc,test)=>acc+(test.val.impl.$ == 'jb-path-test' ? 2: 1),0)\n   57  \n   58  		},\n\n14 matches across 3 files\n\n\nSearching 120 files for \" ',\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\css-features.js:\n   14    params: [\n   15      { id: 'width', essential: true, as: 'number' },\n   16:     { id: 'overflow', as: 'string', options: ',auto,hidden,scroll'},\n   17:     { id: 'minMax', as: 'string', options: ',min,max'},\n   18    ],\n   19    impl: (context,width,overflow,minMax) => \n   ..\n   25    params: [\n   26      { id: 'height', essential: true, as: 'number' },\n   27:     { id: 'overflow', as: 'string', options: ',auto,hidden,scroll'},\n   28:     { id: 'minMax', as: 'string', options: ',min,max'},\n   29    ],\n   30    impl: (context,height,overflow,minMax) =>\n   ..\n   76      { id: 'opacity', as: 'number', min: 0, max: 1, defaultValue: 0.75, step: 0.01 },\n   77      { id: 'horizontal', as: 'number', defaultValue: 10},\n   78:     { id: 'vertical ', as: 'number', defaultValue: 10},\n   79      { id: 'selector', as: 'string' },\n   80    ],\n\nC:\\jbart5-ng\\src\\ui\\styles\\layout-styles.ts:\n   36    type: 'group.style',\n   37    params: [\n   38:       { id: 'align', as: 'string', options: ',flex-start,flex-end,center,space-between,space-around' },\n   39:       { id: 'direction', as: 'string', options: ',row,row-reverse,column,column-reverse' },\n   40        { id: 'wrap', as: 'string', options:',wrap' },\n   41    ],\n\nC:\\jbart5-ng\\src\\ui\\tree\\json-tree.ts:\n    4  	type: 'tree.nodeModel',\n    5  	params: [\n    6: 		{ id: 'object ',},\n    7  		{ id: 'rootPath', as: 'string'}\n    8  	],\n\nC:\\jbart5-ng\\projects\\jbart-site\\jbart-site.ts:\n  121                }, \n  122                {$: 'text', \n  123:                 text: 'Visual development was broken in the world of web development, mostly because pre-defined visual components could not be re-used anymore. The industry accepts the fact that complex web apps can be developed only textually. ', \n  124                  style :{$: 'text.paragraph' }, \n  125                  title: 'text'\n  126                }, \n  127                {$: 'text', \n  128:                 text: 'jBart suggests a revolutionary approach for visual development of complex apps that actually works. ', \n  129                  style :{$: 'text.paragraph' }, \n  130                  title: 'text'\n\nC:\\jbart5-ng\\projects\\studio\\studio-main.ts:\n   26            {$: 'group', \n   27              url: '/projects/studio/css/logo470x200.png', \n   28:             title: 'title and menu ', \n   29              style :{$: 'layout.vertical', spacing: '14' }, \n   30              controls: [\n   31                {$: 'label', \n   32:                 title: 'message ', \n   33                  style :{$: 'customStyle', \n   34:                   template: '<span class=\"studio-message\">{{title}}</span> ', \n   35                    css: `{ position: absolute;\n   36                      color: white;  padding: 20px;  background: #327DC8;\n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n   41  	if (!comp) {\n   42  		debugger;\n   43: 		console.log('can not find path ',path);\n   44  		return;\n   45  	}\n\nC:\\jbart5-ng\\projects\\studio\\studio-testers.ts:\n   29    params: [\n   30      { id: 'path', as: 'string' },\n   31:     { id: 'childrenType', as: 'string', type: ',jb-editor' },\n   32      { id: 'expectedResult', type: 'boolean', dynamic: true, as: 'boolean' }\n   33    ],\n\nC:\\jbart5-ng\\projects\\studio-helper\\path-tests.ts:\n   48  	type: 'control',\n   49  	params: [\n   50: 		{ id: 'ctrl ', type: 'control', dynamic: true }\n   51  	],\n   52  	impl :{$: 'group', controls :{ $call: 'ctrl'} }\n\nC:\\jbart5-ng\\src\\core\\components.js:\n  481  	type: 'data',\n  482  	params: [\n  483: 		{ id: 'separator', as: 'string', defaultValue: ',' },\n  484: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  485  		{ id: 'part', type:'enum', values: 'first,second,last,but first,but last' }\n  486  	],\n  ...\n  754  	params: [\n  755  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  756: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  757  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  758  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n  ...\n  773  	params: [\n  774  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  775: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  776  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  777  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n\nC:\\jbart5-ng\\src\\core\\pretty-print.js:\n   78                  printProp(obj,prop,path);\n   79                  if (index < array.length -1)\n   80:                   result += ', ';//newLine();\n   81                }\n   82            });\n   ..\n  115        printValue(val,path+'~'+index);\n  116        if (index < array.length -1) {\n  117:         result += ', ';\n  118          newLine();\n  119        }\n\nC:\\jbart5-ng\\src\\testing\\ui-testers-ctrls.ts:\n  215  // 				init: function(cmp) {\n  216  // 					cmp.result = 'start: ';\n  217: // 					ctx.run(profile.result,{ as: 'observable'}).map(ctx=>ctx.data).subscribe(x=>cmp.result += x + ', ');\n  218  // 				}\n  219  // 			}\n\nC:\\jbart5-ng\\src\\testing\\ui-testers.ts:\n   95  // 				init: function(cmp) {\n   96  // 					cmp.result = 'start: ';\n   97: // 					ctx.run(profile.result,{ as: 'observable'}).map(ctx=>ctx.data).subscribe(x=>cmp.result += x + ', ');\n   98  // 				}\n   99  // 			}\n\n24 matches across 12 files\n\n\nSearching 120 files for \"[a-z] ',\" (regex, case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\css-features.js:\n   76      { id: 'opacity', as: 'number', min: 0, max: 1, defaultValue: 0.75, step: 0.01 },\n   77      { id: 'horizontal', as: 'number', defaultValue: 10},\n   78:     { id: 'vertical ', as: 'number', defaultValue: 10},\n   79      { id: 'selector', as: 'string' },\n   80    ],\n\nC:\\jbart5-ng\\src\\ui\\tree\\json-tree.ts:\n    4  	type: 'tree.nodeModel',\n    5  	params: [\n    6: 		{ id: 'object ',},\n    7  		{ id: 'rootPath', as: 'string'}\n    8  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-main.ts:\n   26            {$: 'group', \n   27              url: '/projects/studio/css/logo470x200.png', \n   28:             title: 'title and menu ', \n   29              style :{$: 'layout.vertical', spacing: '14' }, \n   30              controls: [\n   31                {$: 'label', \n   32:                 title: 'message ', \n   33                  style :{$: 'customStyle', \n   34                    template: '<span class=\"studio-message\">{{title}}</span> ', \n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n   41  	if (!comp) {\n   42  		debugger;\n   43: 		console.log('can not find path ',path);\n   44  		return;\n   45  	}\n\nC:\\jbart5-ng\\projects\\studio-helper\\path-tests.ts:\n   48  	type: 'control',\n   49  	params: [\n   50: 		{ id: 'ctrl ', type: 'control', dynamic: true }\n   51  	],\n   52  	impl :{$: 'group', controls :{ $call: 'ctrl'} }\n\nC:\\jbart5-ng\\src\\core\\components.js:\n  482  	params: [\n  483  		{ id: 'separator', as: 'string', defaultValue: ',' },\n  484: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  485  		{ id: 'part', type:'enum', values: 'first,second,last,but first,but last' }\n  486  	],\n  ...\n  754  	params: [\n  755  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  756: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  757  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  758  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n  ...\n  773  	params: [\n  774  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  775: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  776  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  777  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n\n9 matches across 6 files\n\n\nSearching 120 files for \"[a-z] ',\" (regex, case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\tree\\json-tree.ts:\n    4  	type: 'tree.nodeModel',\n    5  	params: [\n    6: 		{ id: 'object ',},\n    7  		{ id: 'rootPath', as: 'string'}\n    8  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-main.ts:\n   26            {$: 'group', \n   27              url: '/projects/studio/css/logo470x200.png', \n   28:             title: 'title and menu ', \n   29              style :{$: 'layout.vertical', spacing: '14' }, \n   30              controls: [\n   31                {$: 'label', \n   32:                 title: 'message ', \n   33                  style :{$: 'customStyle', \n   34                    template: '<span class=\"studio-message\">{{title}}</span> ', \n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n   41  	if (!comp) {\n   42  		debugger;\n   43: 		console.log('can not find path ',path);\n   44  		return;\n   45  	}\n\nC:\\jbart5-ng\\projects\\studio-helper\\path-tests.ts:\n   48  	type: 'control',\n   49  	params: [\n   50: 		{ id: 'ctrl ', type: 'control', dynamic: true }\n   51  	],\n   52  	impl :{$: 'group', controls :{ $call: 'ctrl'} }\n\nC:\\jbart5-ng\\src\\core\\components.js:\n  482  	params: [\n  483  		{ id: 'separator', as: 'string', defaultValue: ',' },\n  484: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  485  		{ id: 'part', type:'enum', values: 'first,second,last,but first,but last' }\n  486  	],\n  ...\n  754  	params: [\n  755  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  756: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  757  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  758  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n  ...\n  773  	params: [\n  774  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  775: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  776  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  777  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n\n8 matches across 5 files\n\n\nSearching 120 files for \"[a-z] ',\" (regex, case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-main.ts:\n   26            {$: 'group', \n   27              url: '/projects/studio/css/logo470x200.png', \n   28:             title: 'title and menu ', \n   29              style :{$: 'layout.vertical', spacing: '14' }, \n   30              controls: [\n   31                {$: 'label', \n   32:                 title: 'message ', \n   33                  style :{$: 'customStyle', \n   34                    template: '<span class=\"studio-message\">{{title}}</span> ', \n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n   41  	if (!comp) {\n   42  		debugger;\n   43: 		console.log('can not find path ',path);\n   44  		return;\n   45  	}\n\nC:\\jbart5-ng\\projects\\studio-helper\\path-tests.ts:\n   48  	type: 'control',\n   49  	params: [\n   50: 		{ id: 'ctrl ', type: 'control', dynamic: true }\n   51  	],\n   52  	impl :{$: 'group', controls :{ $call: 'ctrl'} }\n\nC:\\jbart5-ng\\src\\core\\components.js:\n  482  	params: [\n  483  		{ id: 'separator', as: 'string', defaultValue: ',' },\n  484: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  485  		{ id: 'part', type:'enum', values: 'first,second,last,but first,but last' }\n  486  	],\n  ...\n  754  	params: [\n  755  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  756: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  757  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  758  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n  ...\n  773  	params: [\n  774  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  775: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  776  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  777  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n\n7 matches across 4 files\n\n\nSearching 120 files for \"[a-z] ',\" (regex, case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-main.ts:\n   30              controls: [\n   31                {$: 'label', \n   32:                 title: 'message ', \n   33                  style :{$: 'customStyle', \n   34                    template: '<span class=\"studio-message\">{{title}}</span> ', \n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n   41  	if (!comp) {\n   42  		debugger;\n   43: 		console.log('can not find path ',path);\n   44  		return;\n   45  	}\n\nC:\\jbart5-ng\\projects\\studio-helper\\path-tests.ts:\n   48  	type: 'control',\n   49  	params: [\n   50: 		{ id: 'ctrl ', type: 'control', dynamic: true }\n   51  	],\n   52  	impl :{$: 'group', controls :{ $call: 'ctrl'} }\n\nC:\\jbart5-ng\\src\\core\\components.js:\n  482  	params: [\n  483  		{ id: 'separator', as: 'string', defaultValue: ',' },\n  484: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  485  		{ id: 'part', type:'enum', values: 'first,second,last,but first,but last' }\n  486  	],\n  ...\n  754  	params: [\n  755  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  756: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  757  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  758  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n  ...\n  773  	params: [\n  774  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  775: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  776  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  777  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n\n6 matches across 4 files\n\n\nSearching 120 files for \"[a-z] ',\" (regex, case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-main.ts:\n   30              controls: [\n   31                {$: 'label', \n   32:                 title: 'message ', \n   33                  style :{$: 'customStyle', \n   34                    template: '<span class=\"studio-message\">{{title}}</span> ', \n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n   41  	if (!comp) {\n   42  		debugger;\n   43: 		console.log('can not find path ',path);\n   44  		return;\n   45  	}\n\nC:\\jbart5-ng\\src\\core\\components.js:\n  482  	params: [\n  483  		{ id: 'separator', as: 'string', defaultValue: ',' },\n  484: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  485  		{ id: 'part', type:'enum', values: 'first,second,last,but first,but last' }\n  486  	],\n  ...\n  754  	params: [\n  755  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  756: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  757  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  758  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n  ...\n  773  	params: [\n  774  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  775: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  776  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  777  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n\n5 matches across 3 files\n\n\nSearching 120 files for \"[a-z] ',\" (regex, case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n   41  	if (!comp) {\n   42  		debugger;\n   43: 		console.log('can not find path ',path);\n   44  		return;\n   45  	}\n\nC:\\jbart5-ng\\src\\core\\components.js:\n  482  	params: [\n  483  		{ id: 'separator', as: 'string', defaultValue: ',' },\n  484: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  485  		{ id: 'part', type:'enum', values: 'first,second,last,but first,but last' }\n  486  	],\n  ...\n  754  	params: [\n  755  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  756: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  757  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  758  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n  ...\n  773  	params: [\n  774  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  775: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  776  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  777  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n\n4 matches across 2 files\n\n\nSearching 120 files for \"[a-z] ',\" (regex, case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n   41  	if (!comp) {\n   42  		debugger;\n   43: 		console.log('can not find path ',path);\n   44  		return;\n   45  	}\n\nC:\\jbart5-ng\\src\\core\\components.js:\n  754  	params: [\n  755  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  756: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  757  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  758  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n  ...\n  773  	params: [\n  774  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  775: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  776  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  777  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n\n3 matches across 2 files\n\n\nSearching 120 files for \"[a-z] ',\" (regex, case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n   41  	if (!comp) {\n   42  		debugger;\n   43: 		console.log('can not find path ',path);\n   44  		return;\n   45  	}\n\nC:\\jbart5-ng\\src\\core\\components.js:\n  773  	params: [\n  774  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  775: 		{ id: 'text ', as: 'string', defaultValue: '%%'},\n  776  		{ id: 'regex', type: 'boolean', as: 'boolean', description: 'separator is regex' },\n  777  		{ id: 'keepSeparator', type: 'boolean', as: 'boolean' }\n\n2 matches across 2 files\n\n\nSearching 120 files for \"[a-z] ',\" (regex, case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n   41  	if (!comp) {\n   42  		debugger;\n   43: 		console.log('can not find path ',path);\n   44  		return;\n   45  	}\n\n1 match in 1 file\n\n\nSearching 120 files for \"params\" (regex, case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\button.js:\n    5  jb.component('button', {\n    6    type: \"control\",\n    7:   params: [\n    8      { id: 'title', as: 'string', dynamic: true, essential: true, defaultValue: 'Hello' },\n    9      { id: 'action', type: 'action', essential: true, dynamic: true },\n   ..\n   13    ],\n   14    impl: function(context) {\n   15:     if (context.params.$click) try { context.params.action() } catch (e) { jb.logException(e) } // for test debug\n   16      return jb_ui.ctrl(context).jbExtend({\n   17        beforeInit: function(cmp) {\n   18:         cmp.title = context.params.title();\n   19:         cmp.clicked = jb_ui.wrapWithLauchingElement(context.params.action, context, cmp.elementRef);\n   20        }\n   21      })\n   ..\n   32  jb.component('button.x', {\n   33    type: 'button.style',\n   34:   params: [\n   35      { id: 'size', as: 'number', defaultValue: '21'}\n   36    ],\n\nC:\\jbart5-ng\\src\\ui\\css-features.js:\n    3  jb.component('css', {\n    4    type: 'feature,dialogFeature',\n    5:   params: [\n    6      { id: 'css', essential: true, as: 'string' },\n    7    ],\n    .\n   12  jb.component('css.width', {\n   13    type: 'feature,dialogFeature',\n   14:   params: [\n   15      { id: 'width', essential: true, as: 'number' },\n   16      { id: 'overflow', as: 'string', options: ',auto,hidden,scroll'},\n   ..\n   23  jb.component('css.height', {\n   24    type: 'feature,dialogFeature',\n   25:   params: [\n   26      { id: 'height', essential: true, as: 'number' },\n   27      { id: 'overflow', as: 'string', options: ',auto,hidden,scroll'},\n   ..\n   34  jb.component('css.padding', {\n   35    type: 'feature,dialogFeature',\n   36:   params: [\n   37      { id: 'top', as: 'number' },\n   38      { id: 'left', as: 'number' },\n   ..\n   43    impl: (ctx) => {\n   44      var css = ['top','left','right','bottom']\n   45:       .filter(x=>ctx.params[x] != null)\n   46:       .map(x=> `padding-${x}: ${ctx.params[x]}px`)\n   47        .join('; ');\n   48:     return {css: `${ctx.params.selector} {${css}}`};\n   49    }\n   50  })\n   ..\n   52  jb.component('css.margin', {\n   53    type: 'feature,dialogFeature',\n   54:   params: [\n   55      { id: 'top', as: 'number' },\n   56      { id: 'left', as: 'number' },\n   ..\n   61    impl: (ctx) => {\n   62      var css = ['top','left','right','bottom']\n   63:       .filter(x=>ctx.params[x] != null)\n   64:       .map(x=> `margin-${x}: ${ctx.params[x]}px`)\n   65        .join('; ');\n   66:     return {css: `${ctx.params.selector} {${css}}`};\n   67    }\n   68  })\n   ..\n   70  jb.component('css.box-shadow', {\n   71    type: 'feature,dialogFeature',\n   72:   params: [\n   73      { id: 'blurRadius', as: 'number', defaultValue: 5 },\n   74      { id: 'spreadRadius', as: 'number', defaultValue: 0 },\n   ..\n   88  jb.component('css.border', {\n   89    type: 'feature,dialogFeature',\n   90:   params: [\n   91      { id: 'width',as: 'number', defaultValue: 1},\n   92      { id: 'side', as: 'string', options: 'top,left,bottom,right' },\n\nC:\\jbart5-ng\\src\\ui\\dialog.js:\n    3  jb.component('openDialog', {\n    4  	type: 'action',\n    5: 	params: [\n    6  		{ id: 'id', as: 'string' },\n    7  		{ id: 'style', type: 'dialog.style', dynamic: true, defaultValue: { $:'dialog.default' }	},\n    .\n   14  	],\n   15  	impl: function(context,id) {\n   16: 		var modal = context.params.modal;\n   17  		var dialog = { \n   18  			id: id, \n   19: 			onOK: context.params.onOK, \n   20  			modal: modal, \n   21  			$: $('div'), \n   ..\n   28  		dialog.comp = jb_ui.ctrl(ctx).jbExtend({\n   29  			beforeInit: function(cmp) {\n   30: 				cmp.title = ctx.params.title(ctx);\n   31  				cmp.dialog = dialog;\n   32  				cmp.dialog.$el = $(cmp.elementRef.nativeElement);\n   ..\n   34  \n   35  				cmp.dialogClose = dialog.close;\n   36: 				cmp.contentComp = ctx.params.content(ctx);\n   37: 				cmp.menuComp = ctx.params.menu(ctx);\n   38: 				cmp.hasMenu = !!ctx.params.menu.profile;\n   39  			}\n   40  		});\n   ..\n   45  jb.component('closeContainingPopup', {\n   46  	type: 'action',\n   47: 	params: [\n   48  		{ id: 'OK', type: 'boolean', as: 'boolean', defaultValue: true}\n   49  	],\n   ..\n   80  jb.component('dialogFeature.uniqueDialog', {\n   81  	type: 'dialogFeature',\n   82: 	params: [\n   83  		{ id: 'id', as: 'string' },\n   84  		{ id: 'remeberLastLocation', type: 'boolean', as: 'boolean' }\n   ..\n  109  jb.component('dialogFeature.nearLauncherLocation', {\n  110  	type: 'dialogFeature',\n  111: 	params: [\n  112  		{ id: 'offsetLeft', as: 'number', defaultValue: 0 },\n  113  		{ id: 'offsetTop', as: 'number' , defaultValue: 0 },\n  ...\n  137  jb.component('dialogFeature.launcherLocationNearSelectedNode', {\n  138  	type: 'dialogFeature',\n  139: 	params: [\n  140  		{ id: 'offsetLeft', as: 'number' },\n  141  		{ id: 'offsetTop', as: 'number' },\n  ...\n  156  jb.component('dialogFeature.onClose', {\n  157  	type: 'dialogFeature',\n  158: 	params: [\n  159  		{ id: 'action', type: 'action', dynamic: true}\n  160  	],\n  ...\n  232  jb.component('dialogFeature.maxZIndexOnClick', {\n  233  	type: 'dialogFeature',\n  234: 	params: [\n  235  		{ id: 'minZIndex', as: 'number'}\n  236  	],\n  ...\n  257  jb.component('dialogFeature.dragTitle', {\n  258  	type: 'dialogFeature',\n  259: 	params: [\n  260  		{ id: 'id', as: 'string' }\n  261  	],\n\nC:\\jbart5-ng\\src\\ui\\divider.js:\n    5  jb.component('divider', {\n    6      type: 'control',\n    7:     params: [\n    8          { id: 'style', type: 'divider.style', defaultValue: { $: 'divider.br' }, dynamic: true },\n    9          { id: 'title', as: 'string', defaultValue: 'divider' },\n   ..\n   16  jb.component('divider.br', {\n   17      type: 'divider.style',\n   18:     params: [\n   19      ],\n   20      impl :{$: 'customStyle', \n\nC:\\jbart5-ng\\src\\ui\\editable-boolean.js:\n    6  jb.component('editable-boolean',{\n    7    type: 'control',\n    8:   params: [\n    9      { id: 'databind', as: 'ref'},\n   10      { id: 'style', type: 'editable-boolean.style', defaultValue: { $: 'editable-boolean.checkbox' }, dynamic: true },\n   ..\n   15    ],\n   16    impl: (ctx) => {\n   17:     var ctx2 = ctx.setVars({ field: jb_ui.twoWayBind(ctx.params.databind) });\n   18    	return jb_ui.ctrl(ctx2).jbExtend({\n   19    		beforeInit: function(cmp) {\n   ..\n   26  \n   27    			cmp.text = () => \n   28:           cmp.jbModel ? ctx.params.textForTrue : ctx.params.textForFalse;\n   29    		}\n   30    	});\n\nC:\\jbart5-ng\\src\\ui\\editable-number.ts:\n    6  jb.component('editable-number',{\n    7    type: 'control',\n    8:   params: [\n    9      { id: 'databind', as: 'ref'},\n   10      { id: 'title', as: 'string' , dynamic: true },\n\nC:\\jbart5-ng\\src\\ui\\editable-text.js:\n    5  jb.component('editable-text',{\n    6    type: 'control',\n    7:   params: [\n    8      { id: 'title', as: 'string' , dynamic: true },\n    9      { id: 'databind', as: 'ref'},\n   ..\n   12    ],\n   13    impl: ctx => \n   14:   	jb_ui.ctrl(ctx.setVars({ field: jb_ui.twoWayBind(ctx.params.databind) }))\n   15  });\n   16  \n\nC:\\jbart5-ng\\src\\ui\\features.js:\n    3  jb.component('group.wait', {\n    4    type: 'feature',\n    5:   params: [ \n    6      { id: 'for', essential: true },\n    7      { id: 'loadingControl', type: 'control', defaultValue: { $:'label', title: 'loading ...'} , dynamic: true },\n    .\n   16            cmp.jbGroupChildrenEm = jb_rx.observableFromCtx(context.setData(waitFor))\n   17              .flatMap(x=>{\n   18:                 var data = context.params.mapToResource(x);\n   19:                 jb.writeToResource(context.params.resource,data,context);\n   20                  return [context.vars.$model.controls(cmp.ctx.setData(data))];\n   21                })\n   ..\n   34  jb.component('group.data', {\n   35    type: 'feature',\n   36:   params: [\n   37      { id: 'data', essential: true, dynamic: true, as: 'ref' },\n   38      { id: 'itemVariable', as: 'string' },\n   ..\n   61  jb.component('group.watch', {\n   62    type: 'feature',\n   63:   params: [\n   64      { id: 'data', essential: true, dynamic: true },\n   65    ],\n   ..\n   85  jb.component('group-item.if', {\n   86    type: 'feature',\n   87:   params: [\n   88      { id: 'showCondition', type: 'boolean', as: 'boolean', essential: true },\n   89    ],\n   ..\n   97  jb.component('feature.init', {\n   98    type: 'feature',\n   99:   params: [\n  100      { id: 'action', type: 'action[]', essential: true, dynamic: true }\n  101    ],\n  ...\n  107  jb.component('feature.ng-attach-object', {\n  108    type: 'feature',\n  109:   params: [\n  110      { id: 'data', as: 'single', dynamic: true }\n  111    ],\n  ...\n  125  jb.component('feature.onEnter', {\n  126    type: 'feature',\n  127:   params: [\n  128      { id: 'action', type: 'action[]', essential: true, dynamic: true }\n  129    ],\n  ...\n  140          cmp.keydown.filter(e=> e.keyCode == 13)\n  141              .subscribe(()=>\n  142:               jb_ui.wrapWithLauchingElement(ctx.params.action, cmp.ctx, cmp.elementRef)())\n  143        },\n  144        observable: () => {},\n  ...\n  149  jb.component('ngAtts', {\n  150    type: 'feature',\n  151:   params: [\n  152      { id: 'atts', as: 'object' }\n  153    ],\n  ...\n  158  jb.component('feature.afterLoad', {\n  159    type: 'feature',\n  160:   params: [\n  161      { id: 'action', type: 'action[]', essential: true, dynamic: true }\n  162    ],\n  163    impl: function(context) { return  { \n  164:     afterViewInit: cmp => jb.delay(1).then(() => context.params.action(cmp.ctx))\n  165    }}\n  166  })\n  ...\n  168  jb.component('feature.emitter',{\n  169    type: 'feature',\n  170:   params: [\n  171      { id: 'varName', as: 'string'},\n  172    ],\n  ...\n  180  jb.component('var',{\n  181    type: 'feature',\n  182:   params: [\n  183      { id: 'name', as: 'string'},\n  184      { id: 'value', dynamic: true },\n  ...\n  193  jb.component('hidden', {\n  194    type: 'feature',\n  195:   params: [\n  196      { id: 'showCondition', type: 'boolean', essential: true, dynamic: true },\n  197    ],\n  ...\n  208  jb.component('field.style-on-focus', {\n  209    type: 'feature',\n  210:   params: [\n  211      { id: 'style', type: 'style', essential: true, dynamic: true },\n  212    ],\n  ...\n  219  jb.component('feature.keyboard-shortcut', {\n  220    type: 'feature',\n  221:   params: [\n  222      { id: 'key', as: 'string', description: 'e.g. Alt+C' },\n  223      { id: 'action', type: 'action', dynamic: true }\n\nC:\\jbart5-ng\\src\\ui\\field.js:\n    3  jb.component('field.default', {\n    4    type: 'feature',\n    5:   params: [\n    6      { id: 'value', type: 'data'},\n    7    ],\n    .\n   15  jb.component('field.subscribe', {\n   16    type: 'feature',\n   17:   params: [\n   18      { id: 'action', type: 'action', essential: true, dynamic: true },\n   19      { id: 'includeFirst', type: 'boolean', as: 'boolean'},\n   ..\n   34  jb.component('field.toolbar', {\n   35    type: 'feature',\n   36:   params: [\n   37      { id: 'toolbar', type: 'control', essential: true, dynamic: true },\n   38    ],\n\nC:\\jbart5-ng\\src\\ui\\group.js:\n    5  jb.component('group',{\n    6    type: 'control',\n    7:   params: [\n    8      { id: 'title', as: 'string' , dynamic: true },\n    9      { id: 'style', type: 'group.style', defaultValue: { $: 'group.section' }, essential: true , dynamic: true },\n   ..\n   22  \n   23          cmp.initGroup = function() {\n   24:           cmp.title = context.params.title(context);\n   25:           (cmp.jbGroupChildrenEm || jb_rx.Observable.of(context.params.controls(cmp.ctx)))\n   26                .merge(cmp.jbWatchGroupChildrenEm || jb_rx.Observable.of())\n   27                .subscribe(comps=> {\n   ..\n   56  jb.component('dynamic-controls', {\n   57    type: 'control',\n   58:   params: [\n   59      { id: 'controlItems', type: 'data', as: 'array', essential: true, dynamic: true },\n   60      { id: 'genericControl', type: 'control', essential: true, dynamic: true },\n   ..\n   87  jb.component('wait', {\n   88    type: 'control',\n   89:   params: [\n   90      { id: 'title', as: 'string' , dynamic: true },\n   91      { id: 'for', essential: true },\n\nC:\\jbart5-ng\\src\\ui\\http.ts:\n    6  \n    7  jb.component('http.get', {\n    8: 	params: [\n    9  		{ id: 'url', as: 'string' },\n   10  	],\n\nC:\\jbart5-ng\\src\\ui\\image.js:\n    5  jb.component('image',{\n    6  	type: 'control',\n    7: 	params: [\n    8  		{ id: 'url', as: 'string', dynamic:true },\n    9  		{ id: 'imageWidth', as: 'number' },\n   ..\n   17  	impl: function(context) {\n   18  		return jb_ui.ctrl(context).jbExtend({ init: function(cmp) {\n   19: 			var image = context.params;\n   20  			var units = image.units;\n   21  			if (image.width) cmp.width = image.width + units;\n\nC:\\jbart5-ng\\src\\ui\\itemlist-with-groups.js:\n    6  jb.component('itemlist-with-groups', {\n    7    type: 'control',\n    8:   params: [\n    9      { id: 'title', as: 'string' },\n   10      { id: 'items', as: 'array' , dynamic: true, essential: true },\n   ..\n   42  jb.component('itemlist.watch-items-with-heading', {\n   43    type: 'feature',\n   44:   params: [\n   45      { id: 'items', essential: true, dynamic: true },\n   46      { id: 'itemsArrayVariable', as: 'string' },\n   ..\n   87  jb.component('itemlist-heading.group-by', {\n   88    type: 'itemlist.group-by',\n   89:   params: [\n   90      { id: 'itemToGroupID', dynamic: true, defaultValue: { $: 'prefix', separator: '.' } },\n   91      { id: 'promoteGroups', type: 'data[]', as: 'array' },\n\nC:\\jbart5-ng\\src\\ui\\itemlist.js:\n    3  jb.component('itemlist', {\n    4    type: 'control',\n    5:   params: [\n    6      { id: 'title', as: 'string' },\n    7      { id: 'items', as: 'array' , dynamic: true, essential: true },\n    .\n   29  jb.component('itemlist.init', {\n   30    type: 'feature',\n   31:   params: [\n   32      { id: 'items', essential: true, dynamic: true },\n   33      { id: 'itemsArrayVariable', as: 'string' },\n   ..\n   77  jb.component('itemlist.divider', {\n   78    type: 'feature',\n   79:   params: [\n   80      { id: 'space', as: 'number', defaultValue: 5}\n   81    ],\n   ..\n   88  jb.component('itemlist.selection', {\n   89    type: 'feature',\n   90:   params: [\n   91      { id: 'databind', as: 'ref' },\n   92      { id: 'onSelection', type: 'action', dynamic: true },\n   ..\n  111          var databindEm = cmp.jbEmitter.filter(x => x == 'check')\n  112              .map(()=> \n  113:               jb.val(ctx.params.databind))\n  114              .filter(x=>\n  115                x != cmp.selected)\n  ...\n  123  \n  124          doubleClick.subscribe(()=>\n  125:           ctx.params.onDoubleClick(ctx.setData(cmp.selected)));\n  126  \n  127          selectionEm.subscribe( selected => {\n  128:           if (jb.val(ctx.params.databind) != selected)\n  129:             jb.writeValue(ctx.params.databind,selected);\n  130:           ctx.params.onSelection(ctx.setData(cmp.selected))\n  131          });\n  132  \n  ...\n  135      },\n  136      afterViewInit: cmp => {\n  137:         if (ctx.params.autoSelectFirst && cmp.items[0] && !jb.val(ctx.params.databind)) {\n  138              cmp.selected = cmp.items[0];\n  139:             jb.writeValue(ctx.params.databind,cmp.selected);\n  140          }\n  141      },\n  ...\n  158  jb.component('itemlist.keyboard-selection', {\n  159    type: 'feature',\n  160:   params: [\n  161      { id: 'onKeyboardSelection', type: 'action', dynamic: true },\n  162      { id: 'autoFocus', type: 'boolean' }\n  ...\n  169            .takeUntil( cmp.jbEmitter.filter(x=>x =='destroy') );\n  170  \n  171:         if (context.params.autoFocus)\n  172              setTimeout(()=> \n  173                cmp.elementRef.nativeElement.focus(),1);\n  ...\n  193  jb.component('itemlist.drag-and-drop', {\n  194    type: 'feature',\n  195:   params: [\n  196    ],\n  197    impl: ctx => ({\n\nC:\\jbart5-ng\\src\\ui\\itemlog.js:\n    5  jb.component('itemlog',{\n    6  	type: 'control',\n    7: 	params: [\n    8  		{ id: 'title', as: 'string' },\n    9  		{ id: 'items', as: 'observable' , dynamic: true, essential: true },\n   ..\n   19            cmp.items = [];\n   20            cmp.itemToComp = item => \n   21:             context.params.controls(item.setVars(jb.obj(context.params.itemVariable,item.data))) [0];\n   22  \n   23:           context.params.items(context).subscribe(itemCtx=>  {\n   24                cmp.items.unshift(itemCtx);\n   25:               if (context.params.counter)\n   26:                 jb.writeValue(context.params.counter,cmp.items.length)\n   27            })\n   28        }\n\nC:\\jbart5-ng\\src\\ui\\jb-rx.ts:\n   77  jb.component('rxLog',{\n   78  	type: 'rx.elem',\n   79: 	params: [\n   80  		{ id: 'pipe', as: 'observable' }\n   81  	],\n   ..\n   85  jb.component('rxPipe', {\n   86  	type: 'rx.elem',\n   87: 	params: [\n   88  		{ id: 'items', type: 'data,rx.elem[]', ignore: true, essential: true }\n   89  	],\n   ..\n   99  jb.component('rxFilter',{\n  100  	type: 'rx.elem',\n  101: 	params: [\n  102  		{ id: 'filter', type: 'boolean', dynamic: true }\n  103  	],\n  ...\n  132  jb.component('rxParallel', {\n  133  	type: 'rx.elem',\n  134: 	params: [\n  135  		{ id: 'item', dynamic: true },\n  136  	],\n  ...\n  145  jb.component('rxParallelKeepOrder', {\n  146  	type: 'rx.elem',\n  147: 	params: [\n  148  		{ id: 'item', dynamic: true },\n  149  	],\n  ...\n  181  jb.component('rx.distinctUntilChanged', {\n  182  	type: 'rx.elem',\n  183: 	params: [\n  184  	    { id: 'keySelector', type: 'rx.keySelector' },\n  185  	    { id: 'comparer', type: 'rx.comparer' },\n  ...\n  195  jb.component('rx.concat', {\n  196  	type: 'rx.elem',\n  197: 	params: [\n  198  		{ id: 'items', type: 'data,rx.elem[]', ignore: true, essential: true }\n  199  	],\n  ...\n  233  jb.component('rx.subject',{\n  234  	type: 'rx.subject,rx.observable,rx.observer',\n  235: 	params: [\n  236  		{ id: 'pipe', type: 'rx.elem', dynamic : true, defaultValue: {$: 'rx.distinctUntilChanged'} },\n  237  	],\n  ...\n  244  jb.component('rx.emit',{\n  245  	type: 'action',\n  246: 	params: [\n  247  		{ id: 'from', as: 'observable'},\n  248  		{ id: 'to', type: 'rx.observer' },\n  ...\n  255  jb.component('rx.urlPath',{\n  256  	type: 'application-feature',\n  257: 	params: [\n  258: 		{ id: 'params', type: 'data[]', as: 'array'},\n  259  		{ id: 'databind', as: 'single' , essential: true },\n  260  		{ id: 'base', as: 'string'},\n  261  		{ id: 'zoneId', as: 'string'},\n  262  	],\n  263: 	impl: function(context,params,databind,base,zoneId) {\n  264  		if (jbart.location) return;\n  265  \n  ...\n  277  	    			.map(x=>decodeURIComponent(x))\n  278  	    	var res = {};\n  279: 	    	params.forEach((p,i) =>\n  280      			res[p] = (vals[i+1] || ''));\n  281  	    	return res;\n  ...\n  284  	    	var split_base = jbart.location.path().split(`/${base}`);\n  285  	    	var url = split_base[0] + `/${base}/` + \n  286: 	    		params.map(p=>obj[p]||'')\n  287  	    		.join('/');\n  288  	    	return url.replace(/\\/*$/,'');\n  ...\n  310  jb.component('rx-test', {\n  311  	type: 'test',\n  312: 	params: [\n  313  		{ id: 'result', as: 'observable', dynamic: true },\n  314  		{ id: 'expectedResult', type: 'boolean', dynamic: true },\n  ...\n  325  jb.component('containsSeq',{\n  326  	type: 'boolean',\n  327: 	params: [\n  328  		{ id: 'seq', type: 'data[]', as: 'array' },\n  329  		{ id: 'observable', defaultValue: '%%', as: 'observable'}\n\nC:\\jbart5-ng\\src\\ui\\jb-ui.ts:\n   43  \n   44  		this.jb_profile = ctx.profile;\n   45: 		var title = jb_tosingle(jb.val(this.ctx.params.title)) || (() => ''); \n   46  		this.jb_title = (typeof title == 'function') ? title : () => ''+title;\n   47  		this.jb$title = (typeof title == 'function') ? title() : title; // for debug\n   ..\n  157  	jbCtrl(context) {\n  158  		var options = mergeOptions(\n  159: 			optionsOfProfile(context.params.style && context.params.style.profile),\n  160  			optionsOfProfile(context.profile));\n  161  \n  ...\n  163  		jb.path(options, ['atts','jb-path'], this.callerPath); // for pick & edit\n  164  \n  165: 		(context.params.features && context.params.features(context) || []).forEach(f => this.jbExtend(f,context))\n  166: 		if (context.params.style && context.params.style.profile && context.params.style.profile.features) {\n  167: 			jb.toarray(context.params.style.profile.features)\n  168  				.forEach((f,i)=>\n  169  					this.jbExtend(context.runInner(f,{type:'feature'},context.path+'~features~'+i),context))\n  ...\n  277  \n  278  export function ctrl(context) {\n  279: 	var ctx = context.setVars({ $model: context.params });\n  280  	var styleOptions = defaultStyle(ctx);\n  281  	return new jbComponent(ctx).jbExtend(styleOptions).jbCtrl(ctx);\n  ...\n  286  		if (!profile.style && context.vars[defaultVar])\n  287  			return ctx.run({$:context.vars[defaultVar]})\n  288: 		return context.params.style(ctx);\n  289  	}\n  290  }\n\nC:\\jbart5-ng\\src\\ui\\label.js:\n    3  jb.component('label', {\n    4      type: \"control\",\n    5:     params: [\n    6          { id: 'title', essential: true, defaultValue: 'hello', dynamic: true },\n    7          { id: 'style', type: 'label.style', defaultValue: { $: 'label.span' }, dynamic: true },\n    .\n    9      ],\n   10      impl: ctx => \n   11:         jb_ui.ctrl(ctx.setVars({title: ctx.params.title() }))\n   12  })\n   13  \n\nC:\\jbart5-ng\\src\\ui\\picklist.js:\n    6  jb.component('picklist', {\n    7    type: 'control',\n    8:   params: [\n    9      { id: 'title', as: 'string' , dynamic: true },\n   10      { id: 'databind', as: 'ref'},\n   ..\n   14    ],\n   15    impl: ctx => {\n   16:     ctx = ctx.setVars({ field: jb_ui.twoWayBind(ctx.params.databind) });\n   17      return jb_ui.ctrl(ctx).jbExtend({\n   18        beforeInit: function(cmp) {\n   ..\n   20  \n   21          cmp.recalcOptions = function() {\n   22:           cmp.options = ctx.params.options(ctx);\n   23            var groupsHash = {};\n   24            cmp.groups = [];\n   ..\n   48  jb.component('picklist.dynamic-options', {\n   49    type: 'feature',\n   50:   params: [\n   51      { id: 'recalcEm', as: 'observable'}\n   52    ],\n   ..\n   64  jb.component('picklist.optionsByComma',{\n   65    type: 'picklist.options',\n   66:   params: [ \n   67      { id: 'options', as: 'string', essential: true},\n   68      { id: 'allowEmptyValue', type: 'boolean' },\n   ..\n   78  jb.component('picklist.options',{\n   79    type: 'picklist.options',\n   80:   params: [ \n   81      { id: 'options', as: 'array', essential: true},\n   82      { id: 'allowEmptyValue', type: 'boolean' },\n   ..\n   90  jb.component('picklist.coded-options',{\n   91    type: 'picklist.options',\n   92:   params: [ \n   93      { id: 'options', as: 'array',essential: true },\n   94      { id: 'code', as: 'string', dynamic:true , essential: true }, \n\nC:\\jbart5-ng\\src\\ui\\pulldown-menu.js:\n    9  jb.component('pulldown.menu-item-group', {\n   10  	type: 'control',\n   11: 	params: [\n   12  		{ id: 'title', as: 'string', dynamic: true, essential: true },\n   13  	],\n   ..\n   18  jb.component('pulldown.menu-item', {\n   19  	type: 'control',\n   20: 	params: [\n   21  		{ id: 'title', as: 'string', dynamic: true, essential: true },\n   22  		{ id: 'icon', as: 'string' },\n   ..\n   28  	],\n   29  	  impl: function(context,title,icon,shortcut) {\n   30: 	    if (context.params.$click) try { context.params.action() } catch (e) { jb.logException(e) } // for test debug\n   31  	    return jb_ui.ctrl(context).jbExtend({\n   32  	      beforeInit: function(cmp) {\n   ..\n   36  	        cmp.clicked = jb_ui.wrapWithLauchingElement(() => {\n   37  	        	context.vars.$dialog && context.vars.$dialog.close(); // close dialog\n   38: 	        	context.params.action();\n   39  	        } , context, cmp.elementRef);\n   40  	      }\n   ..\n   55  jb.component('pulldown-menu-item.default', {\n   56    type: 'button.style',\n   57:   params: [\n   58  	  { id: 'icon', as: 'string' }\n   59    ],\n   ..\n   75  jb.component('pulldown.topMenuItem', {\n   76  	type: 'control',\n   77: 	params: [\n   78  		{ id: 'title', dynamic: true, as: 'string' },\n   79  		{ id: 'style', type: 'pulldownTopMenuItem.style', dynamic: true, defaultValue: { $: 'pulldownTopMenuItem.default' } },\n   ..\n   90  				content :{$: 'group', \n   91  					controls: ctx => \n   92: 						context.params.controls(ctx) \n   93  				}\n   94  			})\n   ..\n  101  						cmp.openPopup();\n  102  				}\n  103: 				cmp.title = context.params.title();\n  104  				cmp.openPopup = jb_ui.wrapWithLauchingElement(openPopup, context, cmp.elementRef); \n  105  \n  106: 				if (context.params.open)\n  107  					cmp.openPopup();\n  108  			}\n  ...\n  154  jb.component('group.menu-keyboard-selection', {\n  155    type: 'feature',\n  156:   params: [\n  157      { id: 'autoFocus', type: 'boolean' }\n  158    ],\n  ...\n  165            .takeUntil( cmp.jbEmitter.filter(x=>x =='destroy') );\n  166  \n  167:         if (ctx.params.autoFocus)\n  168              setTimeout(()=> {\n  169                cmp.elementRef.nativeElement.focus();\n  ...\n  177  	            var selected = $(cmp.elementRef.nativeElement).find('>.selected');\n  178              	var selectedCtx = (cmp.ctrls[selected.index()] || {}).comp.ctx;\n  179:             	if (selectedCtx && selectedCtx.params.action)\n  180: 					jb_ui.wrapWithLauchingElement(selectedCtx.params.action, selectedCtx, \n  181  						$(cmp.elementRef.nativeElement).find('>.selected')[0])()\n  182              })\n\nC:\\jbart5-ng\\src\\ui\\sidenav.js:\n    5  jb.component('sidenav',{\n    6    type: 'control',\n    7:   params: [\n    8      { id: 'controls', type: 'control[]', essential: true, flattenArray: true, dynamic: true },\n    9      { id: 'title', as: 'string' , dynamic: true },\n   ..\n   17  jb.component('sidenav.md', {\n   18    type: 'sidenav.style',\n   19:   params: [\n   20      { id: 'width', as: 'number' },\n   21      { id: 'align', options: 'start,end', as: 'string'},\n\nC:\\jbart5-ng\\src\\ui\\slider.ts:\n    6  jb.component('editable-number.slider', {\n    7  	type: 'editable-number.style',\n    8: 	params: [\n    9  		{ id: 'width', as: 'number', defaultValue: '200' },\n   10  	],\n\nC:\\jbart5-ng\\src\\ui\\styles.js:\n    3  jb.component('customStyle', {\n    4  	typePattern: /.*-style/,\n    5: 	params: [\n    6  		{ id: 'template', as: 'string', essential: true},\n    7  		{ id: 'css', as: 'string'},\n    .\n   30  jb.component('custom-control', {\n   31  	type: 'control',\n   32: 	params: [\n   33  		{ id: 'title', as: 'string', dynamic: true },\n   34  		{ id: 'html', as: 'string', essential: true, defaultValue: '<div></div>'},\n\nC:\\jbart5-ng\\src\\ui\\tabs.js:\n    3  jb.component('tabs', {\n    4  	type: 'control',\n    5: 	params: [\n    6  		{ id: 'tabs', type: 'control[]', essential: true, flattenArray: true, dynamic: true },\n    7  		{ id: 'style', type: 'tabs.style', dynamic: true, defaultValue: { $: 'tabs.simple' } },\n    .\n   18  \n   19          cmp.initTabs = function() {\n   20:           (cmp.jbGroupChildrenEm || jb_rx.Observable.of(context.params.tabs(cmp.ctx)))\n   21                .merge(cmp.jbWatchGroupChildrenEm || jb_rx.Observable.of())\n   22                .subscribe(comps=> {\n\nC:\\jbart5-ng\\src\\ui\\text.js:\n    5  jb.component('text', {\n    6      type: 'control',\n    7:     params: [\n    8          { id: 'text', essential: true, dynamic: true },\n    9          { id: 'style', type: 'text.style', defaultValue: { $: 'text.multi-line' }, dynamic: true },\n   ..\n   12      ],\n   13      impl: (ctx,text) => \n   14:         jb_ui.ctrl(ctx.setVars({text: ctx.params.text()}))\n   15  })\n   16  \n   ..\n   27  jb.component('text.multi-line', {\n   28      type: 'text.style',\n   29:     params: [\n   30          { id: 'rows',as: 'number', defaultValue: '8'},\n   31          { id: 'cols',as: 'number', defaultValue: '80'},\n   ..\n   47  jb.component('rich-text', {\n   48      type: 'control',\n   49:     params: [\n   50          { id: 'text', essential: true, as: 'string', dynamic: true },\n   51          { id: 'title', as: 'string', defaultValue: 'rich-text', dynamic: true },\n\nC:\\jbart5-ng\\src\\ui\\theme.js:\n    5  jb.component('group.theme', {\n    6    type: 'feature',\n    7:   params: [\n    8      { id: 'theme', type: 'theme' },\n    9    ],\n\nC:\\jbart5-ng\\src\\ui\\ui-common.js:\n    4  jb.component('add-css-class',{\n    5  	type: 'action',\n    6: 	params: [\n    7  		{ id: 'cssClass', as: 'string' }\n    8  	],\n    .\n   15  jb.component('url-param',{\n   16  	type: 'data',\n   17: 	params: [\n   18  		{ id: 'param', as: 'string' }\n   19  	],\n   ..\n   26  jb.component('sessionStorage',{\n   27  	type: 'data',\n   28: 	params: [\n   29  		{ id: 'key', as: 'string'}\n   30  	],\n   ..\n   44  	type: 'action',\n   45  	description: 'navigate/open a new web page, change href location',\n   46: 	params: [\n   47  		{ id: 'url', as:'string', essential: true },\n   48  		{ id: 'target', type:'enum', values: ['new tab','self'], defaultValue:'new tab', as:'string'}\n   ..\n   61  jb.component('search-filter',{\n   62  	type: 'aggregator',\n   63: 	params: [\n   64  		{ id: 'pattern', as: 'string' }\n   65  	],\n   ..\n   73  jb.component('new-instance', {\n   74  	type: 'data',\n   75: 	params: [\n   76  		{ id: 'module', as: 'string', essential: true },\n   77  		{ id: 'class', as: 'string', essential: true},\n   ..\n   89  jb.component('injector-get', {\n   90  	type: 'data',\n   91: 	params: [\n   92  		{ id: 'provider', as: 'string', essential: true },\n   93  	],\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\button-md.ts:\n   29  jb.component('button.md-icon', {\n   30    type: 'button.style',\n   31:   params: [\n   32      { id: 'icon', as: 'string', default: 'code' },\n   33      { id: 'size', as: 'number', defaultValue: 20 },\n   ..\n   45  jb.component('button.md-icon-12', {\n   46    type: 'button.style',\n   47:   params: [\n   48      { id: 'icon', as: 'string', default: 'code' },\n   49      { id: 'aria', as: 'string' },\n   ..\n   63  jb.component('button.md-icon-fab', {\n   64    type: 'button.style',\n   65:   params: [\n   66      { id: 'icon', as: 'string', default: 'code' },\n   67      { id: 'size', as: 'number', defaultValue: '24' },\n   ..\n   78  jb.component('button.md-mini-fab', {\n   79    type: 'button.style',\n   80:   params: [\n   81      { id: 'icon', as: 'string', default: 'code' },\n   82      { id: 'size', as: 'number', defaultValue: '24' },\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\dialog-md.ts:\n    4  jb.component('dialog.md-dialog-ok-cancel', {\n    5  	type: 'dialog.style',\n    6: 	params: [\n    7  		{ id: 'okLabel', as: 'string', defaultValue: 'OK' },\n    8  		{ id: 'cancelLabel', as: 'string', defaultValue: 'Cancel' },\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\input-md.ts:\n    7  jb.component('editable-text.md-input',{\n    8    type: 'editable-text.style',\n    9:   params: [\n   10      { id: 'width', as: 'number' }\n   11    ],\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\layout-md.ts:\n   11  jb.component('layout.md',{\n   12    type: 'group.style,md-layout',\n   13:   params: [\n   14      { id: 'layout', as:'string', options: 'row,column' },\n   15      { id: 'align', as:'string', options: 'start,center,end,space-around,space-between,' },\n   ..\n   25      var responsiveSelector = context.vars.responsiveSelector || '';\n   26      var atts = {}\n   27:     if (context.params.layout) atts['layout'+responsiveSelector] = context.params.layout;\n   28      ['margin','fill','padding','wrap'].forEach(p=>{\n   29:       if(context.params[p])\n   30:         atts['layout-' + p+ responsiveSelector] = context.params[p];\n   31      })\n   32:     if (context.params.align)\n   33:       atts['layout-align'+responsiveSelector] = context.params.align + (context.params.subAlign ? (' ' + context.params.subAlign) : '' )\n   34  \n   35:     context.params.responsive.forEach(responsive=>jb.extend(atts,responsive))\n   36  \n   37      return {\n   38        init: function(cmp) { \n   39          cmp.initGroup();\n   40:         context.params.children.forEach((child,index)=>\n   41            cmp.extendChild(index,{atts: child}))\n   42        },\n   ..\n   51  jb.component('md-layout-child',{\n   52    type: 'md-layout-child',\n   53:   params: [\n   54      { id: 'flex', as:'string', options: flexOptions },\n   55      { id: 'marginLeft', as: 'string', options: offsetOptions },\n   ..\n   62      var responsiveSelector = ctx.vars.responsiveSelector || '';\n   63      var atts = {};\n   64:     atts['flex'+responsiveSelector] = percentage_dictionary[ctx.params.flex] || ctx.params.flex || '';\n   65:     if (ctx.params.marginLeft && percentage_dictionary[ctx.params.marginLeft])\n   66:       atts['flex-offset'+responsiveSelector] = percentage_dictionary[ctx.params.marginLeft];\n   67:     if (ctx.params.order) atts['flex-order'+responsiveSelector] = ctx.params.order;\n   68:     if (ctx.params.show) atts['show'+responsiveSelector] = ctx.params.show;\n   69:     if (ctx.params.hide) atts['hide'+responsiveSelector] = ctx.params.hide;\n   70:     ctx.params.responsive.forEach(responsive=>jb.extend(atts,responsive))\n   71      return atts;\n   72    }\n   ..\n   75  jb.component('md-layout-responsive-layout', {\n   76    type: 'md-layout-responsive-layout',\n   77:   params: [\n   78      { id: 'selector', as: 'string', options: responsiveSelectors, essential: true },\n   79      { id: 'layout', type: 'md-layout', essential: true, dynamic: true}\n   80    ],\n   81    impl: ctx => \n   82:     ctx.params.layout(ctx.setVars({responsiveSelector: '-' + responsive_dictionary[ctx.params.selector]}))\n   83  })\n   84  \n   85  jb.component('md-layout-child-responsive-child', {\n   86    type: 'md-layout-child-responsive-child',\n   87:   params: [\n   88      { id: 'selector', as: 'string', options: responsiveSelectors, essential: true },\n   89      { id: 'child', type: 'md-layout-child', essential: true, dynamic: true}\n   90    ],\n   91    impl: ctx =>\n   92:     ctx.params.child(ctx.setVars({responsiveSelector: '-' + responsive_dictionary[ctx.params.selector]}))\n   93  })\n   94  \n\nC:\\jbart5-ng\\src\\ui\\md-styles\\sidenav-md.ts:\n    8  jb.component('sidenav.md', {\n    9    type: 'sidenav.style',\n   10:   params: [\n   11      { id: 'width', as: 'number' },\n   12      { id: 'align', options: 'start,end', as: 'string'},\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\tabs-md.ts:\n    9  \n   10  jb.component('tabs.md-tabs', {\n   11:   params: [\n   12      { id: 'tabWidth', as: 'number' }\n   13    ],\n\nC:\\jbart5-ng\\src\\ui\\styles\\codemirror-styles.ts:\n    5  jb.component('editable-text.codemirror', {\n    6  	type: 'editable-text.style',\n    7: 	params: [\n    8  		{ id: 'cm_settings', as: 'single' },\n    9  		{ id: 'enableFullScreen', type: 'boolean', as: 'boolean', defaultValue: true},\n   ..\n  152  jb.component('text.codemirror', {\n  153      type: 'text.style',\n  154:     params: [\n  155          { id: 'cm_settings', as: 'single' },\n  156  		{ id: 'enableFullScreen', type: 'boolean', as: 'boolean', defaultValue: true},\n\nC:\\jbart5-ng\\src\\ui\\styles\\layout-styles.ts:\n    4  jb.component('layout.vertical', {\n    5    type: 'group.style',\n    6:   params: [\n    7      { id: 'spacing', as: 'number', defaultValue: 3 }\n    8    ],\n    .\n   19  jb.component('layout.horizontal', {\n   20    type: 'group.style',\n   21:   params: [\n   22      { id: 'spacing', as: 'number', defaultValue: 3 }\n   23    ],\n   ..\n   35  jb.component('layout.flex', {\n   36    type: 'group.style',\n   37:   params: [\n   38        { id: 'align', as: 'string', options: ',flex-start,flex-end,center,space-between,space-around' },\n   39        { id: 'direction', as: 'string', options: ',row,row-reverse,column,column-reverse' },\n   ..\n   43      // $vars: {\n   44      //    flexProps: ctx => {\n   45:     //       var params = ctx.componentContext.params;\n   46      //       return [\n   47      //         ['display','flex'],\n   48:     //         ['justify-content', params.align], \n   49:     //         ['flex-direction', params.direction], \n   50:     //         ['flex-wrap', params.wrap ? 'wrap' : ''], \n   51      //       ].filter(x\n   52      //         =>x[1] != '')\n   ..\n   66  jb.component('flex-layout-container.align-main-axis', {\n   67      type: 'feature',\n   68:     params: [\n   69        { id: 'align', as: 'string', options: 'flex-start,flex-end,center,space-between,space-around', defaultValue: 'flex-start' }\n   70      ],\n   ..\n   77  jb.component('flex-layout-item.grow', {\n   78      type: 'feature',\n   79:     params: [\n   80        { id: 'factor', as: 'number', defaultValue: '1' }\n   81      ],\n   ..\n   87  jb.component('flex-layout-item.basis', {\n   88      type: 'feature',\n   89:     params: [\n   90        { id: 'factor', as: 'number', defaultValue: '1' }\n   91      ],\n   ..\n   97  jb.component('flex-layout-item.align-self', {\n   98      type: 'feature',\n   99:     params: [\n  100        { id: 'align', as: 'string', options: 'auto,flex-start,flex-end,center,baseline,stretch', defaultValue: 'auto' }\n  101      ],\n  ...\n  107  jb.component('flex-filler', {\n  108      type: 'control',\n  109:     params: [\n  110          { id: 'title', as: 'string', defaultValue: 'flex filler' },\n  111          { id: 'basis', as: 'number', defaultValue: '1' },\n\nC:\\jbart5-ng\\src\\ui\\styles\\property-sheet-styles.ts:\n    3  jb.component('property-sheet.titles-above', {\n    4    type: 'group.style',\n    5:   params: [\n    6      { id: 'spacing', as: 'number', defaultValue: 20 }\n    7    ],\n    .\n   31  jb.component('property-sheet.titles-above-float-left', {\n   32    type: 'group.style',\n   33:   params: [\n   34      { id: 'spacing', as: 'number', defaultValue: 20 },\n   35      { id: 'fieldWidth', as: 'number', defaultValue: 200 },\n   ..\n   64  jb.component('property-sheet.titles-left', {\n   65    type: 'group.style',\n   66:   params: [\n   67      { id: 'vSpacing', as: 'number', defaultValue: 20 },\n   68      { id: 'hSpacing', as: 'number', defaultValue: 20 },\n   ..\n   94  jb.component('property-sheet.style-on-focus', {\n   95    type: 'group.style',\n   96:   params: [\n   97      { id: 'vSpacing', as: 'number', defaultValue: 20 },\n   98      { id: 'hSpacing', as: 'number', defaultValue: 20 },\n   ..\n  167  jb.component('property-sheet.growing', {\n  168    type: 'group.style',\n  169:   params: [\n  170      { id: 'vSpacing', as: 'number', defaultValue: 20 },\n  171      { id: 'hSpacing', as: 'number', defaultValue: 20 },\n\nC:\\jbart5-ng\\src\\ui\\tree\\json-tree.ts:\n    3  jb.component('tree.json-read-only',{\n    4  	type: 'tree.nodeModel',\n    5: 	params: [\n    6  		{ id: 'object'},\n    7  		{ id: 'rootPath', as: 'string'}\n\nC:\\jbart5-ng\\src\\ui\\tree\\tree.ts:\n   23  jb.component('tree', {\n   24  	type: 'control',\n   25: 	params: [\n   26  		{ id: 'nodeModel', type: 'tree.nodeModel', dynamic: true, essential: true },\n   27  		{ id: 'style', type: \"tree.style\", defaultValue: { $: \"tree.ul-li\" }, dynamic: true },\n   ..\n   29  	],\n   30  	impl: function(context) { \n   31: 		var nodeModel = context.params.nodeModel();\n   32  		if (!nodeModel)\n   33  			return jb.logException('missing nodeModel in tree');\n   ..\n  116  jb.component('tree.selection', {\n  117    type: 'feature',\n  118:   params: [\n  119  	  { id: 'databind', as: 'ref' },\n  120  	  { id: 'onSelection', type: 'action', dynamic: true },\n  ...\n  131    				.filter(x => x.length === 2)\n  132    				.subscribe(x=> {\n  133: 					jb_ui.wrapWithLauchingElement(context.params.onDoubleClick, context.setData(tree.selected), x[0].srcElement)()\n  134    				})\n  135  \n  136:   		  var databindObs = (context.params.databind && jb_rx.refObservable(context.params.databind,context)\n  137          	.distinctUntilChanged()) || jb_rx.Observable.of();\n  138  \n  ...\n  149  				  return path; \n  150  			  },'')\n  151: 			  if (context.params.databind)\n  152: 				  jb.writeValue(context.params.databind, selected);\n  153: 			  context.params.onSelection(context.setData(selected));\n  154  		  });\n  155  		  // first auto selection selection\n  156: 		  var first_selected = jb.val(context.params.databind);\n  157: 		  if (!first_selected && context.params.autoSelectFirst) {\n  158  			  var first = tree.el.querySelectorAll('.treenode')[0];\n  159  			  first_selected = tree.elemToPath(first);\n  ...\n  176  jb.component('tree.keyboard-selection', {\n  177  	type: 'feature',\n  178: 	params: [\n  179  		{ id: 'onKeyboardSelection', type: 'action', dynamic: true },\n  180  		{ id: 'onEnter', type: 'action', dynamic: true },\n  ...\n  203  				});\n  204  \n  205: 				if (context.params.autoFocus)\n  206  					setTimeout(() => \n  207  						cmp.elementRef.nativeElement.focus(), 1);\n  ...\n  210  					.filter(e=> e.keyCode == 13)\n  211  						.subscribe(e =>\n  212: 							runActionInTreeContext(context.params.onEnter))\n  213  \n  214  				keyDownNoAlts.filter(e=> e.keyCode == 38 || e.keyCode == 40)\n  ...\n  228  						var isArray = tree.nodeModel.isArray(tree.selected);\n  229  						if (!isArray || (tree.expanded[tree.selected] && event.keyCode == 39))\n  230: 							runActionInTreeContext(context.params.onRightClickOfExpanded);	\n  231  						if (isArray && tree.selected) \n  232  							tree.expanded[tree.selected] = (event.keyCode == 39);\n  ...\n  250  jb.component('tree.keyboard-shortcut', {\n  251  	type: 'feature',\n  252: 	params: [\n  253  		{ id: 'key', as: 'string', description: 'Ctrl+C or Alt+V' },\n  254  		{ id: 'action', type: 'action', dynamic: true },\n  ...\n  288  jb.component('tree.drag-and-drop', {\n  289    type: 'feature',\n  290:   params: [\n  291    ],\n  292    impl: function(context) {\n\nC:\\jbart5-ng\\fixParams.js:\n   35                  var index = 0; endIndex =0;\n   36                  while(index != -1) {\n   37:                   index = find(source.slice(endIndex+1),/^\\s*params\\s*:\\s*{\\s*$/);\n   38                    if (index == -1)\n   39                      break;\n\nC:\\jbart5-ng\\projects\\material-demo\\docs.css:\n   63  .hljs-symbol .hljs-string,\n   64  .hljs-value,\n   65: .hljs-params,\n   66  .hljs-regexp {\n   67    color: #7DB9F4;\n   ..\n  931  }\n  932  \n  933: .api-params-item {\n  934    min-height: 72px;\n  935  }\n  936: .api-params-label {\n  937    margin-right: 8px;\n  938    text-align: center;\n  ...\n  943    align-self: flex-start;\n  944  }\n  945: .api-params-title {\n  946    color: #888;\n  947  }\n  948  \n  949: .api-params-content ul {\n  950    padding-left: 4px;\n  951  }\n\nC:\\jbart5-ng\\projects\\studio\\studio-data-browse.ts:\n    4  jb.component('studio.open-resource', {\n    5  	type: 'action',\n    6: 	params: [\n    7  	    { id: 'resource', type: 'data' },\n    8  	    { id: 'id', as: 'string' }\n\nC:\\jbart5-ng\\projects\\studio\\studio-edit-source.ts:\n    5  jb.component('studio.editSource', {\n    6  	type: 'action',\n    7: 	params: [\n    8  		{ id: 'path', as: 'string', defaultValue: { $: 'studio.currentProfilePath' } }\n    9  	],\n   ..\n   23  jb.component('studio.profile-as-text', {\n   24  	type: 'data',\n   25: 	params: [\n   26  		{ id: 'path', as: 'string' },\n   27  	],\n   ..\n   44  jb.component('studio.string-property-ref', {\n   45  	type: 'data',\n   46: 	params: [\n   47  		{ id: 'path', as: 'string' },\n   48  	],\n   ..\n   60  jb.component('studio.goto-sublime', {\n   61  	type: 'action',\n   62: 	params: [\n   63  		{ id: 'path', as: 'string'},\n   64  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-jb-editor.ts:\n    8  jb.component('studio.open-jb-editor', {\n    9    type: 'action', \n   10:   params: [\n   11      { id: 'path', as: 'string' }\n   12    ], \n   ..\n   28  jb.component('studio.jb-editor', {\n   29    type: 'control', \n   30:   params: [\n   31      { id: 'path', as: 'string' }\n   32    ], \n   ..\n  116  jb.component('studio.data-browse', {\n  117    type: 'control',\n  118:   params: [ \n  119      { id: 'data', },\n  120      { id: 'title', as: 'string'}\n  ...\n  136  jb.component('studio.jb-editor.nodes', {\n  137  	type: 'tree.nodeModel',\n  138: 	params: [ {id: 'path', as: 'string' } ],\n  139  	impl: function(context,path) {\n  140  		return new TgpModel(path,'jb-editor');\n  ...\n  144  jb.component('studio.open-jb-edit-property', {\n  145    type: 'action', \n  146:   params: [\n  147      { id: 'path', as: 'string' }\n  148    ], \n  ...\n  161  jb.component('studio.jb-floating-input', {\n  162    type: 'control',\n  163:   params: [ {id: 'path', as: 'string' } ],\n  164    impl :{$: 'editable-text', \n  165        databind :{$: 'studio.profile-value-as-text', path: '%$path%' }, \n  ...\n  184  jb.component('studio.profile-value-as-text', {\n  185    type: 'data',\n  186:   params: [\n  187      { id: 'path', as: 'string' }\n  188    ],\n  ...\n  223  jb.component('studio.open-jb-editor-menu', {\n  224    type: 'action', \n  225:   params: [\n  226      { id: 'path', as: 'string' }\n  227    ], \n  ...\n  235  jb.component('studio.jb-editor-menu', {\n  236    type: 'control', \n  237:   params: [\n  238      { id: 'path', as: 'string' }\n  239    ], \n  ...\n  242      controls: [\n  243        {$: 'dynamic-controls', \n  244:         controlItems :{$: 'studio.more-params', path: '%$path%' }, \n  245          genericControl :{$: 'pulldown.menu-item', \n  246            title: [\n  ...\n  331  jb.component('pulldown.studio-wrap-with', {\n  332    type: 'control', \n  333:   params: [\n  334      { id: 'path', as: 'string'},\n  335      { id: 'type', as: 'string' },\n\nC:\\jbart5-ng\\projects\\studio\\studio-main.ts:\n  135        {$: 'feature.init', \n  136          action :{$: 'rx.urlPath', \n  137:           params: ['project', 'page', 'profile_path'], \n  138            databind: '%$globals%', \n  139            base: 'studio', \n  ...\n  243  jb.component('studio.setPreviewSize', {\n  244  	type: 'action',\n  245: 	params: [\n  246  		{ id: 'width', as: 'number'},\n  247  		{ id: 'height', as: 'number'},\n\nC:\\jbart5-ng\\projects\\studio\\studio-model-components.ts:\n    3  \n    4  jb.component('studio.short-title',{\n    5: 	params: [ {id: 'path', as: 'string' } ],\n    6  	impl: (context,path) => model.shortTitle(path)\n    7  })\n    8  \n    9  jb.component('studio.val',{\n   10: 	params: [ {id: 'path', as: 'string' } ],\n   11  	impl: (context,path) => \n   12  		model.val(path)\n   ..\n   14  \n   15  jb.component('studio.is-primitive-value', {\n   16:   params: [ {id: 'path', as: 'string' } ],\n   17    impl: (context,path) => \n   18        typeof model.val(path) == 'string'\n   ..\n   20  \n   21  jb.component('studio.is-of-type', {\n   22:   params: [ \n   23    	{ id: 'path', as: 'string', essential: true },\n   24    	{ id: 'type', as: 'string', essential: true },\n   ..\n   29  \n   30  jb.component('studio.PTs-of-type', {\n   31:   params: [ \n   32    	{ id: 'type', as: 'string', essential: true },\n   33    ],\n   ..\n   37  \n   38  jb.component('studio.short-title', {\n   39: 	params: [ {id: 'path', as: 'string' } ],\n   40  	impl: (context,path) => \n   41  		model.shortTitle(path)\n   ..\n   43  \n   44  jb.component('studio.has-param', {\n   45: 	params: [ \n   46  		{ id: 'path', as: 'string' }, \n   47  		{ id: 'param', as: 'string' }, \n   ..\n   52  \n   53  jb.component('studio.non-control-children',{\n   54: 	params: [ {id: 'path', as: 'string' } ],\n   55  	impl: (context,path) => \n   56  		model.children(path,'non-controls')\n   ..\n   58  \n   59  jb.component('studio.array-children',{\n   60: 	params: [ {id: 'path', as: 'string' } ],\n   61  	impl: (context,path) => \n   62  		model.children(path,'array')\n   ..\n   64  \n   65  jb.component('studio.compName',{\n   66: 	params: [ {id: 'path', as: 'string' } ],\n   67  	impl: (context,path) => model.compName(path) || ''\n   68  })\n   69  \n   70  jb.component('studio.paramDef',{\n   71: 	params: [ {id: 'path', as: 'string' } ],\n   72  	impl: (context,path) => model.paramDef(path)\n   73  })\n   74  \n   75  jb.component('studio.enum-options',{\n   76: 	params: [ {id: 'path', as: 'string' } ],\n   77  	impl: (context,path) => \n   78  		((model.paramDef(path) || {}).options ||'').split(',').map(x=>{return {code:x,text:x}})\n   ..\n   80  \n   81  jb.component('studio.prop-name',{\n   82: 	params: [ {id: 'path', as: 'string' } ],\n   83  	impl: (context,path) => \n   84  		model.propName(path)\n   85  })\n   86  \n   87: jb.component('studio.more-params',{\n   88: 	params: [ {id: 'path', as: 'string' } ],\n   89  	impl: (context,path) => \n   90          model.jbEditorMoreParams(path)\n   ..\n   93  \n   94  jb.component('studio.compName-ref',{\n   95: 	params: [ {id: 'path', as: 'string' } ],\n   96  	impl: (context,path) => { return {\n   97  			$jb_val: function(value) {\n   ..\n  107  jb.component('studio.insertComp',{\n  108  	type: 'action',\n  109: 	params: [ \n  110  		{ id: 'path', as: 'string' },\n  111  		{ id: 'comp', as: 'string' },\n  ...\n  117  jb.component('studio.wrap', {\n  118  	type: 'action',\n  119: 	params: [ \n  120  		{ id: 'path', as: 'string' }, \n  121  		{ id: 'compName', as: 'string' } \n  ...\n  127  jb.component('studio.wrapWithGroup', {\n  128  	type: 'action',\n  129: 	params: [ {id: 'path', as: 'string' } ],\n  130  	impl: (context,path) => \n  131  		model.modify(model.wrapWithGroup, path, {},context)\n  ...\n  134  jb.component('studio.addProperty', {\n  135  	type: 'action',\n  136: 	params: [ {id: 'path', as: 'string' } ],\n  137  	impl: (context,path) => \n  138  		model.modify(model.addProperty, path, {},context)\n  ...\n  141  jb.component('studio.wrapWithPipeline', {\n  142  	type: 'action',\n  143: 	params: [ {id: 'path', as: 'string' } ],\n  144  	impl: (context,path) => \n  145  		model.modify(model.wrapWithPipeline, path, {},context)\n  ...\n  148  jb.component('studio.duplicate',{\n  149  	type: 'action',\n  150: 	params: [ \n  151  		{ id: 'path', as: 'string' },\n  152  	],\n  ...\n  157  jb.component('studio.moveInArray',{\n  158  	type: 'action',\n  159: 	params: [ \n  160  		{ id: 'path', as: 'string' },\n  161  		{ id: 'moveUp', type: 'boolean', as: 'boolean'} \n  ...\n  168  jb.component('studio.newArrayItem',{\n  169  	type: 'action',\n  170: 	params: [ {id: 'path', as: 'string' } ],\n  171  	impl: (context,path) => \n  172  		model.modify(model.addArrayItem, path, {},context)\n  ...\n  176  jb.component('studio.delete',{\n  177  	type: 'action',\n  178: 	params: [ {id: 'path', as: 'string' } ],\n  179  	impl: (context,path) => model.modify(model._delete,path,{},context)\n  180  })\n  ...\n  182  jb.component('studio.make-local',{\n  183  	type: 'action',\n  184: 	params: [ {id: 'path', as: 'string' } ],\n  185  	impl: (context,path) => model.modify(model.makeLocal,path,{ctx: context},context)\n  186  })\n\nC:\\jbart5-ng\\projects\\studio\\studio-new-control.ts:\n   72  jb.component('studio.onNextModifiedPath', {\n   73  	type: 'action',\n   74: 	params: [\n   75  		{ id: 'action', type: 'action', dynamic: true, essential: true }\n   76  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n  180  \n  181  jb.component('studio.ref',{\n  182: 	params: [ {id: 'path', as: 'string' } ],\n  183  	impl: (context,path) => \n  184  		profileRefFromPathWithNotification(path,context)\n  ...\n  186  \n  187  jb.component('studio.fix-to-closest-path', {\n  188: 	params: [ {id: 'path', as: 'ref' } ],\n  189  	impl: (ctx,pathRef) => {\n  190  		var path = jb.val(pathRef);\n\nC:\\jbart5-ng\\projects\\studio\\studio-pick-dialog.ts:\n    6  jb.component('studio.pick', {\n    7  	type: 'action',\n    8: 	params: [\n    9  		{ id: 'from', options: 'studio,preview', as: 'string', defaultValue: 'preview'},\n   10  		{ id: 'onSelect', type:'action', dynamic:true }\n   ..\n   17  		content: {$: 'label', title: ''}, // dummy\n   18  		onOK: ctx =>\n   19: 			ctx.componentContext.params.onSelect(ctx.setData(ctx.vars.pickPath.path))\n   20  	 }\n   21  })\n   ..\n   24  	hidden: true,\n   25  	type: 'dialog.style',\n   26: 	params: [\n   27  		{ id: 'from', as: 'string' },\n   28  	],\n   ..\n   68  jb.component('dialogFeature.studio-pick', {\n   69  	type: 'dialogFeature',\n   70: 	params: [\n   71  		{ id: 'from', as: 'string' },\n   72  	],\n   ..\n   74  	({\n   75        init: cmp=> {\n   76: 		  var _window = ctx.params.from == 'preview' ? jbart.previewWindow : window;\n   77: 		  var previewOffset = ctx.params.from == 'preview' ? $('#jb-preview').offset().top : 0;\n   78  		  cmp.titleBelow = false;\n   79  \n   ..\n  144  \n  145  jb.component('studio.highlight-in-preview',{\n  146: 	params: [\n  147  		{ id: 'path', as: 'string' }\n  148  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-popups.ts:\n    5  jb.component('studio.open-multiline-edit', {\n    6  	type: 'action',\n    7: 	params: [\n    8  	    { id: 'path', as: 'string' }\n    9  	], \n   ..\n   23  jb.component('dialog.studio-floating', {\n   24  	type: 'dialog.style',\n   25: 	params: [\n   26  		{ id: 'id', as: 'string' },\n   27  		{ id: 'width', as: 'number', default: 300},\n   ..\n   97  \n   98  jb.component('studio.code-mirror-mode',{\n   99: 	params: [ {id: 'path', as: 'string' } ],\n  100  	impl: function(ctx,path) {\n  101  		if (path.match(/css/))\n  ...\n  109  jb.component('studio.open-responsive-phone-popup', {\n  110    type: 'action', \n  111:   params: [\n  112      { id: 'path', as: 'string' }\n  113    ], \n\nC:\\jbart5-ng\\projects\\studio\\studio-probe.ts:\n   69  jb.component('studio.probe', {\n   70    type:'data',\n   71:   params: [ { id: 'path', as: 'string', dynamic: true } ],\n   72    impl: (ctx,path) => {\n   73        var _jbart = jbart_base();\n\nC:\\jbart5-ng\\projects\\studio\\studio-properties-menu.ts:\n    3  jb.component('studio.property-toobar-feature', {\n    4    type: 'feature', \n    5:   params: [\n    6      { id: 'path', as: 'string' }\n    7    ], \n    .\n   13  jb.component('studio.property-toobar-feature2', {\n   14    type: 'feature', \n   15:   params: [\n   16      { id: 'path', as: 'string' }\n   17    ], \n   ..\n   23  jb.component('studio.property-toobar', {\n   24    type: 'control', \n   25:   params: [\n   26      { id: 'path', as: 'string' }\n   27    ], \n   ..\n   79  jb.component('studio.open-property-menu', {\n   80    type: 'action', \n   81:   params: [\n   82      { id: 'path', as: 'string' }\n   83    ], \n\nC:\\jbart5-ng\\projects\\studio\\studio-properties.ts:\n   41  jb.component('studio.properties', {\n   42    type: 'control', \n   43:   params: [\n   44      { id: 'path', as: 'string' }\n   45    ], \n   ..\n  103  jb.component('studio.properties-in-tgp',{\n  104    type: 'control',\n  105:   params: [ {id: 'path', as: 'string' } ],\n  106    impl :{$: 'group',\n  107      style :{$: 'property-sheet.studio-properties'},\n  ...\n  116  jb.component('studio.property-field',{\n  117  	type: 'control',\n  118: 	params: [\n  119  		{ id: 'path', as: 'string' },\n  120  	],\n  ...\n  156  jb.component('studio.property-label',{\n  157  	type: 'control',\n  158: 	params: [ {id: 'path', as: 'string' } ],\n  159  	impl :{$: 'label', \n  160  		title :{$: 'studio.prop-name', path: '%$path%' },\n  ...\n  164  jb.component('studio.property-primitive', {\n  165    type: 'control', \n  166:   params: [\n  167      { id: 'path', as: 'string' }\n  168    ], \n  ...\n  184  jb.component('studio.property-script', {\n  185    type: 'control', \n  186:   params: [\n  187      { id: 'path', as: 'string' }\n  188    ], \n  ...\n  203  jb.component('studio.data-script-summary', {\n  204    type: 'data', \n  205:   params: [\n  206      { id: 'path', as: 'string' }\n  207    ], \n  ...\n  219  jb.component('studio.property-boolean',{\n  220  	type: 'control',\n  221: 	params: [ {id: 'path', as: 'string' } ],\n  222  	impl :{$: 'editable-boolean',\n  223  		style: {$: 'editable-boolean.studio-slide-toggle'},\n  ...\n  232  jb.component('studio.property-enum',{\n  233  	type: 'control',\n  234: 	params: [ {id: 'path', as: 'string' } ],\n  235  	impl :{$: 'picklist', \n  236  		style :{$: 'picklist.studio-enum'},\n  ...\n  243  jb.component('studio.property-slider', {\n  244  	type: 'control',\n  245: 	params: [ {id: 'path', as: 'string' } ],\n  246  	impl :{$: 'editable-number', \n  247  		$vars: { \n  ...\n  260  jb.component('studio.property-tgp', {\n  261    type: 'control', \n  262:   params: [\n  263      { id: 'path', as: 'string' }\n  264    ], \n  ...\n  350  jb.component('studio.property-custom-style', {\n  351    type: 'control', \n  352:   params: [ {id: 'path', as: 'string' } ], \n  353    impl :{$: 'group', \n  354      title :{$: 'studio.prop-name', path: '%$path%' }, \n  ...\n  376  jb.component('studio.property-tgp-in-array', {\n  377    type: 'control', \n  378:   params: [\n  379      { id: 'path', as: 'string' }\n  380    ], \n  ...\n  443  jb.component('studio.property-array', {\n  444    type: 'control', \n  445:   params: [\n  446      { id: 'path', as: 'string' }\n  447    ], \n  ...\n  484  jb.component('studio.tgp-path-options',{\n  485  	type: 'picklist.options',\n  486: 	params: [ \n  487  		{ id: 'path', as: 'string' },\n  488  	],\n  ...\n  494  jb.component('studio.tgp-type-options',{\n  495  	type: 'picklist.options',\n  496: 	params: [ \n  497  		{ id: 'type', as: 'string'} \n  498  	],\n  ...\n  503  jb.component('studio.undo-support', {\n  504    type: 'feature',\n  505:   params: [\n  506      { id: 'path', essential: true, as: 'string' },\n  507    ],\n  ...\n  535  jb.component('studio.bindto-modifyOperations', {\n  536    type: 'feature',\n  537:   params: [\n  538      { id: 'path', essential: true, as: 'string' },\n  539      { id: 'data', as: 'ref' }\n  ...\n  551  jb.component('group.studio-watch-path', {\n  552    type: 'feature',\n  553:   params: [\n  554      { id: 'path', essential: true, as: 'string' },\n  555    ],\n\nC:\\jbart5-ng\\projects\\studio\\studio-save.ts:\n   12  \n   13  jb.component('studio.saveComponents', {\n   14: 	params: [\n   15  		{ id: 'force',as: 'boolean', type: 'boolean' }\n   16  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-style-editor.ts:\n    4  jb.component('studio.open-style-editor', {\n    5  	type: 'action',\n    6: 	  params: [\n    7  	    { id: 'path', as: 'string' }\n    8  	  ], \n    .\n   24  jb.component('studio.open-style-menu', {\n   25    type: 'action', \n   26:   params: [\n   27      { id: 'path', as: 'string' }\n   28    ], \n   ..\n   63  jb.component('studio.style-editor', {\n   64    type: 'control', \n   65:   params: [\n   66      { id: 'path', as: 'string' }\n   67    ], \n   ..\n   86  \n   87  jb.component('studio.style-source', {\n   88:   params: [\n   89      { id: 'path', as: 'string' }\n   90    ], \n   ..\n   94  \n   95  jb.component('studio.format-css', {\n   96:   params: [\n   97      { id: 'css', as: 'string' }\n   98    ], \n   ..\n  108  jb.component('studio.open-make-global-style', {\n  109    type: 'action', \n  110:   params: [\n  111      { id: 'path', as: 'string' }\n  112    ],\n  ...\n  123      onOK: ctx => {\n  124          debugger;\n  125:         var path = ctx.componentContext.params.path;\n  126          var id = ctx.exp('%$globals/project%.%$dialogData/name%'); \n  127          var profile = {\n  ...\n  136  \n  137  jb.component('studio.custom-style-make-local', {\n  138:   params: [\n  139      { id: 'template', as: 'string'},\n  140      { id: 'css', as: 'string'},\n\nC:\\jbart5-ng\\projects\\studio\\studio-suggestions.ts:\n   39      this.options = [];\n   40      probeCtx = probeCtx || (jbart.previewjbart || jbart).initialCtx;\n   41:     var vars = jb.entries(jb.extend({},(probeCtx.componentContext||{}).params,probeCtx.vars,probeCtx.resources))\n   42            .map(x=>({toPaste: '$' + x[0], value: x[1]}))\n   43  \n   ..\n  104  jb.component('editable-text.suggestions-input-feature', {\n  105    type: 'feature', \n  106:   params: [\n  107      { id: 'path', as: 'string' },\n  108      { id: 'action', type: 'action', dynamic:true },\n  ...\n  129              .subscribe(e=> {\n  130                if (!$(input).hasClass('dialog-open'))\n  131:                 ctx.params.onEnter()\n  132                })\n  133  \n  ...\n  151            .delay(1) // we use keydown - let the input fill itself\n  152            .map(e=> \n  153:             new suggestions(e.keyEv.srcElement,'').extendWithOptions(e.ctx,ctx.params.path))\n  154            .filter(e => \n  155              e.text)\n  ...\n  169                    closeFloatingInput(ctx)\n  170                };\n  171:               jb_ui.wrapWithLauchingElement(ctx.params.action,ctx.setVars({suggestionContext: suggestionContext}), e.input)()\n  172              }\n  173            })\n  174  \n  175          function getProbe() {\n  176:           cmp.probeResult = cmp.probeResult || ctx.run({$: 'studio.probe', path: ctx.params.path });\n  177            return cmp.probeResult;\n  178          }\n  179          function closeFloatingInput(ctx) {\n  180:             if (ctx.params.floatingInput)\n  181                ctx.run({$:'closeContainingPopup'});\n  182              ctx.vars.regainFocus && ctx.vars.regainFocus();\n  ...\n  188  jb.component('studio.jb-open-suggestions', {\n  189    type: 'action', \n  190:   params: [\n  191      { id: 'path', as: 'string' }\n  192    ], \n  ...\n  242  jb.component('itemlist.studio-suggestions-selection', {\n  243    type: 'feature',\n  244:   params: [\n  245      { id: 'onEnter', type: 'action', dynamic: true },\n  246    ],\n  ...\n  254            .subscribe(x=>{\n  255                if (cmp.selected)\n  256:                 ctx.params.onEnter(ctx.setData(cmp.selected))\n  257            })\n  258          keyEm.filter(e=>e.keyCode == 27) // ESC\n  ...\n  288  \n  289  jb.component('studio.jb-paste-suggestion', {\n  290:   params: [\n  291      { id: 'path',as: 'string'}\n  292    ],\n\nC:\\jbart5-ng\\projects\\studio\\studio-testers.ts:\n    8  jb.component('suggestions-test', {\n    9    type: 'test',\n   10:   params: [\n   11      { id: 'expression', as: 'string' },\n   12      { id: 'selectionStart', as: 'number', defaultValue: -1 },\n   ..\n   15    impl :{$: 'data-test', \n   16      calculate: ctx => {\n   17:       var params = ctx.componentContext.params;\n   18:       var selectionStart = params.selectionStart == -1 ? params.expression.length : params.selectionStart;\n   19:       var obj = new suggestions({ value: params.expression, selectionStart: selectionStart })\n   20          .extendWithOptions(ctx);\n   21        return JSON.stringify(JSON.stringify(obj.options.map(x=>x.text)));\n   ..\n   27  jb.component('studio-tree-children-test', {\n   28    type: 'test',\n   29:   params: [\n   30      { id: 'path', as: 'string' },\n   31      { id: 'childrenType', as: 'string', type: ',jb-editor' },\n   ..\n   34    impl :{$: 'data-test', \n   35      calculate: ctx => {\n   36:       var params = ctx.componentContext.params;\n   37:       var mdl = new TgpModel('',params.childrenType);\n   38:       var titles = mdl.children(params.path)\n   39          .map(path=>\n   40            mdl.title(path,true));\n   ..\n   48  jb.component('jb-path-test', {\n   49    type: 'test',\n   50:   params: [\n   51      { id: 'controlWithMark', type: 'control', dynamic: true },\n   52      { id: 'staticPath', as: 'string' },\n\nC:\\jbart5-ng\\projects\\studio\\studio-tests.ts:\n    4  if (window.jbartTest) {\n    5  	// jb.resource('ui-tests','UrlPathEm',{ $: 'rx.urlPath', base: 'ui-tests', zoneId: 'single-test', \n    6: 	// 	params: [ 'test','project', 'page', 'profile_path' ] , databind: '{%$globals%}' } );\n    7  	jb.resource('ui-tests','WidgetLoaded',{ $: 'rx.subject' })\n    8  }\n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n   69  			return [path + '~$' + compName];\n   70  		} else if (comp) {\n   71: 			var composite = jb.entries(comp.params)\n   72  				.filter(p=>\n   73  					p[1].composite)\n   74  				.map(p=>flattenArray(p[0]));\n   75  \n   76: 			return (composite[0] || []).concat(jb.entries(comp.params)\n   77  					.filter(p=>!p[1].composite)\n   78  					.map(p=> ({ path: path + '~' + p[0], param: p[1]}))\n   ..\n   99  		if (comp) {\n  100  			var existing = this.jbEditorSubNodes(path);\n  101: 			return jb.entries(comp.params)\n  102  					.map(p=> path + '~' + p[0])\n  103  					.filter(p=> existing.indexOf(p) == -1)\n  ...\n  274  	wrap(path,args) {\n  275  		var compDef = getComp(args.compName);\n  276: 		var paramNames = Object.getOwnPropertyNames((compDef || {}).params);\n  277  		if (paramNames[0]) {\n  278  			var result = jb.extend({$: args.compName}, jb.obj(paramNames[0],[ profileFromPath(path) ]));\n  ...\n  320  		// copy properties from existing & default values\n  321  		if (existing && typeof existing == 'object')\n  322: 			jb.entries(comp.params).forEach(p=>{\n  323  				if (existing[p[0]])\n  324  					result[p[0]] = existing[p[0]];\n  ...\n  337  		var result = { $: compName };\n  338  		// copy default values\n  339: 		jb.entries(comp.params).forEach(p=>{\n  340  			if (p[1].defaultValue)\n  341  				result[p[0]] = JSON.parse(JSON.stringify(p[1].defaultValue))\n  ...\n  361  		var profile = profileFromPath(path);\n  362  		// inject conditional param values\n  363: 		jb.entries(comp.params)\n  364  			.forEach(p=>{ \n  365  				var pUsage = '%$'+p[0]+'%';\n  ...\n  372  			})\n  373  		// inject param values \n  374: 		jb.entries(comp.params)\n  375  			.forEach(p=>{ \n  376  				var pVal = '' + (profile[p[0]] || p[1].defaultValue || ''); // only primitives\n  ...\n  398  		var parent_prof = profileFromPath(parentPath(path),true);\n  399  		var compDef = parent_prof && getComp(jb.compName(parent_prof));\n  400: 		var params = (compDef || {}).params;\n  401  		var paramName = path.split('~').pop();\n  402: 		return jb.entries(params)\n  403  			.filter(p=>p[0]==paramName)\n  404  			.map(p=>p[1])[0] || {};\n  ...\n  431  		var prof = profileFromPath(path,true);\n  432  		if (!prof) return [];\n  433: 		var params = (getComp(jb.compName(prof)) || {}).params;\n  434: 		return jb.entries(params).filter(p=>(p[1].type||'').indexOf('control')!=-1).map(p=>p[0])\n  435  	}\n  436  	nonControlParams(path) {\n  437  		var prof = profileFromPath(path);\n  438  		if (!prof) return [];\n  439: 		var params = (getComp(jb.compName(prof)) || {}).params;\n  440: 		return jb.entries(params)\n  441  			.filter(p=>\n  442  				(p[1].type||'').indexOf('control')==-1)\n  ...\n  508  \n  509  jb.component('studio.short-title',{\n  510: 	params: [ {id: 'path', as: 'string' } ],\n  511  	impl: (context,path) => model.shortTitle(path)\n  512  })\n  513  \n  514  jb.component('studio.val',{\n  515: 	params: [ {id: 'path', as: 'string' } ],\n  516  	impl: (context,path) => \n  517  		model.val(path)\n  ...\n  519  \n  520  jb.component('studio.is-primitive-value', {\n  521:   params: [ {id: 'path', as: 'string' } ],\n  522    impl: (context,path) => \n  523        typeof model.val(path) == 'string'\n  ...\n  525  \n  526  jb.component('studio.is-of-type', {\n  527:   params: [ \n  528    	{ id: 'path', as: 'string', essential: true },\n  529    	{ id: 'type', as: 'string', essential: true },\n  ...\n  534  \n  535  jb.component('studio.PTs-of-type', {\n  536:   params: [ \n  537    	{ id: 'type', as: 'string', essential: true },\n  538    ],\n  ...\n  542  \n  543  jb.component('studio.short-title', {\n  544: 	params: [ {id: 'path', as: 'string' } ],\n  545  	impl: (context,path) => \n  546  		model.shortTitle(path)\n  ...\n  548  \n  549  jb.component('studio.has-param', {\n  550: 	params: [ \n  551  		{ id: 'path', as: 'string' }, \n  552  		{ id: 'param', as: 'string' }, \n  ...\n  557  \n  558  jb.component('studio.non-control-children',{\n  559: 	params: [ {id: 'path', as: 'string' } ],\n  560  	impl: (context,path) => \n  561  		model.children(path,'non-controls')\n  ...\n  563  \n  564  jb.component('studio.array-children',{\n  565: 	params: [ {id: 'path', as: 'string' } ],\n  566  	impl: (context,path) => \n  567  		model.children(path,'array')\n  ...\n  569  \n  570  jb.component('studio.compName',{\n  571: 	params: [ {id: 'path', as: 'string' } ],\n  572  	impl: (context,path) => model.compName(path) || ''\n  573  })\n  574  \n  575  jb.component('studio.paramDef',{\n  576: 	params: [ {id: 'path', as: 'string' } ],\n  577  	impl: (context,path) => model.paramDef(path)\n  578  })\n  579  \n  580  jb.component('studio.enum-options',{\n  581: 	params: [ {id: 'path', as: 'string' } ],\n  582  	impl: (context,path) => \n  583  		((model.paramDef(path) || {}).options ||'').split(',').map(x=>{return {code:x,text:x}})\n  ...\n  585  \n  586  jb.component('studio.prop-name',{\n  587: 	params: [ {id: 'path', as: 'string' } ],\n  588  	impl: (context,path) => \n  589  		model.propName(path)\n  590  })\n  591  \n  592: jb.component('studio.more-params',{\n  593: 	params: [ {id: 'path', as: 'string' } ],\n  594  	impl: (context,path) => \n  595          model.jbEditorMoreParams(path)\n  ...\n  598  \n  599  jb.component('studio.compName-ref',{\n  600: 	params: [ {id: 'path', as: 'string' } ],\n  601  	impl: (context,path) => { return {\n  602  			$jb_val: function(value) {\n  ...\n  612  jb.component('studio.insertComp',{\n  613  	type: 'action',\n  614: 	params: [ \n  615  		{ id: 'path', as: 'string' },\n  616  		{ id: 'comp', as: 'string' },\n  ...\n  622  jb.component('studio.wrap', {\n  623  	type: 'action',\n  624: 	params: [ \n  625  		{ id: 'path', as: 'string' }, \n  626  		{ id: 'compName', as: 'string' } \n  ...\n  632  jb.component('studio.wrapWithGroup', {\n  633  	type: 'action',\n  634: 	params: [ {id: 'path', as: 'string' } ],\n  635  	impl: (context,path) => \n  636  		model.modify(model.wrapWithGroup, path, {},context)\n  ...\n  639  jb.component('studio.addProperty', {\n  640  	type: 'action',\n  641: 	params: [ {id: 'path', as: 'string' } ],\n  642  	impl: (context,path) => \n  643  		model.modify(model.addProperty, path, {},context)\n  ...\n  646  jb.component('studio.wrapWithPipeline', {\n  647  	type: 'action',\n  648: 	params: [ {id: 'path', as: 'string' } ],\n  649  	impl: (context,path) => \n  650  		model.modify(model.wrapWithPipeline, path, {},context)\n  ...\n  653  jb.component('studio.duplicate',{\n  654  	type: 'action',\n  655: 	params: [ \n  656  		{ id: 'path', as: 'string' },\n  657  	],\n  ...\n  662  jb.component('studio.moveInArray',{\n  663  	type: 'action',\n  664: 	params: [ \n  665  		{ id: 'path', as: 'string' },\n  666  		{ id: 'moveUp', type: 'boolean', as: 'boolean'} \n  ...\n  673  jb.component('studio.newArrayItem',{\n  674  	type: 'action',\n  675: 	params: [ {id: 'path', as: 'string' } ],\n  676  	impl: (context,path) => \n  677  		model.modify(model.addArrayItem, path, {},context)\n  ...\n  681  jb.component('studio.delete',{\n  682  	type: 'action',\n  683: 	params: [ {id: 'path', as: 'string' } ],\n  684  	impl: (context,path) => model.modify(model._delete,path,{},context)\n  685  })\n  ...\n  687  jb.component('studio.make-local',{\n  688  	type: 'action',\n  689: 	params: [ {id: 'path', as: 'string' } ],\n  690  	impl: (context,path) => model.modify(model.makeLocal,path,{ctx: context},context)\n  691  })\n  692  \n  693  jb.component('studio.projectSource',{\n  694: 	params: [ \n  695  		{ id: 'project', as: 'string', defaultValue: '%$globals/project%' } \n  696  	],\n  ...\n  703  \n  704  jb.component('studio.compSource',{\n  705: 	params: [ \n  706  		{ id: 'comp', as: 'string', defaultValue: { $: 'studio.currentProfilePath' } } \n  707  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-toolbar.ts:\n    4  jb.component('studio.pickAndOpen', {\n    5  	type: 'action',\n    6: 	params: [\n    7  		{ id: 'from', options: 'studio,preview', as: 'string', defaultValue: 'preview'}\n    8  	],\n    .\n  100  jb.component('studio_button.toolbarButton', {\n  101  	type: 'button.style',\n  102: 	params: [\n  103  		{ id: 'spritePosition', as: 'string', defaultValue: '0,0' }\n  104  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-tree.ts:\n   19  jb.component('studio.open-tree-menu', {\n   20    type: 'action', \n   21:   params: [\n   22      { id: 'path', as: 'string' }\n   23    ], \n\nC:\\jbart5-ng\\projects\\studio\\studio-undo.ts:\n   51  \n   52  jb.component('studio.copy', {\n   53: 	params: [ {id: 'path', as: 'string' } ],\n   54  	impl: (ctx,path) => \n   55  		undo.copy(ctx,path)\n   ..\n   57  \n   58  jb.component('studio.paste', {\n   59: 	params: [ {id: 'path', as: 'string' } ],\n   60  	impl: (ctx,path) => \n   61  		undo.paste(ctx,path)\n\nC:\\jbart5-ng\\projects\\studio\\studio-utils.ts:\n   80  jb.component('studio.message', {\n   81  	type: 'action',\n   82: 	params: [ { id: 'message', as: 'string' } ],\n   83  	impl: (ctx,message) => \n   84  		message(message)\n   ..\n  101  jb.component('studio.goto-path', {\n  102  	type: 'action',\n  103: 	params: [ \n  104  		{ id: 'path', as: 'string' },\n  105  	],\n  ...\n  112  \n  113  jb.component('studio.projectSource',{\n  114: 	params: [ \n  115  		{ id: 'project', as: 'string', defaultValue: '%$globals/project%' } \n  116  	],\n  ...\n  123  \n  124  jb.component('studio.compSource',{\n  125: 	params: [ \n  126  		{ id: 'comp', as: 'string', defaultValue: { $: 'studio.currentProfilePath' } } \n  127  	],\n\nC:\\jbart5-ng\\projects\\studio-helper\\path-tests.ts:\n   47  jb.component('test.inner-label-template', {\n   48  	type: 'control',\n   49: 	params: [\n   50  		{ id: 'ctrl', type: 'control', dynamic: true }\n   51  	],\n\nC:\\jbart5-ng\\projects\\studio-helper\\studio-helper.ts:\n   36  jb.component('studio-helper.properties', {\n   37    type: 'control', \n   38:   params: [\n   39      { id: 'path', defaultValue: 'studio-helper-dummy.label' }\n   40    ], \n   ..\n   79  jb.component('studio-helper.property-array', {\n   80    type: 'control', \n   81:   params: [\n   82      { id: 'path', as: 'string' }\n   83    ], \n   ..\n  120  jb.component('studio-helper.control-tree', {\n  121    type: 'control', \n  122:   params: [\n  123      { id: 'path', defaultValue: 'studio-helper.sample-control' }\n  124    ],\n  ...\n  132  jb.component('studio-helper.jb-editor', {\n  133    type: 'control', \n  134:   params: [\n  135      { id: 'path', defaultValue: 'studio-helper-dummy.label' }\n  136    ], \n\nC:\\jbart5-ng\\projects\\ui-tests\\ui-tests-old.js:\n   39  \n   40  jb_component('inner-label1-tst', {\n   41:   params: [\n   42       { id: 'title', essential: true, dynamic: true },\n   43    ],\n   ..\n   46  \n   47  jb_component('inner-label2-tst', {\n   48:   params: [\n   49       { id: 'title', essential: true, dynamic: true },\n   50    ],\n   ..\n   53  \n   54  jb_component('inner-label3-tst', {\n   55:   params: [\n   56       { id: 'title', essential: true, dynamic: true },\n   57    ],\n\nC:\\jbart5-ng\\projects\\ui-tests\\ui-tests.ts:\n   33  \n   34  jb.component('inner-label1-tst', {\n   35:   params: [\n   36       { id: 'title', essential: true, dynamic: true },\n   37    ],\n   ..\n   40  \n   41  jb.component('inner-label2-tst', {\n   42:   params: [\n   43       { id: 'title', essential: true, dynamic: true },\n   44    ],\n   ..\n   47  \n   48  jb.component('inner-label3-tst', {\n   49:   params: [\n   50       { id: 'title', essential: true, dynamic: true },\n   51    ],\n\nC:\\jbart5-ng\\src\\core\\components.js:\n    9  jb_component('call',{\n   10   	type: '*',\n   11:  	params: [\n   12   		{ id: 'param', as: 'string' }\n   13   	],\n   14   	impl: function(context,param) {\n   15:  	  var paramObj = context.componentContext && context.componentContext.params[param];\n   16        if (typeof(paramObj) == 'function')\n   17   		return paramObj(jb_ctx(context, { \n   ..\n   28  jb_component('pipeline',{\n   29  	type: \"data\",\n   30: 	params: [\n   31  		{ id: 'items', type: \"data,aggregator[]\", ignore: true, essential: true, composite: true }\n   32  	],\n   ..\n   57  jb_component('run',{\n   58   	type: '*',\n   59:  	params: [\n   60   		{ id: 'profile', as: 'single'},\n   61   	],\n   ..\n   67  jb_component('list',{\n   68  	type: \"data\",\n   69: 	params: [\n   70  		{ id: 'items', type: \"data[]\", as: 'array', composite: true }\n   71  	],\n   ..\n   84  jb_component('firstSucceeding',{\n   85  	type: \"data\",\n   86: 	params: [\n   87  		{ id: 'items', type: \"data[]\", as: 'array' }\n   88  	],\n   ..\n   96  jb_component('objectProperties',{\n   97  	type: \"data\",\n   98: 	params: [\n   99  		{ id: 'object', defaultValue: '%%', as: 'single' }\n  100  	],\n  ...\n  105  jb_component('extend',{\n  106  	type: \"data\",\n  107: 	params: [\n  108  		{ id: 'with', as: 'single' },\n  109  		{ id: 'object', defaultValue: '%%', as: 'single' }\n  ...\n  116  jb_component('objectToArray',{\n  117  	type: \"data\",\n  118: 	params: [\n  119  		{ id: 'object', defaultValue: '%%', as: 'single' }\n  120  	],\n  ...\n  133  jb_component('prefix', {\n  134  	type: 'data',\n  135: 	params: [\n  136  		{ id: 'separator', as: 'string', essential: true },\n  137  		{ id: 'text', as: 'string', defaultValue: '%%' },\n  ...\n  144  jb_component('suffix', {\n  145  	type: 'data',\n  146: 	params: [\n  147  		{ id: 'separator', as: 'string', essential: true },\n  148  		{ id: 'text', as: 'string', defaultValue: '%%' },\n  ...\n  155  jb_component('removePrefix',{\n  156  	type: 'data',\n  157: 	params: [\n  158  		{ id: 'separator', as: 'string', essential: true },\n  159  		{ id: 'text', as: 'string', defaultValue: '%%' },\n  ...\n  166  jb_component('removePrefixRegex',{\n  167  	type: 'data',\n  168: 	params: [\n  169  		{ id: 'prefix', as: 'string', essential: true },\n  170  		{ id: 'text', as: 'string', defaultValue: '%%' },\n  ...\n  179  jb_component('removeSuffix',{\n  180  	type: 'data',\n  181: 	params: [\n  182  		{ id: 'separator', as: 'string', essential: true },\n  183  		{ id: 'text', as: 'string', defaultValue: '%%' },\n  ...\n  190  jb_component('removeSuffixRegex',{\n  191  	type: 'data',\n  192: 	params: [\n  193  		{ id: 'suffix', as: 'string', essential: true },\n  194  		{ id: 'text', as: 'string', defaultValue: '%%' },\n  ...\n  203  jb_component('writeValue',{\n  204  	type: 'action',\n  205: 	params: [\n  206  		{ id: 'to', as: 'ref' },\n  207  		{ id: 'value',}\n  ...\n  213  jb_component('toggleBooleanValue',{\n  214  	type: 'action',\n  215: 	params: [\n  216  		{ id: 'of', as: 'ref' },\n  217  	],\n  ...\n  222  jb_component('addToArray', {\n  223  	type: 'action',\n  224: 	params: [\n  225  		{ id: 'array',},\n  226  		{ id: 'add',}\n  ...\n  233  jb_component('removeFromArray',{\n  234  	type: 'action',\n  235: 	params: [\n  236  		{ id: 'array', as:'array' },\n  237  		{ id: 'remove', as:'array' }\n  ...\n  246  jb_component('remove', {\n  247  	type: 'action',\n  248: 	params: [{ id: 'value' }],\n  249  	impl: function(context,value) {\n  250  		jb_remove(value,true);\n  ...\n  254  \n  255  jb_component('slice', {\n  256: 	params: [\n  257  		{ id: 'start', as: 'number', defaultValue: 0, description: '0-based index', essential: true },\n  258  		{ id: 'end', as: 'number', essential: true, description: '0-based index of where to end the selection (not including itself)' }\n  ...\n  267  jb_component('not',{\n  268  	type: 'boolean',\n  269: 	params: [ \n  270  		{ id: 'of', type: 'boolean', as: 'boolean', essential: true} \n  271  	],\n  ...\n  277  jb_component('and',{\n  278  	type: 'boolean',\n  279: 	params: [ \n  280  		{ id: 'items', type: 'boolean[]', ignore: true, essential: true } \n  281  	],\n  ...\n  292  jb_component('or',{\n  293  	type: 'boolean',\n  294: 	params: [ \n  295  		{ id: 'items', type: 'boolean[]', ignore: true, essential: true } \n  296  	],\n  ...\n  307  jb_component('contains',{\n  308  	type: 'boolean',\n  309: 	params: [\n  310  		{ id: 'text', type: 'data[]', as: 'array', essential: true },\n  311  		{ id: 'allText', defaultValue: '%%', as:'array'}\n  ...\n  333  jb_component('startsWith',{\n  334  	type: 'boolean',\n  335: 	params: [\n  336  		{ id: 'startsWith', as: 'string', essential: true },\n  337  		{ id: 'text', defaultValue: '%%', as:'string'}\n  ...\n  344  jb_component('endsWith',{\n  345  	type: 'boolean',\n  346: 	params: [\n  347  		{ id: 'endsWith', as: 'string', essential: true },\n  348  		{ id: 'text', defaultValue: '%%', as:'string'}\n  ...\n  356  jb_component('filter',{\n  357  	type: 'aggregator',\n  358: 	params: [\n  359  		{ id: 'filter', type: 'boolean', as: 'boolean', dynamic: true, essential: true }\n  360  	],\n  ...\n  367  jb_component('count',{\n  368  	type: 'aggregator',\n  369: 	params: [\n  370  		{ id: 'items', as:'array', defaultValue: '%%'}\n  371  	],\n  ...\n  386  \n  387  jb_component('join',{\n  388: 	params: [\n  389  		{ id: 'separator', as: 'string', defaultValue:',', essential: true },\n  390  		{ id: 'prefix', as: 'string' },\n  ...\n  405  \n  406  jb_component('unique',{\n  407: 	params: [\n  408  		{ id: 'id', as: 'string', dynamic: true, defaultValue: '%%' },\n  409  		{ id: 'items', as:'array', defaultValue: '%%'}\n  ...\n  424  \n  425  jb_component('log',{\n  426: 	params: [\n  427  		{ id: 'obj', as: 'single', defaultValue: '%%'}\n  428  	],\n  ...\n  439  });\n  440  \n  441: jb_component('asIs',{ params: [{id: '$asIs'}], impl: function(context) { return context.profile.$asIs } });\n  442  jb_component('profile',{ impl: function(context) { return jb_handledObject(context.profile.$profile); } });\n  443  \n  ...\n  459  \n  460  jb_component('stringify',{\n  461: 	params: [\n  462  		{ id: 'value', defaultValue: '%%', as:'single'},\n  463  		{ id: 'space', as: 'string', description: 'use space or tab to make pretty output' }\n  ...\n  470  \n  471  jb_component('jbart', {\n  472: 	params: [\n  473  		{ id: 'script', description: 'jbart script to run' }\n  474  	],\n  ...\n  480  jb_component('split',{\n  481  	type: 'data',\n  482: 	params: [\n  483  		{ id: 'separator', as: 'string', defaultValue: ',' },\n  484  		{ id: 'text', as: 'string', defaultValue: '%%'},\n  ...\n  500  jb_component('replace',{\n  501  	type: 'data',\n  502: 	params: [\n  503  		{ id: 'find', as: 'string' },\n  504  		{ id: 'replace', as: 'string' },\n  ...\n  517  jb_component('foreach', {\n  518  	type: 'action',\n  519: 	params: [\n  520  		{ id: 'items', as: 'array', defaultValue: '%%'},\n  521  		{ id: 'action', type:'action', dynamic:true },\n  ...\n  532  jb_component('isNull',{\n  533  	type: 'boolean',\n  534: 	params: [\n  535  		{ id: 'item', as: 'single', defaultValue: '%%'}\n  536  	],\n  ...\n  542  jb_component('isEmpty',{\n  543  	type: 'boolean',\n  544: 	params: [\n  545  		{ id: 'item', as: 'single', defaultValue: '%%'}\n  546  	],\n  ...\n  552  jb_component('notEmpty',{\n  553  	type: 'boolean',\n  554: 	params: [\n  555  		{ id: 'item', as: 'single', defaultValue: '%%'}\n  556  	],\n  ...\n  562  jb_component('equals',{\n  563  	type: 'boolean',\n  564: 	params: [\n  565  		{ id: 'item1', as: 'single', essential: true },\n  566  		{ id: 'item2', defaultValue: '%%', as: 'single' }\n  ...\n  578  jb_component('notEquals',{\n  579  	type: 'boolean',\n  580: 	params: [\n  581  		{ id: 'item1', as: 'single', essential: true },\n  582  		{ id: 'item2', defaultValue: '%%', as: 'single' }\n  ...\n  595  jb_component('writableText', {\n  596  	type: 'data',\n  597: 	params: [\n  598  		{ id: 'defaultValue', as: 'string' }\n  599  	],\n  ...\n  605  jb_component('searchFilter', {\n  606  	type: 'aggregator',\n  607: 	params: [\n  608  		{ id: 'pattern', as:'string'},\n  609  		{ id: 'itemText', dynamic:true, as:'string', defaultValue:'%%'},\n  ...\n  626  jb_component('queryFilter', {\n  627  	type: 'aggregator',\n  628: 	params: [\n  629  		{ id: 'query', as:'single' },\n  630  		{ id: 'filters', type:'filter{}', ingore: true },\n  ...\n  686  jb_component('pluralize', {\n  687  	type: 'data',\n  688: 	params: [\n  689  		{ id: 'count', as:'number', defaultValue: '%%' },\n  690  		{ id: 'zero', as:'string', dynamic:true },\n  ...\n  704  jb_component('runActions', {\n  705  	type: 'action',\n  706: 	params: [ \n  707  		{ id: 'actions', type:'action[]', ignore: true, composite: true, essential: true }\n  708  	],\n  ...\n  722  jb_component('runActionOnItems', {\n  723  	type: 'action',\n  724: 	params: [ \n  725  		{ id: 'items', type:'data[]', as:'array', essential: true},\n  726  		{ id: 'action', type:'action', ignore: true, essential: true }\n  ...\n  744  \n  745  jb_component('delay', {\n  746: 	params: [\n  747  		{ id: 'mSec', type: 'number', defaultValue: 1}\n  748  	],\n  749: 	impl: ctx => jb_delay(ctx.params.mSec)\n  750  })\n  751  \n  752  jb_component('extractPrefix',{\n  753  	type: 'data',\n  754: 	params: [\n  755  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  756  		{ id: 'text', as: 'string', defaultValue: '%%'},\n  ...\n  771  jb_component('extractSuffix',{\n  772  	type: 'data',\n  773: 	params: [\n  774  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  775  		{ id: 'text', as: 'string', defaultValue: '%%'},\n  ...\n  790  jb_component('onNextTimer',{\n  791  	type: 'action',\n  792: 	params: [\n  793  		{ id: 'action', type: 'action', dynamic: true }\n  794  	],\n\nC:\\jbart5-ng\\src\\core\\core.js:\n   36          run.preparedParams.forEach(function(paramObj) {\n   37            switch (paramObj.type) {\n   38:             case 'function': run.ctx.params[paramObj.name] = paramObj.func; break;\n   39:             case 'array': run.ctx.params[paramObj.name] = \n   40                paramObj.array.map(function(prof,i) { return jb_run(jb_ctx(run.ctx,{profile: prof, path: paramObj.name+'~'+i}),paramObj.param); } ); break;  // maybe we should [].concat and handle nulls\n   41:             default: run.ctx.params[paramObj.name] = jb_run(paramObj.context, paramObj.param);\n   42            }\n   43          });\n   ..\n   66  \n   67    function prepareGCArgs(ctx,preparedParams) {\n   68:     return [ctx].concat(preparedParams.map(param=>ctx.params[param.name]))\n   69    }\n   70  }\n   71  \n   72  function jb_compParams(comp) {\n   73:   return Array.isArray(comp.params) ? comp.params : jb_entries(comp.params).map(x=>jb_extend(x[1],jb_obj('id',x[0])));\n   74  }\n   75  \n   ..\n  169    var ctx = new jbCtx(context,{});\n  170    ctx.parentParam = parentParam;\n  171:   ctx.params = {}; // TODO: try to delete this line\n  172    var preparedParams = jb_prepareParams(comp,profile,ctx);\n  173    if (typeof comp.impl === 'function') {\n  ...\n  189  function jb_var(context,varname) {\n  190    var res;\n  191:   if (context.componentContext && typeof context.componentContext.params[varname] != 'undefined') \n  192:     res = context.componentContext.params[varname];\n  193    else if (context.vars[varname] != null) \n  194      res = context.vars[varname];\n\nC:\\jbart5-ng\\src\\core\\pretty-print.js:\n   27      var comp_name = jb_compName(profile);\n   28      if (comp_name) { // tgp obj\n   29:       var params = jb_entries((jbart.comps[comp_name] || {}).params || {}).map(x=>x[0]);\n   30:       props.sort((p1,p2)=>params.indexOf(p1) - params.indexOf(p2));\n   31      }\n   32      if (props.indexOf('$') > 0) { // make the $ first\n\nC:\\jbart5-ng\\src\\core\\utils.js:\n   51    if (typeof context == 'undefined') {\n   52      this.vars = {};\n   53:     this.params = {};\n   54      this.resources = {}\n   55    }\n   ..\n   66      this.data= (typeof ctx2.data != 'undefined') ? ctx2.data : context.data;     // allow setting of data:null\n   67      this.vars= ctx2.vars ? jb_extend({},context.vars,ctx2.vars) : context.vars;\n   68:     this.params= ctx2.params || context.params;\n   69      this.resources= context.resources;\n   70      this.componentContext= (typeof ctx2.componentContext != 'undefined') ? ctx2.componentContext : context.componentContext;\n   ..\n  250    eventObject = eventObject || {};\n  251    eventObject.eventType = eventType;\n  252:   var params = [eventObject].concat(Array.prototype.slice.call(arguments,3));\n  253    \n  254    var listeners = object.$jbListeners[eventType];\n  255    for(var i=0;i<listeners.length;i++) {\n  256      try {\n  257:       listeners[i].handler.apply(object,params);\n  258      } catch(e) {\n  259        jb_logException(e,'error trigerring event ' + eventType);\n\nC:\\jbart5-ng\\src\\testing\\ui-testers-ctrls.ts:\n  104  jb.component('ui-tests.show-one-test', {\n  105  	type: 'control',\n  106: 	params: [\n  107  		{ id: 'testResult',as: 'single', defaultValue: '%%'},\n  108  	],\n\nC:\\jbart5-ng\\src\\testing\\ui-testers.ts:\n    3  jb.component('ng2-ui-test', {\n    4  	type: 'test',\n    5: 	params: [\n    6  		{ id: 'control', type: 'control', dynamic: true },\n    7  		{ id: 'expectedTemplateResult', type: 'boolean', dynamic: true, as: 'boolean' },\n    .\n   28  							resolve({ \n   29  								id: ctx.vars.testID,\n   30: 								success: ctx.params.expectedHtmlResult(ctx.setData(html))\n   31  							});\n   32  							if (!jbart.singleTestID)\n   ..\n   41  jb.component('data-test', {\n   42  	type: 'test',\n   43: 	params: [\n   44  		{ id: 'calculate', dynamic: true },\n   45  		{ id: 'runBefore', type: 'action', dynamic: true },\n\nC:\\Dropbox\\mega\\mega.js:\n   12  jb_component('mega.group', {\n   13    type: 'control', \n   14:   params: [\n   15       { id: 'items', as: 'array' }\n   16    ], \n\n506 matches across 73 files\n\n\nSearching 120 files for \"paramDef\" (regex, case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-model-components.ts:\n   48  	],\n   49  	impl: (context,path,param) => \n   50: 		model.paramDef(path+'~'+param)\n   51  })\n   52  \n   ..\n   68  })\n   69  \n   70: jb.component('studio.paramDef',{\n   71  	params: [ {id: 'path', as: 'string' } ],\n   72: 	impl: (context,path) => model.paramDef(path)\n   73  })\n   74  \n   ..\n   76  	params: [ {id: 'path', as: 'string' } ],\n   77  	impl: (context,path) => \n   78: 		((model.paramDef(path) || {}).options ||'').split(',').map(x=>{return {code:x,text:x}})\n   79  })\n   80  \n\nC:\\jbart5-ng\\projects\\studio\\studio-properties-menu.ts:\n   61            features :{$: 'hidden', \n   62              showCondition: {$: 'equals', \n   63:               item1: [ {$: 'studio.paramDef', path: '%$path%' }, '%as%'],\n   64                item2: 'string'\n   65              }\n\nC:\\jbart5-ng\\projects\\studio\\studio-properties.ts:\n  124  		var val = model.val(path);\n  125  		var valType = typeof val;\n  126: 		var paramDef = model.paramDef(path);\n  127: 		if (!paramDef)\n  128  			jb.logError('property-field: no param def for path '+path);\n  129  		if (valType == 'function')\n  130  			fieldPT = 'studio.property-javascript';\n  131: 		else if (paramDef.as == 'number')\n  132  			fieldPT = 'studio.property-slider';\n  133: 		else if (paramDef.options)\n  134  			fieldPT = 'studio.property-enum';\n  135: 		else if ( ['data','boolean'].indexOf(paramDef.type || 'data') != -1) {\n  136  			if ( model.compName(path) || valType == 'object')\n  137  				fieldPT = 'studio.property-script';\n  138: 			else if (paramDef.type == 'boolean' && (valType == 'boolean' || val == null))\n  139  				fieldPT = 'studio.property-boolean';\n  140  			else\n  141  				fieldPT = 'studio.property-primitive';\n  142  		}\n  143: 		else if ( (paramDef.type || '').indexOf('[]') != -1 && isNaN(Number(path.split('~').pop())))\n  144  			fieldPT = 'studio.property-script';\n  145: 		// else if ( (paramDef.type || '').indexOf('.style') > -1 )\n  146  		//  	fieldPT = 'studio.property-Style';\n  147      // else if ( model.compName(path) == 'customStyle')\n  ...\n  246  	impl :{$: 'editable-number', \n  247  		$vars: { \n  248: 			paramDef :{$: 'studio.paramDef', path: '%$path%' } \n  249  		},\n  250  		title :{$: 'studio.prop-name', path: '%$path%' },\n  251  		databind :{$: 'studio.ref', path: '%$path%' },\n  252  		style :{$: 'editable-number.slider', width: '120' },\n  253: 		min: '%$paramDef/min%',\n  254: 		max: '%$paramDef/max%',\n  255: 		step: '%$paramDef/step%',\n  256  		features :{$: 'css', css: '{ margin-left: -5px; }' },\n  257  	}\n\nC:\\jbart5-ng\\projects\\studio\\studio-style-editor.ts:\n  126          var id = ctx.exp('%$globals/project%.%$dialogData/name%'); \n  127          var profile = {\n  128:           type: model.paramDef(path).type,\n  129            impl : model.val(path)\n  130          }\n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n  295  		if (this.paramType(path) == 'data')\n  296  			return jb.writeValue(profileRefFromPath(path),'');\n  297: 		var param = this.paramDef(path);\n  298  		jb.writeValue(profileRefFromPath(path),param.defaultValue || {$: ''});\n  299  	}\n  ...\n  391  	}\n  392  \n  393: 	paramDef(path) {\n  394  		if (!parentPath(path)) // no param def for root\n  395  			return;\n  ...\n  406  \n  407  	paramType(path) {\n  408: 		return (this.paramDef(path) || {}).type || 'data';\n  409  	}\n  410  	PTsOfPath(path) {\n  ...\n  481  			return parentPath(path).split('~').pop().replace(/s$/,'');\n  482  \n  483: 		var paramDef = this.paramDef(path);\n  484  		var val = profileFromPath(path);\n  485: 		if ((paramDef.type ||'').indexOf('[]') != -1) {\n  486  			var length = this.subNodes(path,'array').length;\n  487  			if (length)\n  ...\n  553  	],\n  554  	impl: (context,path,param) => \n  555: 		model.paramDef(path+'~'+param)\n  556  })\n  557  \n  ...\n  573  })\n  574  \n  575: jb.component('studio.paramDef',{\n  576  	params: [ {id: 'path', as: 'string' } ],\n  577: 	impl: (context,path) => model.paramDef(path)\n  578  })\n  579  \n  ...\n  581  	params: [ {id: 'path', as: 'string' } ],\n  582  	impl: (context,path) => \n  583: 		((model.paramDef(path) || {}).options ||'').split(',').map(x=>{return {code:x,text:x}})\n  584  })\n  585  \n\n30 matches across 5 files\n\n\nSearching 120 files for \".params\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\button.js:\n   13    ],\n   14    impl: function(context) {\n   15:     if (context.params.$click) try { context.params.action() } catch (e) { jb.logException(e) } // for test debug\n   16      return jb_ui.ctrl(context).jbExtend({\n   17        beforeInit: function(cmp) {\n   18:         cmp.title = context.params.title();\n   19:         cmp.clicked = jb_ui.wrapWithLauchingElement(context.params.action, context, cmp.elementRef);\n   20        }\n   21      })\n\nC:\\jbart5-ng\\src\\ui\\css-features.js:\n   43    impl: (ctx) => {\n   44      var css = ['top','left','right','bottom']\n   45:       .filter(x=>ctx.params[x] != null)\n   46:       .map(x=> `padding-${x}: ${ctx.params[x]}px`)\n   47        .join('; ');\n   48:     return {css: `${ctx.params.selector} {${css}}`};\n   49    }\n   50  })\n   ..\n   61    impl: (ctx) => {\n   62      var css = ['top','left','right','bottom']\n   63:       .filter(x=>ctx.params[x] != null)\n   64:       .map(x=> `margin-${x}: ${ctx.params[x]}px`)\n   65        .join('; ');\n   66:     return {css: `${ctx.params.selector} {${css}}`};\n   67    }\n   68  })\n\nC:\\jbart5-ng\\src\\ui\\dialog.js:\n   14  	],\n   15  	impl: function(context,id) {\n   16: 		var modal = context.params.modal;\n   17  		var dialog = { \n   18  			id: id, \n   19: 			onOK: context.params.onOK, \n   20  			modal: modal, \n   21  			$: $('div'), \n   ..\n   28  		dialog.comp = jb_ui.ctrl(ctx).jbExtend({\n   29  			beforeInit: function(cmp) {\n   30: 				cmp.title = ctx.params.title(ctx);\n   31  				cmp.dialog = dialog;\n   32  				cmp.dialog.$el = $(cmp.elementRef.nativeElement);\n   ..\n   34  \n   35  				cmp.dialogClose = dialog.close;\n   36: 				cmp.contentComp = ctx.params.content(ctx);\n   37: 				cmp.menuComp = ctx.params.menu(ctx);\n   38: 				cmp.hasMenu = !!ctx.params.menu.profile;\n   39  			}\n   40  		});\n\nC:\\jbart5-ng\\src\\ui\\editable-boolean.js:\n   15    ],\n   16    impl: (ctx) => {\n   17:     var ctx2 = ctx.setVars({ field: jb_ui.twoWayBind(ctx.params.databind) });\n   18    	return jb_ui.ctrl(ctx2).jbExtend({\n   19    		beforeInit: function(cmp) {\n   ..\n   26  \n   27    			cmp.text = () => \n   28:           cmp.jbModel ? ctx.params.textForTrue : ctx.params.textForFalse;\n   29    		}\n   30    	});\n\nC:\\jbart5-ng\\src\\ui\\editable-text.js:\n   12    ],\n   13    impl: ctx => \n   14:   	jb_ui.ctrl(ctx.setVars({ field: jb_ui.twoWayBind(ctx.params.databind) }))\n   15  });\n   16  \n\nC:\\jbart5-ng\\src\\ui\\features.js:\n   16            cmp.jbGroupChildrenEm = jb_rx.observableFromCtx(context.setData(waitFor))\n   17              .flatMap(x=>{\n   18:                 var data = context.params.mapToResource(x);\n   19:                 jb.writeToResource(context.params.resource,data,context);\n   20                  return [context.vars.$model.controls(cmp.ctx.setData(data))];\n   21                })\n   ..\n  140          cmp.keydown.filter(e=> e.keyCode == 13)\n  141              .subscribe(()=>\n  142:               jb_ui.wrapWithLauchingElement(ctx.params.action, cmp.ctx, cmp.elementRef)())\n  143        },\n  144        observable: () => {},\n  ...\n  162    ],\n  163    impl: function(context) { return  { \n  164:     afterViewInit: cmp => jb.delay(1).then(() => context.params.action(cmp.ctx))\n  165    }}\n  166  })\n\nC:\\jbart5-ng\\src\\ui\\group.js:\n   22  \n   23          cmp.initGroup = function() {\n   24:           cmp.title = context.params.title(context);\n   25:           (cmp.jbGroupChildrenEm || jb_rx.Observable.of(context.params.controls(cmp.ctx)))\n   26                .merge(cmp.jbWatchGroupChildrenEm || jb_rx.Observable.of())\n   27                .subscribe(comps=> {\n\nC:\\jbart5-ng\\src\\ui\\image.js:\n   17  	impl: function(context) {\n   18  		return jb_ui.ctrl(context).jbExtend({ init: function(cmp) {\n   19: 			var image = context.params;\n   20  			var units = image.units;\n   21  			if (image.width) cmp.width = image.width + units;\n\nC:\\jbart5-ng\\src\\ui\\itemlist.js:\n  111          var databindEm = cmp.jbEmitter.filter(x => x == 'check')\n  112              .map(()=> \n  113:               jb.val(ctx.params.databind))\n  114              .filter(x=>\n  115                x != cmp.selected)\n  ...\n  123  \n  124          doubleClick.subscribe(()=>\n  125:           ctx.params.onDoubleClick(ctx.setData(cmp.selected)));\n  126  \n  127          selectionEm.subscribe( selected => {\n  128:           if (jb.val(ctx.params.databind) != selected)\n  129:             jb.writeValue(ctx.params.databind,selected);\n  130:           ctx.params.onSelection(ctx.setData(cmp.selected))\n  131          });\n  132  \n  ...\n  135      },\n  136      afterViewInit: cmp => {\n  137:         if (ctx.params.autoSelectFirst && cmp.items[0] && !jb.val(ctx.params.databind)) {\n  138              cmp.selected = cmp.items[0];\n  139:             jb.writeValue(ctx.params.databind,cmp.selected);\n  140          }\n  141      },\n  ...\n  169            .takeUntil( cmp.jbEmitter.filter(x=>x =='destroy') );\n  170  \n  171:         if (context.params.autoFocus)\n  172              setTimeout(()=> \n  173                cmp.elementRef.nativeElement.focus(),1);\n\nC:\\jbart5-ng\\src\\ui\\itemlog.js:\n   19            cmp.items = [];\n   20            cmp.itemToComp = item => \n   21:             context.params.controls(item.setVars(jb.obj(context.params.itemVariable,item.data))) [0];\n   22  \n   23:           context.params.items(context).subscribe(itemCtx=>  {\n   24                cmp.items.unshift(itemCtx);\n   25:               if (context.params.counter)\n   26:                 jb.writeValue(context.params.counter,cmp.items.length)\n   27            })\n   28        }\n\nC:\\jbart5-ng\\src\\ui\\jb-ui.ts:\n   43  \n   44  		this.jb_profile = ctx.profile;\n   45: 		var title = jb_tosingle(jb.val(this.ctx.params.title)) || (() => ''); \n   46  		this.jb_title = (typeof title == 'function') ? title : () => ''+title;\n   47  		this.jb$title = (typeof title == 'function') ? title() : title; // for debug\n   ..\n  157  	jbCtrl(context) {\n  158  		var options = mergeOptions(\n  159: 			optionsOfProfile(context.params.style && context.params.style.profile),\n  160  			optionsOfProfile(context.profile));\n  161  \n  ...\n  163  		jb.path(options, ['atts','jb-path'], this.callerPath); // for pick & edit\n  164  \n  165: 		(context.params.features && context.params.features(context) || []).forEach(f => this.jbExtend(f,context))\n  166: 		if (context.params.style && context.params.style.profile && context.params.style.profile.features) {\n  167: 			jb.toarray(context.params.style.profile.features)\n  168  				.forEach((f,i)=>\n  169  					this.jbExtend(context.runInner(f,{type:'feature'},context.path+'~features~'+i),context))\n  ...\n  277  \n  278  export function ctrl(context) {\n  279: 	var ctx = context.setVars({ $model: context.params });\n  280  	var styleOptions = defaultStyle(ctx);\n  281  	return new jbComponent(ctx).jbExtend(styleOptions).jbCtrl(ctx);\n  ...\n  286  		if (!profile.style && context.vars[defaultVar])\n  287  			return ctx.run({$:context.vars[defaultVar]})\n  288: 		return context.params.style(ctx);\n  289  	}\n  290  }\n\nC:\\jbart5-ng\\src\\ui\\label.js:\n    9      ],\n   10      impl: ctx => \n   11:         jb_ui.ctrl(ctx.setVars({title: ctx.params.title() }))\n   12  })\n   13  \n\nC:\\jbart5-ng\\src\\ui\\picklist.js:\n   14    ],\n   15    impl: ctx => {\n   16:     ctx = ctx.setVars({ field: jb_ui.twoWayBind(ctx.params.databind) });\n   17      return jb_ui.ctrl(ctx).jbExtend({\n   18        beforeInit: function(cmp) {\n   ..\n   20  \n   21          cmp.recalcOptions = function() {\n   22:           cmp.options = ctx.params.options(ctx);\n   23            var groupsHash = {};\n   24            cmp.groups = [];\n\nC:\\jbart5-ng\\src\\ui\\pulldown-menu.js:\n   28  	],\n   29  	  impl: function(context,title,icon,shortcut) {\n   30: 	    if (context.params.$click) try { context.params.action() } catch (e) { jb.logException(e) } // for test debug\n   31  	    return jb_ui.ctrl(context).jbExtend({\n   32  	      beforeInit: function(cmp) {\n   ..\n   36  	        cmp.clicked = jb_ui.wrapWithLauchingElement(() => {\n   37  	        	context.vars.$dialog && context.vars.$dialog.close(); // close dialog\n   38: 	        	context.params.action();\n   39  	        } , context, cmp.elementRef);\n   40  	      }\n   ..\n   90  				content :{$: 'group', \n   91  					controls: ctx => \n   92: 						context.params.controls(ctx) \n   93  				}\n   94  			})\n   ..\n  101  						cmp.openPopup();\n  102  				}\n  103: 				cmp.title = context.params.title();\n  104  				cmp.openPopup = jb_ui.wrapWithLauchingElement(openPopup, context, cmp.elementRef); \n  105  \n  106: 				if (context.params.open)\n  107  					cmp.openPopup();\n  108  			}\n  ...\n  165            .takeUntil( cmp.jbEmitter.filter(x=>x =='destroy') );\n  166  \n  167:         if (ctx.params.autoFocus)\n  168              setTimeout(()=> {\n  169                cmp.elementRef.nativeElement.focus();\n  ...\n  177  	            var selected = $(cmp.elementRef.nativeElement).find('>.selected');\n  178              	var selectedCtx = (cmp.ctrls[selected.index()] || {}).comp.ctx;\n  179:             	if (selectedCtx && selectedCtx.params.action)\n  180: 					jb_ui.wrapWithLauchingElement(selectedCtx.params.action, selectedCtx, \n  181  						$(cmp.elementRef.nativeElement).find('>.selected')[0])()\n  182              })\n\nC:\\jbart5-ng\\src\\ui\\tabs.js:\n   18  \n   19          cmp.initTabs = function() {\n   20:           (cmp.jbGroupChildrenEm || jb_rx.Observable.of(context.params.tabs(cmp.ctx)))\n   21                .merge(cmp.jbWatchGroupChildrenEm || jb_rx.Observable.of())\n   22                .subscribe(comps=> {\n\nC:\\jbart5-ng\\src\\ui\\text.js:\n   12      ],\n   13      impl: (ctx,text) => \n   14:         jb_ui.ctrl(ctx.setVars({text: ctx.params.text()}))\n   15  })\n   16  \n\nC:\\jbart5-ng\\src\\ui\\md-styles\\layout-md.ts:\n   25      var responsiveSelector = context.vars.responsiveSelector || '';\n   26      var atts = {}\n   27:     if (context.params.layout) atts['layout'+responsiveSelector] = context.params.layout;\n   28      ['margin','fill','padding','wrap'].forEach(p=>{\n   29:       if(context.params[p])\n   30:         atts['layout-' + p+ responsiveSelector] = context.params[p];\n   31      })\n   32:     if (context.params.align)\n   33:       atts['layout-align'+responsiveSelector] = context.params.align + (context.params.subAlign ? (' ' + context.params.subAlign) : '' )\n   34  \n   35:     context.params.responsive.forEach(responsive=>jb.extend(atts,responsive))\n   36  \n   37      return {\n   38        init: function(cmp) { \n   39          cmp.initGroup();\n   40:         context.params.children.forEach((child,index)=>\n   41            cmp.extendChild(index,{atts: child}))\n   42        },\n   ..\n   62      var responsiveSelector = ctx.vars.responsiveSelector || '';\n   63      var atts = {};\n   64:     atts['flex'+responsiveSelector] = percentage_dictionary[ctx.params.flex] || ctx.params.flex || '';\n   65:     if (ctx.params.marginLeft && percentage_dictionary[ctx.params.marginLeft])\n   66:       atts['flex-offset'+responsiveSelector] = percentage_dictionary[ctx.params.marginLeft];\n   67:     if (ctx.params.order) atts['flex-order'+responsiveSelector] = ctx.params.order;\n   68:     if (ctx.params.show) atts['show'+responsiveSelector] = ctx.params.show;\n   69:     if (ctx.params.hide) atts['hide'+responsiveSelector] = ctx.params.hide;\n   70:     ctx.params.responsive.forEach(responsive=>jb.extend(atts,responsive))\n   71      return atts;\n   72    }\n   ..\n   80    ],\n   81    impl: ctx => \n   82:     ctx.params.layout(ctx.setVars({responsiveSelector: '-' + responsive_dictionary[ctx.params.selector]}))\n   83  })\n   84  \n   ..\n   90    ],\n   91    impl: ctx =>\n   92:     ctx.params.child(ctx.setVars({responsiveSelector: '-' + responsive_dictionary[ctx.params.selector]}))\n   93  })\n   94  \n\nC:\\jbart5-ng\\src\\ui\\styles\\layout-styles.ts:\n   43      // $vars: {\n   44      //    flexProps: ctx => {\n   45:     //       var params = ctx.componentContext.params;\n   46      //       return [\n   47      //         ['display','flex'],\n\nC:\\jbart5-ng\\src\\ui\\tree\\tree.ts:\n   29  	],\n   30  	impl: function(context) { \n   31: 		var nodeModel = context.params.nodeModel();\n   32  		if (!nodeModel)\n   33  			return jb.logException('missing nodeModel in tree');\n   ..\n  131    				.filter(x => x.length === 2)\n  132    				.subscribe(x=> {\n  133: 					jb_ui.wrapWithLauchingElement(context.params.onDoubleClick, context.setData(tree.selected), x[0].srcElement)()\n  134    				})\n  135  \n  136:   		  var databindObs = (context.params.databind && jb_rx.refObservable(context.params.databind,context)\n  137          	.distinctUntilChanged()) || jb_rx.Observable.of();\n  138  \n  ...\n  149  				  return path; \n  150  			  },'')\n  151: 			  if (context.params.databind)\n  152: 				  jb.writeValue(context.params.databind, selected);\n  153: 			  context.params.onSelection(context.setData(selected));\n  154  		  });\n  155  		  // first auto selection selection\n  156: 		  var first_selected = jb.val(context.params.databind);\n  157: 		  if (!first_selected && context.params.autoSelectFirst) {\n  158  			  var first = tree.el.querySelectorAll('.treenode')[0];\n  159  			  first_selected = tree.elemToPath(first);\n  ...\n  203  				});\n  204  \n  205: 				if (context.params.autoFocus)\n  206  					setTimeout(() => \n  207  						cmp.elementRef.nativeElement.focus(), 1);\n  ...\n  210  					.filter(e=> e.keyCode == 13)\n  211  						.subscribe(e =>\n  212: 							runActionInTreeContext(context.params.onEnter))\n  213  \n  214  				keyDownNoAlts.filter(e=> e.keyCode == 38 || e.keyCode == 40)\n  ...\n  228  						var isArray = tree.nodeModel.isArray(tree.selected);\n  229  						if (!isArray || (tree.expanded[tree.selected] && event.keyCode == 39))\n  230: 							runActionInTreeContext(context.params.onRightClickOfExpanded);	\n  231  						if (isArray && tree.selected) \n  232  							tree.expanded[tree.selected] = (event.keyCode == 39);\n\nC:\\jbart5-ng\\projects\\studio\\studio-pick-dialog.ts:\n   17  		content: {$: 'label', title: ''}, // dummy\n   18  		onOK: ctx =>\n   19: 			ctx.componentContext.params.onSelect(ctx.setData(ctx.vars.pickPath.path))\n   20  	 }\n   21  })\n   ..\n   74  	({\n   75        init: cmp=> {\n   76: 		  var _window = ctx.params.from == 'preview' ? jbart.previewWindow : window;\n   77: 		  var previewOffset = ctx.params.from == 'preview' ? $('#jb-preview').offset().top : 0;\n   78  		  cmp.titleBelow = false;\n   79  \n\nC:\\jbart5-ng\\projects\\studio\\studio-style-editor.ts:\n  123      onOK: ctx => {\n  124          debugger;\n  125:         var path = ctx.componentContext.params.path;\n  126          var id = ctx.exp('%$globals/project%.%$dialogData/name%'); \n  127          var profile = {\n\nC:\\jbart5-ng\\projects\\studio\\studio-suggestions.ts:\n   39      this.options = [];\n   40      probeCtx = probeCtx || (jbart.previewjbart || jbart).initialCtx;\n   41:     var vars = jb.entries(jb.extend({},(probeCtx.componentContext||{}).params,probeCtx.vars,probeCtx.resources))\n   42            .map(x=>({toPaste: '$' + x[0], value: x[1]}))\n   43  \n   ..\n  129              .subscribe(e=> {\n  130                if (!$(input).hasClass('dialog-open'))\n  131:                 ctx.params.onEnter()\n  132                })\n  133  \n  ...\n  151            .delay(1) // we use keydown - let the input fill itself\n  152            .map(e=> \n  153:             new suggestions(e.keyEv.srcElement,'').extendWithOptions(e.ctx,ctx.params.path))\n  154            .filter(e => \n  155              e.text)\n  ...\n  169                    closeFloatingInput(ctx)\n  170                };\n  171:               jb_ui.wrapWithLauchingElement(ctx.params.action,ctx.setVars({suggestionContext: suggestionContext}), e.input)()\n  172              }\n  173            })\n  174  \n  175          function getProbe() {\n  176:           cmp.probeResult = cmp.probeResult || ctx.run({$: 'studio.probe', path: ctx.params.path });\n  177            return cmp.probeResult;\n  178          }\n  179          function closeFloatingInput(ctx) {\n  180:             if (ctx.params.floatingInput)\n  181                ctx.run({$:'closeContainingPopup'});\n  182              ctx.vars.regainFocus && ctx.vars.regainFocus();\n  ...\n  254            .subscribe(x=>{\n  255                if (cmp.selected)\n  256:                 ctx.params.onEnter(ctx.setData(cmp.selected))\n  257            })\n  258          keyEm.filter(e=>e.keyCode == 27) // ESC\n\nC:\\jbart5-ng\\projects\\studio\\studio-testers.ts:\n   15    impl :{$: 'data-test', \n   16      calculate: ctx => {\n   17:       var params = ctx.componentContext.params;\n   18        var selectionStart = params.selectionStart == -1 ? params.expression.length : params.selectionStart;\n   19        var obj = new suggestions({ value: params.expression, selectionStart: selectionStart })\n   ..\n   34    impl :{$: 'data-test', \n   35      calculate: ctx => {\n   36:       var params = ctx.componentContext.params;\n   37        var mdl = new TgpModel('',params.childrenType);\n   38        var titles = mdl.children(params.path)\n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n   69  			return [path + '~$' + compName];\n   70  		} else if (comp) {\n   71: 			var composite = jb.entries(comp.params)\n   72  				.filter(p=>\n   73  					p[1].composite)\n   74  				.map(p=>flattenArray(p[0]));\n   75  \n   76: 			return (composite[0] || []).concat(jb.entries(comp.params)\n   77  					.filter(p=>!p[1].composite)\n   78  					.map(p=> ({ path: path + '~' + p[0], param: p[1]}))\n   ..\n   99  		if (comp) {\n  100  			var existing = this.jbEditorSubNodes(path);\n  101: 			return jb.entries(comp.params)\n  102  					.map(p=> path + '~' + p[0])\n  103  					.filter(p=> existing.indexOf(p) == -1)\n  ...\n  274  	wrap(path,args) {\n  275  		var compDef = getComp(args.compName);\n  276: 		var paramNames = Object.getOwnPropertyNames((compDef || {}).params);\n  277  		if (paramNames[0]) {\n  278  			var result = jb.extend({$: args.compName}, jb.obj(paramNames[0],[ profileFromPath(path) ]));\n  ...\n  320  		// copy properties from existing & default values\n  321  		if (existing && typeof existing == 'object')\n  322: 			jb.entries(comp.params).forEach(p=>{\n  323  				if (existing[p[0]])\n  324  					result[p[0]] = existing[p[0]];\n  ...\n  337  		var result = { $: compName };\n  338  		// copy default values\n  339: 		jb.entries(comp.params).forEach(p=>{\n  340  			if (p[1].defaultValue)\n  341  				result[p[0]] = JSON.parse(JSON.stringify(p[1].defaultValue))\n  ...\n  361  		var profile = profileFromPath(path);\n  362  		// inject conditional param values\n  363: 		comp.params\n  364  			.forEach(p=>{ \n  365  				var pUsage = '%$'+p.id+'%';\n  ...\n  372  			})\n  373  		// inject param values \n  374: 		comp.params\n  375  			.forEach(p=>{ \n  376  				var pVal = '' + (profile[p.id] || p.defaultValue || ''); // only primitives\n  ...\n  398  		var parent_prof = profileFromPath(parentPath(path),true);\n  399  		var compDef = parent_prof && getComp(jb.compName(parent_prof));\n  400: 		var params = (compDef || {}).params;\n  401  		var paramName = path.split('~').pop();\n  402  		return params.filter(p=>p.id==paramName)[0] || {};\n  ...\n  429  		var prof = profileFromPath(path,true);\n  430  		if (!prof) return [];\n  431: 		var params = (getComp(jb.compName(prof)) || {}).params;\n  432  		return params.filter(p=>(p.type||'').indexOf('control')!=-1).map(p=>p.id)\n  433  	}\n  ...\n  435  		var prof = profileFromPath(path);\n  436  		if (!prof) return [];\n  437: 		var params = (getComp(jb.compName(prof)) || {}).params;\n  438  		return params.filter(p=>\n  439  				(p.type||'').indexOf('control')==-1)\n\nC:\\jbart5-ng\\src\\core\\components.js:\n   13   	],\n   14   	impl: function(context,param) {\n   15:  	  var paramObj = context.componentContext && context.componentContext.params[param];\n   16        if (typeof(paramObj) == 'function')\n   17   		return paramObj(jb_ctx(context, { \n   ..\n  747  		{ id: 'mSec', type: 'number', defaultValue: 1}\n  748  	],\n  749: 	impl: ctx => jb_delay(ctx.params.mSec)\n  750  })\n  751  \n\nC:\\jbart5-ng\\src\\core\\core.js:\n   36          run.preparedParams.forEach(function(paramObj) {\n   37            switch (paramObj.type) {\n   38:             case 'function': run.ctx.params[paramObj.name] = paramObj.func; break;\n   39:             case 'array': run.ctx.params[paramObj.name] = \n   40                paramObj.array.map(function(prof,i) { return jb_run(jb_ctx(run.ctx,{profile: prof, path: paramObj.name+'~'+i}),paramObj.param); } ); break;  // maybe we should [].concat and handle nulls\n   41:             default: run.ctx.params[paramObj.name] = jb_run(paramObj.context, paramObj.param);\n   42            }\n   43          });\n   ..\n   66  \n   67    function prepareGCArgs(ctx,preparedParams) {\n   68:     return [ctx].concat(preparedParams.map(param=>ctx.params[param.name]))\n   69    }\n   70  }\n   71  \n   72  function jb_compParams(comp) {\n   73:   return Array.isArray(comp.params) ? comp.params : jb_entries(comp.params).map(x=>jb_extend(x[1],jb_obj('id',x[0])));\n   74  }\n   75  \n   ..\n  169    var ctx = new jbCtx(context,{});\n  170    ctx.parentParam = parentParam;\n  171:   ctx.params = {}; // TODO: try to delete this line\n  172    var preparedParams = jb_prepareParams(comp,profile,ctx);\n  173    if (typeof comp.impl === 'function') {\n  ...\n  189  function jb_var(context,varname) {\n  190    var res;\n  191:   if (context.componentContext && typeof context.componentContext.params[varname] != 'undefined') \n  192:     res = context.componentContext.params[varname];\n  193    else if (context.vars[varname] != null) \n  194      res = context.vars[varname];\n\nC:\\jbart5-ng\\src\\core\\pretty-print.js:\n   27      var comp_name = jb_compName(profile);\n   28      if (comp_name) { // tgp obj\n   29:       var params = jb_entries((jbart.comps[comp_name] || {}).params || {}).map(x=>x[0]);\n   30        props.sort((p1,p2)=>params.indexOf(p1) - params.indexOf(p2));\n   31      }\n\nC:\\jbart5-ng\\src\\core\\utils.js:\n   51    if (typeof context == 'undefined') {\n   52      this.vars = {};\n   53:     this.params = {};\n   54      this.resources = {}\n   55    }\n   ..\n   66      this.data= (typeof ctx2.data != 'undefined') ? ctx2.data : context.data;     // allow setting of data:null\n   67      this.vars= ctx2.vars ? jb_extend({},context.vars,ctx2.vars) : context.vars;\n   68:     this.params= ctx2.params || context.params;\n   69      this.resources= context.resources;\n   70      this.componentContext= (typeof ctx2.componentContext != 'undefined') ? ctx2.componentContext : context.componentContext;\n\nC:\\jbart5-ng\\src\\testing\\ui-testers.ts:\n   28  							resolve({ \n   29  								id: ctx.vars.testID,\n   30: 								success: ctx.params.expectedHtmlResult(ctx.setData(html))\n   31  							});\n   32  							if (!jbart.singleTestID)\n\n147 matches across 29 files\n\n\nSearching 120 files for \"params.filter\" (case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n  400  		var params = (compDef || {}).params;\n  401  		var paramName = path.split('~').pop();\n  402: 		return params.filter(p=>p.id==paramName)[0] || {};\n  403  	}\n  404  \n  ...\n  430  		if (!prof) return [];\n  431  		var params = (getComp(jb.compName(prof)) || {}).params;\n  432: 		return params.filter(p=>(p.type||'').indexOf('control')!=-1).map(p=>p.id)\n  433  	}\n  434  	nonControlParams(path) {\n  ...\n  436  		if (!prof) return [];\n  437  		var params = (getComp(jb.compName(prof)) || {}).params;\n  438: 		return params.filter(p=>\n  439  				(p.type||'').indexOf('control')==-1)\n  440  			.map(p=>p.id)\n\n3 matches in 1 file\n\n\nSearching 120 files for \"params.filter\" (case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n  400  		var params = (compDef || {}).params || [];\n  401  		var paramName = path.split('~').pop();\n  402: 		return params.filter(p=>p.id==paramName)[0] || {};\n  403  	}\n  404  \n  ...\n  430  		if (!prof) return [];\n  431  		var params = (getComp(jb.compName(prof)) || {}).params;\n  432: 		return params.filter(p=>(p.type||'').indexOf('control')!=-1).map(p=>p.id)\n  433  	}\n  434  	nonControlParams(path) {\n  ...\n  436  		if (!prof) return [];\n  437  		var params = (getComp(jb.compName(prof)) || {}).params;\n  438: 		return params.filter(p=>\n  439  				(p.type||'').indexOf('control')==-1)\n  440  			.map(p=>p.id)\n\n3 matches in 1 file\n\n\nSearching 120 files for \"params\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\button.js:\n    5  jb.component('button', {\n    6    type: \"control\",\n    7:   params: [\n    8      { id: 'title', as: 'string', dynamic: true, essential: true, defaultValue: 'Hello' },\n    9      { id: 'action', type: 'action', essential: true, dynamic: true },\n   ..\n   13    ],\n   14    impl: function(context) {\n   15:     if (context.params.$click) try { context.params.action() } catch (e) { jb.logException(e) } // for test debug\n   16      return jb_ui.ctrl(context).jbExtend({\n   17        beforeInit: function(cmp) {\n   18:         cmp.title = context.params.title();\n   19:         cmp.clicked = jb_ui.wrapWithLauchingElement(context.params.action, context, cmp.elementRef);\n   20        }\n   21      })\n   ..\n   32  jb.component('button.x', {\n   33    type: 'button.style',\n   34:   params: [\n   35      { id: 'size', as: 'number', defaultValue: '21'}\n   36    ],\n\nC:\\jbart5-ng\\src\\ui\\css-features.js:\n    3  jb.component('css', {\n    4    type: 'feature,dialogFeature',\n    5:   params: [\n    6      { id: 'css', essential: true, as: 'string' },\n    7    ],\n    .\n   12  jb.component('css.width', {\n   13    type: 'feature,dialogFeature',\n   14:   params: [\n   15      { id: 'width', essential: true, as: 'number' },\n   16      { id: 'overflow', as: 'string', options: ',auto,hidden,scroll'},\n   ..\n   23  jb.component('css.height', {\n   24    type: 'feature,dialogFeature',\n   25:   params: [\n   26      { id: 'height', essential: true, as: 'number' },\n   27      { id: 'overflow', as: 'string', options: ',auto,hidden,scroll'},\n   ..\n   34  jb.component('css.padding', {\n   35    type: 'feature,dialogFeature',\n   36:   params: [\n   37      { id: 'top', as: 'number' },\n   38      { id: 'left', as: 'number' },\n   ..\n   43    impl: (ctx) => {\n   44      var css = ['top','left','right','bottom']\n   45:       .filter(x=>ctx.params[x] != null)\n   46:       .map(x=> `padding-${x}: ${ctx.params[x]}px`)\n   47        .join('; ');\n   48:     return {css: `${ctx.params.selector} {${css}}`};\n   49    }\n   50  })\n   ..\n   52  jb.component('css.margin', {\n   53    type: 'feature,dialogFeature',\n   54:   params: [\n   55      { id: 'top', as: 'number' },\n   56      { id: 'left', as: 'number' },\n   ..\n   61    impl: (ctx) => {\n   62      var css = ['top','left','right','bottom']\n   63:       .filter(x=>ctx.params[x] != null)\n   64:       .map(x=> `margin-${x}: ${ctx.params[x]}px`)\n   65        .join('; ');\n   66:     return {css: `${ctx.params.selector} {${css}}`};\n   67    }\n   68  })\n   ..\n   70  jb.component('css.box-shadow', {\n   71    type: 'feature,dialogFeature',\n   72:   params: [\n   73      { id: 'blurRadius', as: 'number', defaultValue: 5 },\n   74      { id: 'spreadRadius', as: 'number', defaultValue: 0 },\n   ..\n   88  jb.component('css.border', {\n   89    type: 'feature,dialogFeature',\n   90:   params: [\n   91      { id: 'width',as: 'number', defaultValue: 1},\n   92      { id: 'side', as: 'string', options: 'top,left,bottom,right' },\n\nC:\\jbart5-ng\\src\\ui\\dialog.js:\n    3  jb.component('openDialog', {\n    4  	type: 'action',\n    5: 	params: [\n    6  		{ id: 'id', as: 'string' },\n    7  		{ id: 'style', type: 'dialog.style', dynamic: true, defaultValue: { $:'dialog.default' }	},\n    .\n   14  	],\n   15  	impl: function(context,id) {\n   16: 		var modal = context.params.modal;\n   17  		var dialog = { \n   18  			id: id, \n   19: 			onOK: context.params.onOK, \n   20  			modal: modal, \n   21  			$: $('div'), \n   ..\n   28  		dialog.comp = jb_ui.ctrl(ctx).jbExtend({\n   29  			beforeInit: function(cmp) {\n   30: 				cmp.title = ctx.params.title(ctx);\n   31  				cmp.dialog = dialog;\n   32  				cmp.dialog.$el = $(cmp.elementRef.nativeElement);\n   ..\n   34  \n   35  				cmp.dialogClose = dialog.close;\n   36: 				cmp.contentComp = ctx.params.content(ctx);\n   37: 				cmp.menuComp = ctx.params.menu(ctx);\n   38: 				cmp.hasMenu = !!ctx.params.menu.profile;\n   39  			}\n   40  		});\n   ..\n   45  jb.component('closeContainingPopup', {\n   46  	type: 'action',\n   47: 	params: [\n   48  		{ id: 'OK', type: 'boolean', as: 'boolean', defaultValue: true}\n   49  	],\n   ..\n   80  jb.component('dialogFeature.uniqueDialog', {\n   81  	type: 'dialogFeature',\n   82: 	params: [\n   83  		{ id: 'id', as: 'string' },\n   84  		{ id: 'remeberLastLocation', type: 'boolean', as: 'boolean' }\n   ..\n  109  jb.component('dialogFeature.nearLauncherLocation', {\n  110  	type: 'dialogFeature',\n  111: 	params: [\n  112  		{ id: 'offsetLeft', as: 'number', defaultValue: 0 },\n  113  		{ id: 'offsetTop', as: 'number' , defaultValue: 0 },\n  ...\n  137  jb.component('dialogFeature.launcherLocationNearSelectedNode', {\n  138  	type: 'dialogFeature',\n  139: 	params: [\n  140  		{ id: 'offsetLeft', as: 'number' },\n  141  		{ id: 'offsetTop', as: 'number' },\n  ...\n  156  jb.component('dialogFeature.onClose', {\n  157  	type: 'dialogFeature',\n  158: 	params: [\n  159  		{ id: 'action', type: 'action', dynamic: true}\n  160  	],\n  ...\n  232  jb.component('dialogFeature.maxZIndexOnClick', {\n  233  	type: 'dialogFeature',\n  234: 	params: [\n  235  		{ id: 'minZIndex', as: 'number'}\n  236  	],\n  ...\n  257  jb.component('dialogFeature.dragTitle', {\n  258  	type: 'dialogFeature',\n  259: 	params: [\n  260  		{ id: 'id', as: 'string' }\n  261  	],\n\nC:\\jbart5-ng\\src\\ui\\divider.js:\n    5  jb.component('divider', {\n    6      type: 'control',\n    7:     params: [\n    8          { id: 'style', type: 'divider.style', defaultValue: { $: 'divider.br' }, dynamic: true },\n    9          { id: 'title', as: 'string', defaultValue: 'divider' },\n   ..\n   16  jb.component('divider.br', {\n   17      type: 'divider.style',\n   18:     params: [\n   19      ],\n   20      impl :{$: 'customStyle', \n\nC:\\jbart5-ng\\src\\ui\\editable-boolean.js:\n    6  jb.component('editable-boolean',{\n    7    type: 'control',\n    8:   params: [\n    9      { id: 'databind', as: 'ref'},\n   10      { id: 'style', type: 'editable-boolean.style', defaultValue: { $: 'editable-boolean.checkbox' }, dynamic: true },\n   ..\n   15    ],\n   16    impl: (ctx) => {\n   17:     var ctx2 = ctx.setVars({ field: jb_ui.twoWayBind(ctx.params.databind) });\n   18    	return jb_ui.ctrl(ctx2).jbExtend({\n   19    		beforeInit: function(cmp) {\n   ..\n   26  \n   27    			cmp.text = () => \n   28:           cmp.jbModel ? ctx.params.textForTrue : ctx.params.textForFalse;\n   29    		}\n   30    	});\n\nC:\\jbart5-ng\\src\\ui\\editable-number.ts:\n    6  jb.component('editable-number',{\n    7    type: 'control',\n    8:   params: [\n    9      { id: 'databind', as: 'ref'},\n   10      { id: 'title', as: 'string' , dynamic: true },\n\nC:\\jbart5-ng\\src\\ui\\editable-text.js:\n    5  jb.component('editable-text',{\n    6    type: 'control',\n    7:   params: [\n    8      { id: 'title', as: 'string' , dynamic: true },\n    9      { id: 'databind', as: 'ref'},\n   ..\n   12    ],\n   13    impl: ctx => \n   14:   	jb_ui.ctrl(ctx.setVars({ field: jb_ui.twoWayBind(ctx.params.databind) }))\n   15  });\n   16  \n\nC:\\jbart5-ng\\src\\ui\\features.js:\n    3  jb.component('group.wait', {\n    4    type: 'feature',\n    5:   params: [ \n    6      { id: 'for', essential: true },\n    7      { id: 'loadingControl', type: 'control', defaultValue: { $:'label', title: 'loading ...'} , dynamic: true },\n    .\n   16            cmp.jbGroupChildrenEm = jb_rx.observableFromCtx(context.setData(waitFor))\n   17              .flatMap(x=>{\n   18:                 var data = context.params.mapToResource(x);\n   19:                 jb.writeToResource(context.params.resource,data,context);\n   20                  return [context.vars.$model.controls(cmp.ctx.setData(data))];\n   21                })\n   ..\n   34  jb.component('group.data', {\n   35    type: 'feature',\n   36:   params: [\n   37      { id: 'data', essential: true, dynamic: true, as: 'ref' },\n   38      { id: 'itemVariable', as: 'string' },\n   ..\n   61  jb.component('group.watch', {\n   62    type: 'feature',\n   63:   params: [\n   64      { id: 'data', essential: true, dynamic: true },\n   65    ],\n   ..\n   85  jb.component('group-item.if', {\n   86    type: 'feature',\n   87:   params: [\n   88      { id: 'showCondition', type: 'boolean', as: 'boolean', essential: true },\n   89    ],\n   ..\n   97  jb.component('feature.init', {\n   98    type: 'feature',\n   99:   params: [\n  100      { id: 'action', type: 'action[]', essential: true, dynamic: true }\n  101    ],\n  ...\n  107  jb.component('feature.ng-attach-object', {\n  108    type: 'feature',\n  109:   params: [\n  110      { id: 'data', as: 'single', dynamic: true }\n  111    ],\n  ...\n  125  jb.component('feature.onEnter', {\n  126    type: 'feature',\n  127:   params: [\n  128      { id: 'action', type: 'action[]', essential: true, dynamic: true }\n  129    ],\n  ...\n  140          cmp.keydown.filter(e=> e.keyCode == 13)\n  141              .subscribe(()=>\n  142:               jb_ui.wrapWithLauchingElement(ctx.params.action, cmp.ctx, cmp.elementRef)())\n  143        },\n  144        observable: () => {},\n  ...\n  149  jb.component('ngAtts', {\n  150    type: 'feature',\n  151:   params: [\n  152      { id: 'atts', as: 'object' }\n  153    ],\n  ...\n  158  jb.component('feature.afterLoad', {\n  159    type: 'feature',\n  160:   params: [\n  161      { id: 'action', type: 'action[]', essential: true, dynamic: true }\n  162    ],\n  163    impl: function(context) { return  { \n  164:     afterViewInit: cmp => jb.delay(1).then(() => context.params.action(cmp.ctx))\n  165    }}\n  166  })\n  ...\n  168  jb.component('feature.emitter',{\n  169    type: 'feature',\n  170:   params: [\n  171      { id: 'varName', as: 'string'},\n  172    ],\n  ...\n  180  jb.component('var',{\n  181    type: 'feature',\n  182:   params: [\n  183      { id: 'name', as: 'string'},\n  184      { id: 'value', dynamic: true },\n  ...\n  193  jb.component('hidden', {\n  194    type: 'feature',\n  195:   params: [\n  196      { id: 'showCondition', type: 'boolean', essential: true, dynamic: true },\n  197    ],\n  ...\n  208  jb.component('field.style-on-focus', {\n  209    type: 'feature',\n  210:   params: [\n  211      { id: 'style', type: 'style', essential: true, dynamic: true },\n  212    ],\n  ...\n  219  jb.component('feature.keyboard-shortcut', {\n  220    type: 'feature',\n  221:   params: [\n  222      { id: 'key', as: 'string', description: 'e.g. Alt+C' },\n  223      { id: 'action', type: 'action', dynamic: true }\n\nC:\\jbart5-ng\\src\\ui\\field.js:\n    3  jb.component('field.default', {\n    4    type: 'feature',\n    5:   params: [\n    6      { id: 'value', type: 'data'},\n    7    ],\n    .\n   15  jb.component('field.subscribe', {\n   16    type: 'feature',\n   17:   params: [\n   18      { id: 'action', type: 'action', essential: true, dynamic: true },\n   19      { id: 'includeFirst', type: 'boolean', as: 'boolean'},\n   ..\n   34  jb.component('field.toolbar', {\n   35    type: 'feature',\n   36:   params: [\n   37      { id: 'toolbar', type: 'control', essential: true, dynamic: true },\n   38    ],\n\nC:\\jbart5-ng\\src\\ui\\group.js:\n    5  jb.component('group',{\n    6    type: 'control',\n    7:   params: [\n    8      { id: 'title', as: 'string' , dynamic: true },\n    9      { id: 'style', type: 'group.style', defaultValue: { $: 'group.section' }, essential: true , dynamic: true },\n   ..\n   22  \n   23          cmp.initGroup = function() {\n   24:           cmp.title = context.params.title(context);\n   25:           (cmp.jbGroupChildrenEm || jb_rx.Observable.of(context.params.controls(cmp.ctx)))\n   26                .merge(cmp.jbWatchGroupChildrenEm || jb_rx.Observable.of())\n   27                .subscribe(comps=> {\n   ..\n   56  jb.component('dynamic-controls', {\n   57    type: 'control',\n   58:   params: [\n   59      { id: 'controlItems', type: 'data', as: 'array', essential: true, dynamic: true },\n   60      { id: 'genericControl', type: 'control', essential: true, dynamic: true },\n   ..\n   87  jb.component('wait', {\n   88    type: 'control',\n   89:   params: [\n   90      { id: 'title', as: 'string' , dynamic: true },\n   91      { id: 'for', essential: true },\n\nC:\\jbart5-ng\\src\\ui\\http.ts:\n    6  \n    7  jb.component('http.get', {\n    8: 	params: [\n    9  		{ id: 'url', as: 'string' },\n   10  	],\n\nC:\\jbart5-ng\\src\\ui\\image.js:\n    5  jb.component('image',{\n    6  	type: 'control',\n    7: 	params: [\n    8  		{ id: 'url', as: 'string', dynamic:true },\n    9  		{ id: 'imageWidth', as: 'number' },\n   ..\n   17  	impl: function(context) {\n   18  		return jb_ui.ctrl(context).jbExtend({ init: function(cmp) {\n   19: 			var image = context.params;\n   20  			var units = image.units;\n   21  			if (image.width) cmp.width = image.width + units;\n\nC:\\jbart5-ng\\src\\ui\\itemlist-with-groups.js:\n    6  jb.component('itemlist-with-groups', {\n    7    type: 'control',\n    8:   params: [\n    9      { id: 'title', as: 'string' },\n   10      { id: 'items', as: 'array' , dynamic: true, essential: true },\n   ..\n   42  jb.component('itemlist.watch-items-with-heading', {\n   43    type: 'feature',\n   44:   params: [\n   45      { id: 'items', essential: true, dynamic: true },\n   46      { id: 'itemsArrayVariable', as: 'string' },\n   ..\n   87  jb.component('itemlist-heading.group-by', {\n   88    type: 'itemlist.group-by',\n   89:   params: [\n   90      { id: 'itemToGroupID', dynamic: true, defaultValue: { $: 'prefix', separator: '.' } },\n   91      { id: 'promoteGroups', type: 'data[]', as: 'array' },\n\nC:\\jbart5-ng\\src\\ui\\itemlist.js:\n    3  jb.component('itemlist', {\n    4    type: 'control',\n    5:   params: [\n    6      { id: 'title', as: 'string' },\n    7      { id: 'items', as: 'array' , dynamic: true, essential: true },\n    .\n   29  jb.component('itemlist.init', {\n   30    type: 'feature',\n   31:   params: [\n   32      { id: 'items', essential: true, dynamic: true },\n   33      { id: 'itemsArrayVariable', as: 'string' },\n   ..\n   77  jb.component('itemlist.divider', {\n   78    type: 'feature',\n   79:   params: [\n   80      { id: 'space', as: 'number', defaultValue: 5}\n   81    ],\n   ..\n   88  jb.component('itemlist.selection', {\n   89    type: 'feature',\n   90:   params: [\n   91      { id: 'databind', as: 'ref' },\n   92      { id: 'onSelection', type: 'action', dynamic: true },\n   ..\n  111          var databindEm = cmp.jbEmitter.filter(x => x == 'check')\n  112              .map(()=> \n  113:               jb.val(ctx.params.databind))\n  114              .filter(x=>\n  115                x != cmp.selected)\n  ...\n  123  \n  124          doubleClick.subscribe(()=>\n  125:           ctx.params.onDoubleClick(ctx.setData(cmp.selected)));\n  126  \n  127          selectionEm.subscribe( selected => {\n  128:           if (jb.val(ctx.params.databind) != selected)\n  129:             jb.writeValue(ctx.params.databind,selected);\n  130:           ctx.params.onSelection(ctx.setData(cmp.selected))\n  131          });\n  132  \n  ...\n  135      },\n  136      afterViewInit: cmp => {\n  137:         if (ctx.params.autoSelectFirst && cmp.items[0] && !jb.val(ctx.params.databind)) {\n  138              cmp.selected = cmp.items[0];\n  139:             jb.writeValue(ctx.params.databind,cmp.selected);\n  140          }\n  141      },\n  ...\n  158  jb.component('itemlist.keyboard-selection', {\n  159    type: 'feature',\n  160:   params: [\n  161      { id: 'onKeyboardSelection', type: 'action', dynamic: true },\n  162      { id: 'autoFocus', type: 'boolean' }\n  ...\n  169            .takeUntil( cmp.jbEmitter.filter(x=>x =='destroy') );\n  170  \n  171:         if (context.params.autoFocus)\n  172              setTimeout(()=> \n  173                cmp.elementRef.nativeElement.focus(),1);\n  ...\n  193  jb.component('itemlist.drag-and-drop', {\n  194    type: 'feature',\n  195:   params: [\n  196    ],\n  197    impl: ctx => ({\n\nC:\\jbart5-ng\\src\\ui\\itemlog.js:\n    5  jb.component('itemlog',{\n    6  	type: 'control',\n    7: 	params: [\n    8  		{ id: 'title', as: 'string' },\n    9  		{ id: 'items', as: 'observable' , dynamic: true, essential: true },\n   ..\n   19            cmp.items = [];\n   20            cmp.itemToComp = item => \n   21:             context.params.controls(item.setVars(jb.obj(context.params.itemVariable,item.data))) [0];\n   22  \n   23:           context.params.items(context).subscribe(itemCtx=>  {\n   24                cmp.items.unshift(itemCtx);\n   25:               if (context.params.counter)\n   26:                 jb.writeValue(context.params.counter,cmp.items.length)\n   27            })\n   28        }\n\nC:\\jbart5-ng\\src\\ui\\jb-rx.ts:\n   77  jb.component('rxLog',{\n   78  	type: 'rx.elem',\n   79: 	params: [\n   80  		{ id: 'pipe', as: 'observable' }\n   81  	],\n   ..\n   85  jb.component('rxPipe', {\n   86  	type: 'rx.elem',\n   87: 	params: [\n   88  		{ id: 'items', type: 'data,rx.elem[]', ignore: true, essential: true }\n   89  	],\n   ..\n   99  jb.component('rxFilter',{\n  100  	type: 'rx.elem',\n  101: 	params: [\n  102  		{ id: 'filter', type: 'boolean', dynamic: true }\n  103  	],\n  ...\n  132  jb.component('rxParallel', {\n  133  	type: 'rx.elem',\n  134: 	params: [\n  135  		{ id: 'item', dynamic: true },\n  136  	],\n  ...\n  145  jb.component('rxParallelKeepOrder', {\n  146  	type: 'rx.elem',\n  147: 	params: [\n  148  		{ id: 'item', dynamic: true },\n  149  	],\n  ...\n  181  jb.component('rx.distinctUntilChanged', {\n  182  	type: 'rx.elem',\n  183: 	params: [\n  184  	    { id: 'keySelector', type: 'rx.keySelector' },\n  185  	    { id: 'comparer', type: 'rx.comparer' },\n  ...\n  195  jb.component('rx.concat', {\n  196  	type: 'rx.elem',\n  197: 	params: [\n  198  		{ id: 'items', type: 'data,rx.elem[]', ignore: true, essential: true }\n  199  	],\n  ...\n  233  jb.component('rx.subject',{\n  234  	type: 'rx.subject,rx.observable,rx.observer',\n  235: 	params: [\n  236  		{ id: 'pipe', type: 'rx.elem', dynamic : true, defaultValue: {$: 'rx.distinctUntilChanged'} },\n  237  	],\n  ...\n  244  jb.component('rx.emit',{\n  245  	type: 'action',\n  246: 	params: [\n  247  		{ id: 'from', as: 'observable'},\n  248  		{ id: 'to', type: 'rx.observer' },\n  ...\n  255  jb.component('rx.urlPath',{\n  256  	type: 'application-feature',\n  257: 	params: [\n  258: 		{ id: 'params', type: 'data[]', as: 'array'},\n  259  		{ id: 'databind', as: 'single' , essential: true },\n  260  		{ id: 'base', as: 'string'},\n  261  		{ id: 'zoneId', as: 'string'},\n  262  	],\n  263: 	impl: function(context,params,databind,base,zoneId) {\n  264  		if (jbart.location) return;\n  265  \n  ...\n  277  	    			.map(x=>decodeURIComponent(x))\n  278  	    	var res = {};\n  279: 	    	params.forEach((p,i) =>\n  280      			res[p] = (vals[i+1] || ''));\n  281  	    	return res;\n  ...\n  284  	    	var split_base = jbart.location.path().split(`/${base}`);\n  285  	    	var url = split_base[0] + `/${base}/` + \n  286: 	    		params.map(p=>obj[p]||'')\n  287  	    		.join('/');\n  288  	    	return url.replace(/\\/*$/,'');\n  ...\n  310  jb.component('rx-test', {\n  311  	type: 'test',\n  312: 	params: [\n  313  		{ id: 'result', as: 'observable', dynamic: true },\n  314  		{ id: 'expectedResult', type: 'boolean', dynamic: true },\n  ...\n  325  jb.component('containsSeq',{\n  326  	type: 'boolean',\n  327: 	params: [\n  328  		{ id: 'seq', type: 'data[]', as: 'array' },\n  329  		{ id: 'observable', defaultValue: '%%', as: 'observable'}\n\nC:\\jbart5-ng\\src\\ui\\jb-ui.ts:\n   43  \n   44  		this.jb_profile = ctx.profile;\n   45: 		var title = jb_tosingle(jb.val(this.ctx.params.title)) || (() => ''); \n   46  		this.jb_title = (typeof title == 'function') ? title : () => ''+title;\n   47  		this.jb$title = (typeof title == 'function') ? title() : title; // for debug\n   ..\n  157  	jbCtrl(context) {\n  158  		var options = mergeOptions(\n  159: 			optionsOfProfile(context.params.style && context.params.style.profile),\n  160  			optionsOfProfile(context.profile));\n  161  \n  ...\n  163  		jb.path(options, ['atts','jb-path'], this.callerPath); // for pick & edit\n  164  \n  165: 		(context.params.features && context.params.features(context) || []).forEach(f => this.jbExtend(f,context))\n  166: 		if (context.params.style && context.params.style.profile && context.params.style.profile.features) {\n  167: 			jb.toarray(context.params.style.profile.features)\n  168  				.forEach((f,i)=>\n  169  					this.jbExtend(context.runInner(f,{type:'feature'},context.path+'~features~'+i),context))\n  ...\n  277  \n  278  export function ctrl(context) {\n  279: 	var ctx = context.setVars({ $model: context.params });\n  280  	var styleOptions = defaultStyle(ctx);\n  281  	return new jbComponent(ctx).jbExtend(styleOptions).jbCtrl(ctx);\n  ...\n  286  		if (!profile.style && context.vars[defaultVar])\n  287  			return ctx.run({$:context.vars[defaultVar]})\n  288: 		return context.params.style(ctx);\n  289  	}\n  290  }\n\nC:\\jbart5-ng\\src\\ui\\label.js:\n    3  jb.component('label', {\n    4      type: \"control\",\n    5:     params: [\n    6          { id: 'title', essential: true, defaultValue: 'hello', dynamic: true },\n    7          { id: 'style', type: 'label.style', defaultValue: { $: 'label.span' }, dynamic: true },\n    .\n    9      ],\n   10      impl: ctx => \n   11:         jb_ui.ctrl(ctx.setVars({title: ctx.params.title() }))\n   12  })\n   13  \n\nC:\\jbart5-ng\\src\\ui\\picklist.js:\n    6  jb.component('picklist', {\n    7    type: 'control',\n    8:   params: [\n    9      { id: 'title', as: 'string' , dynamic: true },\n   10      { id: 'databind', as: 'ref'},\n   ..\n   14    ],\n   15    impl: ctx => {\n   16:     ctx = ctx.setVars({ field: jb_ui.twoWayBind(ctx.params.databind) });\n   17      return jb_ui.ctrl(ctx).jbExtend({\n   18        beforeInit: function(cmp) {\n   ..\n   20  \n   21          cmp.recalcOptions = function() {\n   22:           cmp.options = ctx.params.options(ctx);\n   23            var groupsHash = {};\n   24            cmp.groups = [];\n   ..\n   48  jb.component('picklist.dynamic-options', {\n   49    type: 'feature',\n   50:   params: [\n   51      { id: 'recalcEm', as: 'observable'}\n   52    ],\n   ..\n   64  jb.component('picklist.optionsByComma',{\n   65    type: 'picklist.options',\n   66:   params: [ \n   67      { id: 'options', as: 'string', essential: true},\n   68      { id: 'allowEmptyValue', type: 'boolean' },\n   ..\n   78  jb.component('picklist.options',{\n   79    type: 'picklist.options',\n   80:   params: [ \n   81      { id: 'options', as: 'array', essential: true},\n   82      { id: 'allowEmptyValue', type: 'boolean' },\n   ..\n   90  jb.component('picklist.coded-options',{\n   91    type: 'picklist.options',\n   92:   params: [ \n   93      { id: 'options', as: 'array',essential: true },\n   94      { id: 'code', as: 'string', dynamic:true , essential: true }, \n\nC:\\jbart5-ng\\src\\ui\\pulldown-menu.js:\n    9  jb.component('pulldown.menu-item-group', {\n   10  	type: 'control',\n   11: 	params: [\n   12  		{ id: 'title', as: 'string', dynamic: true, essential: true },\n   13  	],\n   ..\n   18  jb.component('pulldown.menu-item', {\n   19  	type: 'control',\n   20: 	params: [\n   21  		{ id: 'title', as: 'string', dynamic: true, essential: true },\n   22  		{ id: 'icon', as: 'string' },\n   ..\n   28  	],\n   29  	  impl: function(context,title,icon,shortcut) {\n   30: 	    if (context.params.$click) try { context.params.action() } catch (e) { jb.logException(e) } // for test debug\n   31  	    return jb_ui.ctrl(context).jbExtend({\n   32  	      beforeInit: function(cmp) {\n   ..\n   36  	        cmp.clicked = jb_ui.wrapWithLauchingElement(() => {\n   37  	        	context.vars.$dialog && context.vars.$dialog.close(); // close dialog\n   38: 	        	context.params.action();\n   39  	        } , context, cmp.elementRef);\n   40  	      }\n   ..\n   55  jb.component('pulldown-menu-item.default', {\n   56    type: 'button.style',\n   57:   params: [\n   58  	  { id: 'icon', as: 'string' }\n   59    ],\n   ..\n   75  jb.component('pulldown.topMenuItem', {\n   76  	type: 'control',\n   77: 	params: [\n   78  		{ id: 'title', dynamic: true, as: 'string' },\n   79  		{ id: 'style', type: 'pulldownTopMenuItem.style', dynamic: true, defaultValue: { $: 'pulldownTopMenuItem.default' } },\n   ..\n   90  				content :{$: 'group', \n   91  					controls: ctx => \n   92: 						context.params.controls(ctx) \n   93  				}\n   94  			})\n   ..\n  101  						cmp.openPopup();\n  102  				}\n  103: 				cmp.title = context.params.title();\n  104  				cmp.openPopup = jb_ui.wrapWithLauchingElement(openPopup, context, cmp.elementRef); \n  105  \n  106: 				if (context.params.open)\n  107  					cmp.openPopup();\n  108  			}\n  ...\n  154  jb.component('group.menu-keyboard-selection', {\n  155    type: 'feature',\n  156:   params: [\n  157      { id: 'autoFocus', type: 'boolean' }\n  158    ],\n  ...\n  165            .takeUntil( cmp.jbEmitter.filter(x=>x =='destroy') );\n  166  \n  167:         if (ctx.params.autoFocus)\n  168              setTimeout(()=> {\n  169                cmp.elementRef.nativeElement.focus();\n  ...\n  177  	            var selected = $(cmp.elementRef.nativeElement).find('>.selected');\n  178              	var selectedCtx = (cmp.ctrls[selected.index()] || {}).comp.ctx;\n  179:             	if (selectedCtx && selectedCtx.params.action)\n  180: 					jb_ui.wrapWithLauchingElement(selectedCtx.params.action, selectedCtx, \n  181  						$(cmp.elementRef.nativeElement).find('>.selected')[0])()\n  182              })\n\nC:\\jbart5-ng\\src\\ui\\sidenav.js:\n    5  jb.component('sidenav',{\n    6    type: 'control',\n    7:   params: [\n    8      { id: 'controls', type: 'control[]', essential: true, flattenArray: true, dynamic: true },\n    9      { id: 'title', as: 'string' , dynamic: true },\n   ..\n   17  jb.component('sidenav.md', {\n   18    type: 'sidenav.style',\n   19:   params: [\n   20      { id: 'width', as: 'number' },\n   21      { id: 'align', options: 'start,end', as: 'string'},\n\nC:\\jbart5-ng\\src\\ui\\slider.ts:\n    6  jb.component('editable-number.slider', {\n    7  	type: 'editable-number.style',\n    8: 	params: [\n    9  		{ id: 'width', as: 'number', defaultValue: '200' },\n   10  	],\n\nC:\\jbart5-ng\\src\\ui\\styles.js:\n    3  jb.component('customStyle', {\n    4  	typePattern: /.*-style/,\n    5: 	params: [\n    6  		{ id: 'template', as: 'string', essential: true},\n    7  		{ id: 'css', as: 'string'},\n    .\n   30  jb.component('custom-control', {\n   31  	type: 'control',\n   32: 	params: [\n   33  		{ id: 'title', as: 'string', dynamic: true },\n   34  		{ id: 'html', as: 'string', essential: true, defaultValue: '<div></div>'},\n\nC:\\jbart5-ng\\src\\ui\\tabs.js:\n    3  jb.component('tabs', {\n    4  	type: 'control',\n    5: 	params: [\n    6  		{ id: 'tabs', type: 'control[]', essential: true, flattenArray: true, dynamic: true },\n    7  		{ id: 'style', type: 'tabs.style', dynamic: true, defaultValue: { $: 'tabs.simple' } },\n    .\n   18  \n   19          cmp.initTabs = function() {\n   20:           (cmp.jbGroupChildrenEm || jb_rx.Observable.of(context.params.tabs(cmp.ctx)))\n   21                .merge(cmp.jbWatchGroupChildrenEm || jb_rx.Observable.of())\n   22                .subscribe(comps=> {\n\nC:\\jbart5-ng\\src\\ui\\text.js:\n    5  jb.component('text', {\n    6      type: 'control',\n    7:     params: [\n    8          { id: 'text', essential: true, dynamic: true },\n    9          { id: 'style', type: 'text.style', defaultValue: { $: 'text.multi-line' }, dynamic: true },\n   ..\n   12      ],\n   13      impl: (ctx,text) => \n   14:         jb_ui.ctrl(ctx.setVars({text: ctx.params.text()}))\n   15  })\n   16  \n   ..\n   27  jb.component('text.multi-line', {\n   28      type: 'text.style',\n   29:     params: [\n   30          { id: 'rows',as: 'number', defaultValue: '8'},\n   31          { id: 'cols',as: 'number', defaultValue: '80'},\n   ..\n   47  jb.component('rich-text', {\n   48      type: 'control',\n   49:     params: [\n   50          { id: 'text', essential: true, as: 'string', dynamic: true },\n   51          { id: 'title', as: 'string', defaultValue: 'rich-text', dynamic: true },\n\nC:\\jbart5-ng\\src\\ui\\theme.js:\n    5  jb.component('group.theme', {\n    6    type: 'feature',\n    7:   params: [\n    8      { id: 'theme', type: 'theme' },\n    9    ],\n\nC:\\jbart5-ng\\src\\ui\\ui-common.js:\n    4  jb.component('add-css-class',{\n    5  	type: 'action',\n    6: 	params: [\n    7  		{ id: 'cssClass', as: 'string' }\n    8  	],\n    .\n   15  jb.component('url-param',{\n   16  	type: 'data',\n   17: 	params: [\n   18  		{ id: 'param', as: 'string' }\n   19  	],\n   ..\n   26  jb.component('sessionStorage',{\n   27  	type: 'data',\n   28: 	params: [\n   29  		{ id: 'key', as: 'string'}\n   30  	],\n   ..\n   44  	type: 'action',\n   45  	description: 'navigate/open a new web page, change href location',\n   46: 	params: [\n   47  		{ id: 'url', as:'string', essential: true },\n   48  		{ id: 'target', type:'enum', values: ['new tab','self'], defaultValue:'new tab', as:'string'}\n   ..\n   61  jb.component('search-filter',{\n   62  	type: 'aggregator',\n   63: 	params: [\n   64  		{ id: 'pattern', as: 'string' }\n   65  	],\n   ..\n   73  jb.component('new-instance', {\n   74  	type: 'data',\n   75: 	params: [\n   76  		{ id: 'module', as: 'string', essential: true },\n   77  		{ id: 'class', as: 'string', essential: true},\n   ..\n   89  jb.component('injector-get', {\n   90  	type: 'data',\n   91: 	params: [\n   92  		{ id: 'provider', as: 'string', essential: true },\n   93  	],\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\button-md.ts:\n   29  jb.component('button.md-icon', {\n   30    type: 'button.style',\n   31:   params: [\n   32      { id: 'icon', as: 'string', default: 'code' },\n   33      { id: 'size', as: 'number', defaultValue: 20 },\n   ..\n   45  jb.component('button.md-icon-12', {\n   46    type: 'button.style',\n   47:   params: [\n   48      { id: 'icon', as: 'string', default: 'code' },\n   49      { id: 'aria', as: 'string' },\n   ..\n   63  jb.component('button.md-icon-fab', {\n   64    type: 'button.style',\n   65:   params: [\n   66      { id: 'icon', as: 'string', default: 'code' },\n   67      { id: 'size', as: 'number', defaultValue: '24' },\n   ..\n   78  jb.component('button.md-mini-fab', {\n   79    type: 'button.style',\n   80:   params: [\n   81      { id: 'icon', as: 'string', default: 'code' },\n   82      { id: 'size', as: 'number', defaultValue: '24' },\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\dialog-md.ts:\n    4  jb.component('dialog.md-dialog-ok-cancel', {\n    5  	type: 'dialog.style',\n    6: 	params: [\n    7  		{ id: 'okLabel', as: 'string', defaultValue: 'OK' },\n    8  		{ id: 'cancelLabel', as: 'string', defaultValue: 'Cancel' },\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\input-md.ts:\n    7  jb.component('editable-text.md-input',{\n    8    type: 'editable-text.style',\n    9:   params: [\n   10      { id: 'width', as: 'number' }\n   11    ],\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\layout-md.ts:\n   11  jb.component('layout.md',{\n   12    type: 'group.style,md-layout',\n   13:   params: [\n   14      { id: 'layout', as:'string', options: 'row,column' },\n   15      { id: 'align', as:'string', options: 'start,center,end,space-around,space-between,' },\n   ..\n   25      var responsiveSelector = context.vars.responsiveSelector || '';\n   26      var atts = {}\n   27:     if (context.params.layout) atts['layout'+responsiveSelector] = context.params.layout;\n   28      ['margin','fill','padding','wrap'].forEach(p=>{\n   29:       if(context.params[p])\n   30:         atts['layout-' + p+ responsiveSelector] = context.params[p];\n   31      })\n   32:     if (context.params.align)\n   33:       atts['layout-align'+responsiveSelector] = context.params.align + (context.params.subAlign ? (' ' + context.params.subAlign) : '' )\n   34  \n   35:     context.params.responsive.forEach(responsive=>jb.extend(atts,responsive))\n   36  \n   37      return {\n   38        init: function(cmp) { \n   39          cmp.initGroup();\n   40:         context.params.children.forEach((child,index)=>\n   41            cmp.extendChild(index,{atts: child}))\n   42        },\n   ..\n   51  jb.component('md-layout-child',{\n   52    type: 'md-layout-child',\n   53:   params: [\n   54      { id: 'flex', as:'string', options: flexOptions },\n   55      { id: 'marginLeft', as: 'string', options: offsetOptions },\n   ..\n   62      var responsiveSelector = ctx.vars.responsiveSelector || '';\n   63      var atts = {};\n   64:     atts['flex'+responsiveSelector] = percentage_dictionary[ctx.params.flex] || ctx.params.flex || '';\n   65:     if (ctx.params.marginLeft && percentage_dictionary[ctx.params.marginLeft])\n   66:       atts['flex-offset'+responsiveSelector] = percentage_dictionary[ctx.params.marginLeft];\n   67:     if (ctx.params.order) atts['flex-order'+responsiveSelector] = ctx.params.order;\n   68:     if (ctx.params.show) atts['show'+responsiveSelector] = ctx.params.show;\n   69:     if (ctx.params.hide) atts['hide'+responsiveSelector] = ctx.params.hide;\n   70:     ctx.params.responsive.forEach(responsive=>jb.extend(atts,responsive))\n   71      return atts;\n   72    }\n   ..\n   75  jb.component('md-layout-responsive-layout', {\n   76    type: 'md-layout-responsive-layout',\n   77:   params: [\n   78      { id: 'selector', as: 'string', options: responsiveSelectors, essential: true },\n   79      { id: 'layout', type: 'md-layout', essential: true, dynamic: true}\n   80    ],\n   81    impl: ctx => \n   82:     ctx.params.layout(ctx.setVars({responsiveSelector: '-' + responsive_dictionary[ctx.params.selector]}))\n   83  })\n   84  \n   85  jb.component('md-layout-child-responsive-child', {\n   86    type: 'md-layout-child-responsive-child',\n   87:   params: [\n   88      { id: 'selector', as: 'string', options: responsiveSelectors, essential: true },\n   89      { id: 'child', type: 'md-layout-child', essential: true, dynamic: true}\n   90    ],\n   91    impl: ctx =>\n   92:     ctx.params.child(ctx.setVars({responsiveSelector: '-' + responsive_dictionary[ctx.params.selector]}))\n   93  })\n   94  \n\nC:\\jbart5-ng\\src\\ui\\md-styles\\sidenav-md.ts:\n    8  jb.component('sidenav.md', {\n    9    type: 'sidenav.style',\n   10:   params: [\n   11      { id: 'width', as: 'number' },\n   12      { id: 'align', options: 'start,end', as: 'string'},\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\tabs-md.ts:\n    9  \n   10  jb.component('tabs.md-tabs', {\n   11:   params: [\n   12      { id: 'tabWidth', as: 'number' }\n   13    ],\n\nC:\\jbart5-ng\\src\\ui\\styles\\codemirror-styles.ts:\n    5  jb.component('editable-text.codemirror', {\n    6  	type: 'editable-text.style',\n    7: 	params: [\n    8  		{ id: 'cm_settings', as: 'single' },\n    9  		{ id: 'enableFullScreen', type: 'boolean', as: 'boolean', defaultValue: true},\n   ..\n  152  jb.component('text.codemirror', {\n  153      type: 'text.style',\n  154:     params: [\n  155          { id: 'cm_settings', as: 'single' },\n  156  		{ id: 'enableFullScreen', type: 'boolean', as: 'boolean', defaultValue: true},\n\nC:\\jbart5-ng\\src\\ui\\styles\\layout-styles.ts:\n    4  jb.component('layout.vertical', {\n    5    type: 'group.style',\n    6:   params: [\n    7      { id: 'spacing', as: 'number', defaultValue: 3 }\n    8    ],\n    .\n   19  jb.component('layout.horizontal', {\n   20    type: 'group.style',\n   21:   params: [\n   22      { id: 'spacing', as: 'number', defaultValue: 3 }\n   23    ],\n   ..\n   35  jb.component('layout.flex', {\n   36    type: 'group.style',\n   37:   params: [\n   38        { id: 'align', as: 'string', options: ',flex-start,flex-end,center,space-between,space-around' },\n   39        { id: 'direction', as: 'string', options: ',row,row-reverse,column,column-reverse' },\n   ..\n   43      // $vars: {\n   44      //    flexProps: ctx => {\n   45:     //       var params = ctx.componentContext.params;\n   46      //       return [\n   47      //         ['display','flex'],\n   48:     //         ['justify-content', params.align], \n   49:     //         ['flex-direction', params.direction], \n   50:     //         ['flex-wrap', params.wrap ? 'wrap' : ''], \n   51      //       ].filter(x\n   52      //         =>x[1] != '')\n   ..\n   66  jb.component('flex-layout-container.align-main-axis', {\n   67      type: 'feature',\n   68:     params: [\n   69        { id: 'align', as: 'string', options: 'flex-start,flex-end,center,space-between,space-around', defaultValue: 'flex-start' }\n   70      ],\n   ..\n   77  jb.component('flex-layout-item.grow', {\n   78      type: 'feature',\n   79:     params: [\n   80        { id: 'factor', as: 'number', defaultValue: '1' }\n   81      ],\n   ..\n   87  jb.component('flex-layout-item.basis', {\n   88      type: 'feature',\n   89:     params: [\n   90        { id: 'factor', as: 'number', defaultValue: '1' }\n   91      ],\n   ..\n   97  jb.component('flex-layout-item.align-self', {\n   98      type: 'feature',\n   99:     params: [\n  100        { id: 'align', as: 'string', options: 'auto,flex-start,flex-end,center,baseline,stretch', defaultValue: 'auto' }\n  101      ],\n  ...\n  107  jb.component('flex-filler', {\n  108      type: 'control',\n  109:     params: [\n  110          { id: 'title', as: 'string', defaultValue: 'flex filler' },\n  111          { id: 'basis', as: 'number', defaultValue: '1' },\n\nC:\\jbart5-ng\\src\\ui\\styles\\property-sheet-styles.ts:\n    3  jb.component('property-sheet.titles-above', {\n    4    type: 'group.style',\n    5:   params: [\n    6      { id: 'spacing', as: 'number', defaultValue: 20 }\n    7    ],\n    .\n   31  jb.component('property-sheet.titles-above-float-left', {\n   32    type: 'group.style',\n   33:   params: [\n   34      { id: 'spacing', as: 'number', defaultValue: 20 },\n   35      { id: 'fieldWidth', as: 'number', defaultValue: 200 },\n   ..\n   64  jb.component('property-sheet.titles-left', {\n   65    type: 'group.style',\n   66:   params: [\n   67      { id: 'vSpacing', as: 'number', defaultValue: 20 },\n   68      { id: 'hSpacing', as: 'number', defaultValue: 20 },\n   ..\n   94  jb.component('property-sheet.style-on-focus', {\n   95    type: 'group.style',\n   96:   params: [\n   97      { id: 'vSpacing', as: 'number', defaultValue: 20 },\n   98      { id: 'hSpacing', as: 'number', defaultValue: 20 },\n   ..\n  167  jb.component('property-sheet.growing', {\n  168    type: 'group.style',\n  169:   params: [\n  170      { id: 'vSpacing', as: 'number', defaultValue: 20 },\n  171      { id: 'hSpacing', as: 'number', defaultValue: 20 },\n\nC:\\jbart5-ng\\src\\ui\\tree\\json-tree.ts:\n    3  jb.component('tree.json-read-only',{\n    4  	type: 'tree.nodeModel',\n    5: 	params: [\n    6  		{ id: 'object'},\n    7  		{ id: 'rootPath', as: 'string'}\n\nC:\\jbart5-ng\\src\\ui\\tree\\tree.ts:\n   23  jb.component('tree', {\n   24  	type: 'control',\n   25: 	params: [\n   26  		{ id: 'nodeModel', type: 'tree.nodeModel', dynamic: true, essential: true },\n   27  		{ id: 'style', type: \"tree.style\", defaultValue: { $: \"tree.ul-li\" }, dynamic: true },\n   ..\n   29  	],\n   30  	impl: function(context) { \n   31: 		var nodeModel = context.params.nodeModel();\n   32  		if (!nodeModel)\n   33  			return jb.logException('missing nodeModel in tree');\n   ..\n  116  jb.component('tree.selection', {\n  117    type: 'feature',\n  118:   params: [\n  119  	  { id: 'databind', as: 'ref' },\n  120  	  { id: 'onSelection', type: 'action', dynamic: true },\n  ...\n  131    				.filter(x => x.length === 2)\n  132    				.subscribe(x=> {\n  133: 					jb_ui.wrapWithLauchingElement(context.params.onDoubleClick, context.setData(tree.selected), x[0].srcElement)()\n  134    				})\n  135  \n  136:   		  var databindObs = (context.params.databind && jb_rx.refObservable(context.params.databind,context)\n  137          	.distinctUntilChanged()) || jb_rx.Observable.of();\n  138  \n  ...\n  149  				  return path; \n  150  			  },'')\n  151: 			  if (context.params.databind)\n  152: 				  jb.writeValue(context.params.databind, selected);\n  153: 			  context.params.onSelection(context.setData(selected));\n  154  		  });\n  155  		  // first auto selection selection\n  156: 		  var first_selected = jb.val(context.params.databind);\n  157: 		  if (!first_selected && context.params.autoSelectFirst) {\n  158  			  var first = tree.el.querySelectorAll('.treenode')[0];\n  159  			  first_selected = tree.elemToPath(first);\n  ...\n  176  jb.component('tree.keyboard-selection', {\n  177  	type: 'feature',\n  178: 	params: [\n  179  		{ id: 'onKeyboardSelection', type: 'action', dynamic: true },\n  180  		{ id: 'onEnter', type: 'action', dynamic: true },\n  ...\n  203  				});\n  204  \n  205: 				if (context.params.autoFocus)\n  206  					setTimeout(() => \n  207  						cmp.elementRef.nativeElement.focus(), 1);\n  ...\n  210  					.filter(e=> e.keyCode == 13)\n  211  						.subscribe(e =>\n  212: 							runActionInTreeContext(context.params.onEnter))\n  213  \n  214  				keyDownNoAlts.filter(e=> e.keyCode == 38 || e.keyCode == 40)\n  ...\n  228  						var isArray = tree.nodeModel.isArray(tree.selected);\n  229  						if (!isArray || (tree.expanded[tree.selected] && event.keyCode == 39))\n  230: 							runActionInTreeContext(context.params.onRightClickOfExpanded);	\n  231  						if (isArray && tree.selected) \n  232  							tree.expanded[tree.selected] = (event.keyCode == 39);\n  ...\n  250  jb.component('tree.keyboard-shortcut', {\n  251  	type: 'feature',\n  252: 	params: [\n  253  		{ id: 'key', as: 'string', description: 'Ctrl+C or Alt+V' },\n  254  		{ id: 'action', type: 'action', dynamic: true },\n  ...\n  288  jb.component('tree.drag-and-drop', {\n  289    type: 'feature',\n  290:   params: [\n  291    ],\n  292    impl: function(context) {\n\nC:\\jbart5-ng\\fixParams.js:\n   35                  var index = 0; endIndex =0;\n   36                  while(index != -1) {\n   37:                   index = find(source.slice(endIndex+1),/^\\s*params\\s*:\\s*{\\s*$/);\n   38                    if (index == -1)\n   39                      break;\n\nC:\\jbart5-ng\\projects\\material-demo\\docs.css:\n   63  .hljs-symbol .hljs-string,\n   64  .hljs-value,\n   65: .hljs-params,\n   66  .hljs-regexp {\n   67    color: #7DB9F4;\n   ..\n  931  }\n  932  \n  933: .api-params-item {\n  934    min-height: 72px;\n  935  }\n  936: .api-params-label {\n  937    margin-right: 8px;\n  938    text-align: center;\n  ...\n  943    align-self: flex-start;\n  944  }\n  945: .api-params-title {\n  946    color: #888;\n  947  }\n  948  \n  949: .api-params-content ul {\n  950    padding-left: 4px;\n  951  }\n\nC:\\jbart5-ng\\projects\\studio\\studio-data-browse.ts:\n    4  jb.component('studio.open-resource', {\n    5  	type: 'action',\n    6: 	params: [\n    7  	    { id: 'resource', type: 'data' },\n    8  	    { id: 'id', as: 'string' }\n\nC:\\jbart5-ng\\projects\\studio\\studio-edit-source.ts:\n    5  jb.component('studio.editSource', {\n    6  	type: 'action',\n    7: 	params: [\n    8  		{ id: 'path', as: 'string', defaultValue: { $: 'studio.currentProfilePath' } }\n    9  	],\n   ..\n   23  jb.component('studio.profile-as-text', {\n   24  	type: 'data',\n   25: 	params: [\n   26  		{ id: 'path', as: 'string' },\n   27  	],\n   ..\n   44  jb.component('studio.string-property-ref', {\n   45  	type: 'data',\n   46: 	params: [\n   47  		{ id: 'path', as: 'string' },\n   48  	],\n   ..\n   60  jb.component('studio.goto-sublime', {\n   61  	type: 'action',\n   62: 	params: [\n   63  		{ id: 'path', as: 'string'},\n   64  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-jb-editor.ts:\n    8  jb.component('studio.open-jb-editor', {\n    9    type: 'action', \n   10:   params: [\n   11      { id: 'path', as: 'string' }\n   12    ], \n   ..\n   28  jb.component('studio.jb-editor', {\n   29    type: 'control', \n   30:   params: [\n   31      { id: 'path', as: 'string' }\n   32    ], \n   ..\n  116  jb.component('studio.data-browse', {\n  117    type: 'control',\n  118:   params: [ \n  119      { id: 'data', },\n  120      { id: 'title', as: 'string'}\n  ...\n  136  jb.component('studio.jb-editor.nodes', {\n  137  	type: 'tree.nodeModel',\n  138: 	params: [ {id: 'path', as: 'string' } ],\n  139  	impl: function(context,path) {\n  140  		return new TgpModel(path,'jb-editor');\n  ...\n  144  jb.component('studio.open-jb-edit-property', {\n  145    type: 'action', \n  146:   params: [\n  147      { id: 'path', as: 'string' }\n  148    ], \n  ...\n  161  jb.component('studio.jb-floating-input', {\n  162    type: 'control',\n  163:   params: [ {id: 'path', as: 'string' } ],\n  164    impl :{$: 'editable-text', \n  165        databind :{$: 'studio.profile-value-as-text', path: '%$path%' }, \n  ...\n  184  jb.component('studio.profile-value-as-text', {\n  185    type: 'data',\n  186:   params: [\n  187      { id: 'path', as: 'string' }\n  188    ],\n  ...\n  223  jb.component('studio.open-jb-editor-menu', {\n  224    type: 'action', \n  225:   params: [\n  226      { id: 'path', as: 'string' }\n  227    ], \n  ...\n  235  jb.component('studio.jb-editor-menu', {\n  236    type: 'control', \n  237:   params: [\n  238      { id: 'path', as: 'string' }\n  239    ], \n  ...\n  242      controls: [\n  243        {$: 'dynamic-controls', \n  244:         controlItems :{$: 'studio.more-params', path: '%$path%' }, \n  245          genericControl :{$: 'pulldown.menu-item', \n  246            title: [\n  ...\n  331  jb.component('pulldown.studio-wrap-with', {\n  332    type: 'control', \n  333:   params: [\n  334      { id: 'path', as: 'string'},\n  335      { id: 'type', as: 'string' },\n\nC:\\jbart5-ng\\projects\\studio\\studio-main.ts:\n  135        {$: 'feature.init', \n  136          action :{$: 'rx.urlPath', \n  137:           params: ['project', 'page', 'profile_path'], \n  138            databind: '%$globals%', \n  139            base: 'studio', \n  ...\n  243  jb.component('studio.setPreviewSize', {\n  244  	type: 'action',\n  245: 	params: [\n  246  		{ id: 'width', as: 'number'},\n  247  		{ id: 'height', as: 'number'},\n\nC:\\jbart5-ng\\projects\\studio\\studio-model-components.ts:\n    3  \n    4  jb.component('studio.short-title',{\n    5: 	params: [ {id: 'path', as: 'string' } ],\n    6  	impl: (context,path) => model.shortTitle(path)\n    7  })\n    8  \n    9  jb.component('studio.val',{\n   10: 	params: [ {id: 'path', as: 'string' } ],\n   11  	impl: (context,path) => \n   12  		model.val(path)\n   ..\n   14  \n   15  jb.component('studio.is-primitive-value', {\n   16:   params: [ {id: 'path', as: 'string' } ],\n   17    impl: (context,path) => \n   18        typeof model.val(path) == 'string'\n   ..\n   20  \n   21  jb.component('studio.is-of-type', {\n   22:   params: [ \n   23    	{ id: 'path', as: 'string', essential: true },\n   24    	{ id: 'type', as: 'string', essential: true },\n   ..\n   29  \n   30  jb.component('studio.PTs-of-type', {\n   31:   params: [ \n   32    	{ id: 'type', as: 'string', essential: true },\n   33    ],\n   ..\n   37  \n   38  jb.component('studio.short-title', {\n   39: 	params: [ {id: 'path', as: 'string' } ],\n   40  	impl: (context,path) => \n   41  		model.shortTitle(path)\n   ..\n   43  \n   44  jb.component('studio.has-param', {\n   45: 	params: [ \n   46  		{ id: 'path', as: 'string' }, \n   47  		{ id: 'param', as: 'string' }, \n   ..\n   52  \n   53  jb.component('studio.non-control-children',{\n   54: 	params: [ {id: 'path', as: 'string' } ],\n   55  	impl: (context,path) => \n   56  		model.children(path,'non-controls')\n   ..\n   58  \n   59  jb.component('studio.array-children',{\n   60: 	params: [ {id: 'path', as: 'string' } ],\n   61  	impl: (context,path) => \n   62  		model.children(path,'array')\n   ..\n   64  \n   65  jb.component('studio.compName',{\n   66: 	params: [ {id: 'path', as: 'string' } ],\n   67  	impl: (context,path) => model.compName(path) || ''\n   68  })\n   69  \n   70  jb.component('studio.paramDef',{\n   71: 	params: [ {id: 'path', as: 'string' } ],\n   72  	impl: (context,path) => model.paramDef(path)\n   73  })\n   74  \n   75  jb.component('studio.enum-options',{\n   76: 	params: [ {id: 'path', as: 'string' } ],\n   77  	impl: (context,path) => \n   78  		((model.paramDef(path) || {}).options ||'').split(',').map(x=>{return {code:x,text:x}})\n   ..\n   80  \n   81  jb.component('studio.prop-name',{\n   82: 	params: [ {id: 'path', as: 'string' } ],\n   83  	impl: (context,path) => \n   84  		model.propName(path)\n   85  })\n   86  \n   87: jb.component('studio.more-params',{\n   88: 	params: [ {id: 'path', as: 'string' } ],\n   89  	impl: (context,path) => \n   90          model.jbEditorMoreParams(path)\n   ..\n   93  \n   94  jb.component('studio.compName-ref',{\n   95: 	params: [ {id: 'path', as: 'string' } ],\n   96  	impl: (context,path) => { return {\n   97  			$jb_val: function(value) {\n   ..\n  107  jb.component('studio.insertComp',{\n  108  	type: 'action',\n  109: 	params: [ \n  110  		{ id: 'path', as: 'string' },\n  111  		{ id: 'comp', as: 'string' },\n  ...\n  117  jb.component('studio.wrap', {\n  118  	type: 'action',\n  119: 	params: [ \n  120  		{ id: 'path', as: 'string' }, \n  121  		{ id: 'compName', as: 'string' } \n  ...\n  127  jb.component('studio.wrapWithGroup', {\n  128  	type: 'action',\n  129: 	params: [ {id: 'path', as: 'string' } ],\n  130  	impl: (context,path) => \n  131  		model.modify(model.wrapWithGroup, path, {},context)\n  ...\n  134  jb.component('studio.addProperty', {\n  135  	type: 'action',\n  136: 	params: [ {id: 'path', as: 'string' } ],\n  137  	impl: (context,path) => \n  138  		model.modify(model.addProperty, path, {},context)\n  ...\n  141  jb.component('studio.wrapWithPipeline', {\n  142  	type: 'action',\n  143: 	params: [ {id: 'path', as: 'string' } ],\n  144  	impl: (context,path) => \n  145  		model.modify(model.wrapWithPipeline, path, {},context)\n  ...\n  148  jb.component('studio.duplicate',{\n  149  	type: 'action',\n  150: 	params: [ \n  151  		{ id: 'path', as: 'string' },\n  152  	],\n  ...\n  157  jb.component('studio.moveInArray',{\n  158  	type: 'action',\n  159: 	params: [ \n  160  		{ id: 'path', as: 'string' },\n  161  		{ id: 'moveUp', type: 'boolean', as: 'boolean'} \n  ...\n  168  jb.component('studio.newArrayItem',{\n  169  	type: 'action',\n  170: 	params: [ {id: 'path', as: 'string' } ],\n  171  	impl: (context,path) => \n  172  		model.modify(model.addArrayItem, path, {},context)\n  ...\n  176  jb.component('studio.delete',{\n  177  	type: 'action',\n  178: 	params: [ {id: 'path', as: 'string' } ],\n  179  	impl: (context,path) => model.modify(model._delete,path,{},context)\n  180  })\n  ...\n  182  jb.component('studio.make-local',{\n  183  	type: 'action',\n  184: 	params: [ {id: 'path', as: 'string' } ],\n  185  	impl: (context,path) => model.modify(model.makeLocal,path,{ctx: context},context)\n  186  })\n\nC:\\jbart5-ng\\projects\\studio\\studio-new-control.ts:\n   72  jb.component('studio.onNextModifiedPath', {\n   73  	type: 'action',\n   74: 	params: [\n   75  		{ id: 'action', type: 'action', dynamic: true, essential: true }\n   76  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n  180  \n  181  jb.component('studio.ref',{\n  182: 	params: [ {id: 'path', as: 'string' } ],\n  183  	impl: (context,path) => \n  184  		profileRefFromPathWithNotification(path,context)\n  ...\n  186  \n  187  jb.component('studio.fix-to-closest-path', {\n  188: 	params: [ {id: 'path', as: 'ref' } ],\n  189  	impl: (ctx,pathRef) => {\n  190  		var path = jb.val(pathRef);\n\nC:\\jbart5-ng\\projects\\studio\\studio-pick-dialog.ts:\n    6  jb.component('studio.pick', {\n    7  	type: 'action',\n    8: 	params: [\n    9  		{ id: 'from', options: 'studio,preview', as: 'string', defaultValue: 'preview'},\n   10  		{ id: 'onSelect', type:'action', dynamic:true }\n   ..\n   17  		content: {$: 'label', title: ''}, // dummy\n   18  		onOK: ctx =>\n   19: 			ctx.componentContext.params.onSelect(ctx.setData(ctx.vars.pickPath.path))\n   20  	 }\n   21  })\n   ..\n   24  	hidden: true,\n   25  	type: 'dialog.style',\n   26: 	params: [\n   27  		{ id: 'from', as: 'string' },\n   28  	],\n   ..\n   68  jb.component('dialogFeature.studio-pick', {\n   69  	type: 'dialogFeature',\n   70: 	params: [\n   71  		{ id: 'from', as: 'string' },\n   72  	],\n   ..\n   74  	({\n   75        init: cmp=> {\n   76: 		  var _window = ctx.params.from == 'preview' ? jbart.previewWindow : window;\n   77: 		  var previewOffset = ctx.params.from == 'preview' ? $('#jb-preview').offset().top : 0;\n   78  		  cmp.titleBelow = false;\n   79  \n   ..\n  144  \n  145  jb.component('studio.highlight-in-preview',{\n  146: 	params: [\n  147  		{ id: 'path', as: 'string' }\n  148  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-popups.ts:\n    5  jb.component('studio.open-multiline-edit', {\n    6  	type: 'action',\n    7: 	params: [\n    8  	    { id: 'path', as: 'string' }\n    9  	], \n   ..\n   23  jb.component('dialog.studio-floating', {\n   24  	type: 'dialog.style',\n   25: 	params: [\n   26  		{ id: 'id', as: 'string' },\n   27  		{ id: 'width', as: 'number', default: 300},\n   ..\n   97  \n   98  jb.component('studio.code-mirror-mode',{\n   99: 	params: [ {id: 'path', as: 'string' } ],\n  100  	impl: function(ctx,path) {\n  101  		if (path.match(/css/))\n  ...\n  109  jb.component('studio.open-responsive-phone-popup', {\n  110    type: 'action', \n  111:   params: [\n  112      { id: 'path', as: 'string' }\n  113    ], \n\nC:\\jbart5-ng\\projects\\studio\\studio-probe.ts:\n   69  jb.component('studio.probe', {\n   70    type:'data',\n   71:   params: [ { id: 'path', as: 'string', dynamic: true } ],\n   72    impl: (ctx,path) => {\n   73        var _jbart = jbart_base();\n\nC:\\jbart5-ng\\projects\\studio\\studio-properties-menu.ts:\n    3  jb.component('studio.property-toobar-feature', {\n    4    type: 'feature', \n    5:   params: [\n    6      { id: 'path', as: 'string' }\n    7    ], \n    .\n   13  jb.component('studio.property-toobar-feature2', {\n   14    type: 'feature', \n   15:   params: [\n   16      { id: 'path', as: 'string' }\n   17    ], \n   ..\n   23  jb.component('studio.property-toobar', {\n   24    type: 'control', \n   25:   params: [\n   26      { id: 'path', as: 'string' }\n   27    ], \n   ..\n   79  jb.component('studio.open-property-menu', {\n   80    type: 'action', \n   81:   params: [\n   82      { id: 'path', as: 'string' }\n   83    ], \n\nC:\\jbart5-ng\\projects\\studio\\studio-properties.ts:\n   41  jb.component('studio.properties', {\n   42    type: 'control', \n   43:   params: [\n   44      { id: 'path', as: 'string' }\n   45    ], \n   ..\n  103  jb.component('studio.properties-in-tgp',{\n  104    type: 'control',\n  105:   params: [ {id: 'path', as: 'string' } ],\n  106    impl :{$: 'group',\n  107      style :{$: 'property-sheet.studio-properties'},\n  ...\n  116  jb.component('studio.property-field',{\n  117  	type: 'control',\n  118: 	params: [\n  119  		{ id: 'path', as: 'string' },\n  120  	],\n  ...\n  156  jb.component('studio.property-label',{\n  157  	type: 'control',\n  158: 	params: [ {id: 'path', as: 'string' } ],\n  159  	impl :{$: 'label', \n  160  		title :{$: 'studio.prop-name', path: '%$path%' },\n  ...\n  164  jb.component('studio.property-primitive', {\n  165    type: 'control', \n  166:   params: [\n  167      { id: 'path', as: 'string' }\n  168    ], \n  ...\n  184  jb.component('studio.property-script', {\n  185    type: 'control', \n  186:   params: [\n  187      { id: 'path', as: 'string' }\n  188    ], \n  ...\n  203  jb.component('studio.data-script-summary', {\n  204    type: 'data', \n  205:   params: [\n  206      { id: 'path', as: 'string' }\n  207    ], \n  ...\n  219  jb.component('studio.property-boolean',{\n  220  	type: 'control',\n  221: 	params: [ {id: 'path', as: 'string' } ],\n  222  	impl :{$: 'editable-boolean',\n  223  		style: {$: 'editable-boolean.studio-slide-toggle'},\n  ...\n  232  jb.component('studio.property-enum',{\n  233  	type: 'control',\n  234: 	params: [ {id: 'path', as: 'string' } ],\n  235  	impl :{$: 'picklist', \n  236  		style :{$: 'picklist.studio-enum'},\n  ...\n  243  jb.component('studio.property-slider', {\n  244  	type: 'control',\n  245: 	params: [ {id: 'path', as: 'string' } ],\n  246  	impl :{$: 'editable-number', \n  247  		$vars: { \n  ...\n  260  jb.component('studio.property-tgp', {\n  261    type: 'control', \n  262:   params: [\n  263      { id: 'path', as: 'string' }\n  264    ], \n  ...\n  350  jb.component('studio.property-custom-style', {\n  351    type: 'control', \n  352:   params: [ {id: 'path', as: 'string' } ], \n  353    impl :{$: 'group', \n  354      title :{$: 'studio.prop-name', path: '%$path%' }, \n  ...\n  376  jb.component('studio.property-tgp-in-array', {\n  377    type: 'control', \n  378:   params: [\n  379      { id: 'path', as: 'string' }\n  380    ], \n  ...\n  443  jb.component('studio.property-array', {\n  444    type: 'control', \n  445:   params: [\n  446      { id: 'path', as: 'string' }\n  447    ], \n  ...\n  484  jb.component('studio.tgp-path-options',{\n  485  	type: 'picklist.options',\n  486: 	params: [ \n  487  		{ id: 'path', as: 'string' },\n  488  	],\n  ...\n  494  jb.component('studio.tgp-type-options',{\n  495  	type: 'picklist.options',\n  496: 	params: [ \n  497  		{ id: 'type', as: 'string'} \n  498  	],\n  ...\n  503  jb.component('studio.undo-support', {\n  504    type: 'feature',\n  505:   params: [\n  506      { id: 'path', essential: true, as: 'string' },\n  507    ],\n  ...\n  535  jb.component('studio.bindto-modifyOperations', {\n  536    type: 'feature',\n  537:   params: [\n  538      { id: 'path', essential: true, as: 'string' },\n  539      { id: 'data', as: 'ref' }\n  ...\n  551  jb.component('group.studio-watch-path', {\n  552    type: 'feature',\n  553:   params: [\n  554      { id: 'path', essential: true, as: 'string' },\n  555    ],\n\nC:\\jbart5-ng\\projects\\studio\\studio-save.ts:\n   12  \n   13  jb.component('studio.saveComponents', {\n   14: 	params: [\n   15  		{ id: 'force',as: 'boolean', type: 'boolean' }\n   16  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-style-editor.ts:\n    4  jb.component('studio.open-style-editor', {\n    5  	type: 'action',\n    6: 	  params: [\n    7  	    { id: 'path', as: 'string' }\n    8  	  ], \n    .\n   24  jb.component('studio.open-style-menu', {\n   25    type: 'action', \n   26:   params: [\n   27      { id: 'path', as: 'string' }\n   28    ], \n   ..\n   63  jb.component('studio.style-editor', {\n   64    type: 'control', \n   65:   params: [\n   66      { id: 'path', as: 'string' }\n   67    ], \n   ..\n   86  \n   87  jb.component('studio.style-source', {\n   88:   params: [\n   89      { id: 'path', as: 'string' }\n   90    ], \n   ..\n   94  \n   95  jb.component('studio.format-css', {\n   96:   params: [\n   97      { id: 'css', as: 'string' }\n   98    ], \n   ..\n  108  jb.component('studio.open-make-global-style', {\n  109    type: 'action', \n  110:   params: [\n  111      { id: 'path', as: 'string' }\n  112    ],\n  ...\n  123      onOK: ctx => {\n  124          debugger;\n  125:         var path = ctx.componentContext.params.path;\n  126          var id = ctx.exp('%$globals/project%.%$dialogData/name%'); \n  127          var profile = {\n  ...\n  136  \n  137  jb.component('studio.custom-style-make-local', {\n  138:   params: [\n  139      { id: 'template', as: 'string'},\n  140      { id: 'css', as: 'string'},\n\nC:\\jbart5-ng\\projects\\studio\\studio-suggestions.ts:\n   39      this.options = [];\n   40      probeCtx = probeCtx || (jbart.previewjbart || jbart).initialCtx;\n   41:     var vars = jb.entries(jb.extend({},(probeCtx.componentContext||{}).params,probeCtx.vars,probeCtx.resources))\n   42            .map(x=>({toPaste: '$' + x[0], value: x[1]}))\n   43  \n   ..\n  104  jb.component('editable-text.suggestions-input-feature', {\n  105    type: 'feature', \n  106:   params: [\n  107      { id: 'path', as: 'string' },\n  108      { id: 'action', type: 'action', dynamic:true },\n  ...\n  129              .subscribe(e=> {\n  130                if (!$(input).hasClass('dialog-open'))\n  131:                 ctx.params.onEnter()\n  132                })\n  133  \n  ...\n  151            .delay(1) // we use keydown - let the input fill itself\n  152            .map(e=> \n  153:             new suggestions(e.keyEv.srcElement,'').extendWithOptions(e.ctx,ctx.params.path))\n  154            .filter(e => \n  155              e.text)\n  ...\n  169                    closeFloatingInput(ctx)\n  170                };\n  171:               jb_ui.wrapWithLauchingElement(ctx.params.action,ctx.setVars({suggestionContext: suggestionContext}), e.input)()\n  172              }\n  173            })\n  174  \n  175          function getProbe() {\n  176:           cmp.probeResult = cmp.probeResult || ctx.run({$: 'studio.probe', path: ctx.params.path });\n  177            return cmp.probeResult;\n  178          }\n  179          function closeFloatingInput(ctx) {\n  180:             if (ctx.params.floatingInput)\n  181                ctx.run({$:'closeContainingPopup'});\n  182              ctx.vars.regainFocus && ctx.vars.regainFocus();\n  ...\n  188  jb.component('studio.jb-open-suggestions', {\n  189    type: 'action', \n  190:   params: [\n  191      { id: 'path', as: 'string' }\n  192    ], \n  ...\n  242  jb.component('itemlist.studio-suggestions-selection', {\n  243    type: 'feature',\n  244:   params: [\n  245      { id: 'onEnter', type: 'action', dynamic: true },\n  246    ],\n  ...\n  254            .subscribe(x=>{\n  255                if (cmp.selected)\n  256:                 ctx.params.onEnter(ctx.setData(cmp.selected))\n  257            })\n  258          keyEm.filter(e=>e.keyCode == 27) // ESC\n  ...\n  288  \n  289  jb.component('studio.jb-paste-suggestion', {\n  290:   params: [\n  291      { id: 'path',as: 'string'}\n  292    ],\n\nC:\\jbart5-ng\\projects\\studio\\studio-testers.ts:\n    8  jb.component('suggestions-test', {\n    9    type: 'test',\n   10:   params: [\n   11      { id: 'expression', as: 'string' },\n   12      { id: 'selectionStart', as: 'number', defaultValue: -1 },\n   ..\n   15    impl :{$: 'data-test', \n   16      calculate: ctx => {\n   17:       var params = ctx.componentContext.params;\n   18:       var selectionStart = params.selectionStart == -1 ? params.expression.length : params.selectionStart;\n   19:       var obj = new suggestions({ value: params.expression, selectionStart: selectionStart })\n   20          .extendWithOptions(ctx);\n   21        return JSON.stringify(JSON.stringify(obj.options.map(x=>x.text)));\n   ..\n   27  jb.component('studio-tree-children-test', {\n   28    type: 'test',\n   29:   params: [\n   30      { id: 'path', as: 'string' },\n   31      { id: 'childrenType', as: 'string', type: ',jb-editor' },\n   ..\n   34    impl :{$: 'data-test', \n   35      calculate: ctx => {\n   36:       var params = ctx.componentContext.params;\n   37:       var mdl = new TgpModel('',params.childrenType);\n   38:       var titles = mdl.children(params.path)\n   39          .map(path=>\n   40            mdl.title(path,true));\n   ..\n   48  jb.component('jb-path-test', {\n   49    type: 'test',\n   50:   params: [\n   51      { id: 'controlWithMark', type: 'control', dynamic: true },\n   52      { id: 'staticPath', as: 'string' },\n\nC:\\jbart5-ng\\projects\\studio\\studio-tests.ts:\n    4  if (window.jbartTest) {\n    5  	// jb.resource('ui-tests','UrlPathEm',{ $: 'rx.urlPath', base: 'ui-tests', zoneId: 'single-test', \n    6: 	// 	params: [ 'test','project', 'page', 'profile_path' ] , databind: '{%$globals%}' } );\n    7  	jb.resource('ui-tests','WidgetLoaded',{ $: 'rx.subject' })\n    8  }\n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n   69  			return [path + '~$' + compName];\n   70  		} else if (comp) {\n   71: 			var composite = jb.entries(comp.params)\n   72  				.filter(p=>\n   73  					p[1].composite)\n   74  				.map(p=>flattenArray(p[0]));\n   75  \n   76: 			return (composite[0] || []).concat(jb.entries(comp.params)\n   77  					.filter(p=>!p[1].composite)\n   78  					.map(p=> ({ path: path + '~' + p[0], param: p[1]}))\n   ..\n   99  		if (comp) {\n  100  			var existing = this.jbEditorSubNodes(path);\n  101: 			return jb.entries(comp.params)\n  102  					.map(p=> path + '~' + p[0])\n  103  					.filter(p=> existing.indexOf(p) == -1)\n  ...\n  274  	wrap(path,args) {\n  275  		var compDef = getComp(args.compName);\n  276: 		var paramNames = Object.getOwnPropertyNames((compDef || {}).params);\n  277  		if (paramNames[0]) {\n  278  			var result = jb.extend({$: args.compName}, jb.obj(paramNames[0],[ profileFromPath(path) ]));\n  ...\n  320  		// copy properties from existing & default values\n  321  		if (existing && typeof existing == 'object')\n  322: 			jb.entries(comp.params).forEach(p=>{\n  323  				if (existing[p[0]])\n  324  					result[p[0]] = existing[p[0]];\n  ...\n  337  		var result = { $: compName };\n  338  		// copy default values\n  339: 		jb.entries(comp.params).forEach(p=>{\n  340  			if (p[1].defaultValue)\n  341  				result[p[0]] = JSON.parse(JSON.stringify(p[1].defaultValue))\n  ...\n  361  		var profile = profileFromPath(path);\n  362  		// inject conditional param values\n  363: 		comp.params\n  364  			.forEach(p=>{ \n  365  				var pUsage = '%$'+p.id+'%';\n  ...\n  372  			})\n  373  		// inject param values \n  374: 		comp.params\n  375  			.forEach(p=>{ \n  376  				var pVal = '' + (profile[p.id] || p.defaultValue || ''); // only primitives\n  ...\n  398  		var parent_prof = profileFromPath(parentPath(path),true);\n  399  		var compDef = parent_prof && getComp(jb.compName(parent_prof));\n  400: 		var params = (compDef || {}).params || [];\n  401  		var paramName = path.split('~').pop();\n  402: 		return params.filter(p=>p.id==paramName)[0] || {};\n  403  	}\n  404  \n  ...\n  429  		var prof = profileFromPath(path,true);\n  430  		if (!prof) return [];\n  431: 		var params = (getComp(jb.compName(prof)) || {}).params || [];\n  432: 		return params.filter(p=>(p.type||'').indexOf('control')!=-1).map(p=>p.id)\n  433  	}\n  434  	nonControlParams(path) {\n  435  		var prof = profileFromPath(path);\n  436  		if (!prof) return [];\n  437: 		var params = (getComp(jb.compName(prof)) || {}).params || [];\n  438: 		return params.filter(p=>\n  439  				(p.type||'').indexOf('control')==-1)\n  440  			.map(p=>p.id)\n  ...\n  505  \n  506  jb.component('studio.short-title',{\n  507: 	params: [ {id: 'path', as: 'string' } ],\n  508  	impl: (context,path) => model.shortTitle(path)\n  509  })\n  510  \n  511  jb.component('studio.val',{\n  512: 	params: [ {id: 'path', as: 'string' } ],\n  513  	impl: (context,path) => \n  514  		model.val(path)\n  ...\n  516  \n  517  jb.component('studio.is-primitive-value', {\n  518:   params: [ {id: 'path', as: 'string' } ],\n  519    impl: (context,path) => \n  520        typeof model.val(path) == 'string'\n  ...\n  522  \n  523  jb.component('studio.is-of-type', {\n  524:   params: [ \n  525    	{ id: 'path', as: 'string', essential: true },\n  526    	{ id: 'type', as: 'string', essential: true },\n  ...\n  531  \n  532  jb.component('studio.PTs-of-type', {\n  533:   params: [ \n  534    	{ id: 'type', as: 'string', essential: true },\n  535    ],\n  ...\n  539  \n  540  jb.component('studio.short-title', {\n  541: 	params: [ {id: 'path', as: 'string' } ],\n  542  	impl: (context,path) => \n  543  		model.shortTitle(path)\n  ...\n  545  \n  546  jb.component('studio.has-param', {\n  547: 	params: [ \n  548  		{ id: 'path', as: 'string' }, \n  549  		{ id: 'param', as: 'string' }, \n  ...\n  554  \n  555  jb.component('studio.non-control-children',{\n  556: 	params: [ {id: 'path', as: 'string' } ],\n  557  	impl: (context,path) => \n  558  		model.children(path,'non-controls')\n  ...\n  560  \n  561  jb.component('studio.array-children',{\n  562: 	params: [ {id: 'path', as: 'string' } ],\n  563  	impl: (context,path) => \n  564  		model.children(path,'array')\n  ...\n  566  \n  567  jb.component('studio.compName',{\n  568: 	params: [ {id: 'path', as: 'string' } ],\n  569  	impl: (context,path) => model.compName(path) || ''\n  570  })\n  571  \n  572  jb.component('studio.paramDef',{\n  573: 	params: [ {id: 'path', as: 'string' } ],\n  574  	impl: (context,path) => model.paramDef(path)\n  575  })\n  576  \n  577  jb.component('studio.enum-options',{\n  578: 	params: [ {id: 'path', as: 'string' } ],\n  579  	impl: (context,path) => \n  580  		((model.paramDef(path) || {}).options ||'').split(',').map(x=>{return {code:x,text:x}})\n  ...\n  582  \n  583  jb.component('studio.prop-name',{\n  584: 	params: [ {id: 'path', as: 'string' } ],\n  585  	impl: (context,path) => \n  586  		model.propName(path)\n  587  })\n  588  \n  589: jb.component('studio.more-params',{\n  590: 	params: [ {id: 'path', as: 'string' } ],\n  591  	impl: (context,path) => \n  592          model.jbEditorMoreParams(path)\n  ...\n  595  \n  596  jb.component('studio.compName-ref',{\n  597: 	params: [ {id: 'path', as: 'string' } ],\n  598  	impl: (context,path) => { return {\n  599  			$jb_val: function(value) {\n  ...\n  609  jb.component('studio.insertComp',{\n  610  	type: 'action',\n  611: 	params: [ \n  612  		{ id: 'path', as: 'string' },\n  613  		{ id: 'comp', as: 'string' },\n  ...\n  619  jb.component('studio.wrap', {\n  620  	type: 'action',\n  621: 	params: [ \n  622  		{ id: 'path', as: 'string' }, \n  623  		{ id: 'compName', as: 'string' } \n  ...\n  629  jb.component('studio.wrapWithGroup', {\n  630  	type: 'action',\n  631: 	params: [ {id: 'path', as: 'string' } ],\n  632  	impl: (context,path) => \n  633  		model.modify(model.wrapWithGroup, path, {},context)\n  ...\n  636  jb.component('studio.addProperty', {\n  637  	type: 'action',\n  638: 	params: [ {id: 'path', as: 'string' } ],\n  639  	impl: (context,path) => \n  640  		model.modify(model.addProperty, path, {},context)\n  ...\n  643  jb.component('studio.wrapWithPipeline', {\n  644  	type: 'action',\n  645: 	params: [ {id: 'path', as: 'string' } ],\n  646  	impl: (context,path) => \n  647  		model.modify(model.wrapWithPipeline, path, {},context)\n  ...\n  650  jb.component('studio.duplicate',{\n  651  	type: 'action',\n  652: 	params: [ \n  653  		{ id: 'path', as: 'string' },\n  654  	],\n  ...\n  659  jb.component('studio.moveInArray',{\n  660  	type: 'action',\n  661: 	params: [ \n  662  		{ id: 'path', as: 'string' },\n  663  		{ id: 'moveUp', type: 'boolean', as: 'boolean'} \n  ...\n  670  jb.component('studio.newArrayItem',{\n  671  	type: 'action',\n  672: 	params: [ {id: 'path', as: 'string' } ],\n  673  	impl: (context,path) => \n  674  		model.modify(model.addArrayItem, path, {},context)\n  ...\n  678  jb.component('studio.delete',{\n  679  	type: 'action',\n  680: 	params: [ {id: 'path', as: 'string' } ],\n  681  	impl: (context,path) => model.modify(model._delete,path,{},context)\n  682  })\n  ...\n  684  jb.component('studio.make-local',{\n  685  	type: 'action',\n  686: 	params: [ {id: 'path', as: 'string' } ],\n  687  	impl: (context,path) => model.modify(model.makeLocal,path,{ctx: context},context)\n  688  })\n  689  \n  690  jb.component('studio.projectSource',{\n  691: 	params: [ \n  692  		{ id: 'project', as: 'string', defaultValue: '%$globals/project%' } \n  693  	],\n  ...\n  700  \n  701  jb.component('studio.compSource',{\n  702: 	params: [ \n  703  		{ id: 'comp', as: 'string', defaultValue: { $: 'studio.currentProfilePath' } } \n  704  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-toolbar.ts:\n    4  jb.component('studio.pickAndOpen', {\n    5  	type: 'action',\n    6: 	params: [\n    7  		{ id: 'from', options: 'studio,preview', as: 'string', defaultValue: 'preview'}\n    8  	],\n    .\n  100  jb.component('studio_button.toolbarButton', {\n  101  	type: 'button.style',\n  102: 	params: [\n  103  		{ id: 'spritePosition', as: 'string', defaultValue: '0,0' }\n  104  	],\n\nC:\\jbart5-ng\\projects\\studio\\studio-tree.ts:\n   19  jb.component('studio.open-tree-menu', {\n   20    type: 'action', \n   21:   params: [\n   22      { id: 'path', as: 'string' }\n   23    ], \n\nC:\\jbart5-ng\\projects\\studio\\studio-undo.ts:\n   51  \n   52  jb.component('studio.copy', {\n   53: 	params: [ {id: 'path', as: 'string' } ],\n   54  	impl: (ctx,path) => \n   55  		undo.copy(ctx,path)\n   ..\n   57  \n   58  jb.component('studio.paste', {\n   59: 	params: [ {id: 'path', as: 'string' } ],\n   60  	impl: (ctx,path) => \n   61  		undo.paste(ctx,path)\n\nC:\\jbart5-ng\\projects\\studio\\studio-utils.ts:\n   80  jb.component('studio.message', {\n   81  	type: 'action',\n   82: 	params: [ { id: 'message', as: 'string' } ],\n   83  	impl: (ctx,message) => \n   84  		message(message)\n   ..\n  101  jb.component('studio.goto-path', {\n  102  	type: 'action',\n  103: 	params: [ \n  104  		{ id: 'path', as: 'string' },\n  105  	],\n  ...\n  112  \n  113  jb.component('studio.projectSource',{\n  114: 	params: [ \n  115  		{ id: 'project', as: 'string', defaultValue: '%$globals/project%' } \n  116  	],\n  ...\n  123  \n  124  jb.component('studio.compSource',{\n  125: 	params: [ \n  126  		{ id: 'comp', as: 'string', defaultValue: { $: 'studio.currentProfilePath' } } \n  127  	],\n\nC:\\jbart5-ng\\projects\\studio-helper\\path-tests.ts:\n   47  jb.component('test.inner-label-template', {\n   48  	type: 'control',\n   49: 	params: [\n   50  		{ id: 'ctrl', type: 'control', dynamic: true }\n   51  	],\n\nC:\\jbart5-ng\\projects\\studio-helper\\studio-helper.ts:\n   36  jb.component('studio-helper.properties', {\n   37    type: 'control', \n   38:   params: [\n   39      { id: 'path', defaultValue: 'studio-helper-dummy.label' }\n   40    ], \n   ..\n   79  jb.component('studio-helper.property-array', {\n   80    type: 'control', \n   81:   params: [\n   82      { id: 'path', as: 'string' }\n   83    ], \n   ..\n  120  jb.component('studio-helper.control-tree', {\n  121    type: 'control', \n  122:   params: [\n  123      { id: 'path', defaultValue: 'studio-helper.sample-control' }\n  124    ],\n  ...\n  132  jb.component('studio-helper.jb-editor', {\n  133    type: 'control', \n  134:   params: [\n  135      { id: 'path', defaultValue: 'studio-helper-dummy.label' }\n  136    ], \n\nC:\\jbart5-ng\\projects\\ui-tests\\ui-tests-old.js:\n   39  \n   40  jb_component('inner-label1-tst', {\n   41:   params: [\n   42       { id: 'title', essential: true, dynamic: true },\n   43    ],\n   ..\n   46  \n   47  jb_component('inner-label2-tst', {\n   48:   params: [\n   49       { id: 'title', essential: true, dynamic: true },\n   50    ],\n   ..\n   53  \n   54  jb_component('inner-label3-tst', {\n   55:   params: [\n   56       { id: 'title', essential: true, dynamic: true },\n   57    ],\n\nC:\\jbart5-ng\\projects\\ui-tests\\ui-tests.ts:\n   33  \n   34  jb.component('inner-label1-tst', {\n   35:   params: [\n   36       { id: 'title', essential: true, dynamic: true },\n   37    ],\n   ..\n   40  \n   41  jb.component('inner-label2-tst', {\n   42:   params: [\n   43       { id: 'title', essential: true, dynamic: true },\n   44    ],\n   ..\n   47  \n   48  jb.component('inner-label3-tst', {\n   49:   params: [\n   50       { id: 'title', essential: true, dynamic: true },\n   51    ],\n\nC:\\jbart5-ng\\src\\core\\components.js:\n    9  jb_component('call',{\n   10   	type: '*',\n   11:  	params: [\n   12   		{ id: 'param', as: 'string' }\n   13   	],\n   14   	impl: function(context,param) {\n   15:  	  var paramObj = context.componentContext && context.componentContext.params[param];\n   16        if (typeof(paramObj) == 'function')\n   17   		return paramObj(jb_ctx(context, { \n   ..\n   28  jb_component('pipeline',{\n   29  	type: \"data\",\n   30: 	params: [\n   31  		{ id: 'items', type: \"data,aggregator[]\", ignore: true, essential: true, composite: true }\n   32  	],\n   ..\n   57  jb_component('run',{\n   58   	type: '*',\n   59:  	params: [\n   60   		{ id: 'profile', as: 'single'},\n   61   	],\n   ..\n   67  jb_component('list',{\n   68  	type: \"data\",\n   69: 	params: [\n   70  		{ id: 'items', type: \"data[]\", as: 'array', composite: true }\n   71  	],\n   ..\n   84  jb_component('firstSucceeding',{\n   85  	type: \"data\",\n   86: 	params: [\n   87  		{ id: 'items', type: \"data[]\", as: 'array' }\n   88  	],\n   ..\n   96  jb_component('objectProperties',{\n   97  	type: \"data\",\n   98: 	params: [\n   99  		{ id: 'object', defaultValue: '%%', as: 'single' }\n  100  	],\n  ...\n  105  jb_component('extend',{\n  106  	type: \"data\",\n  107: 	params: [\n  108  		{ id: 'with', as: 'single' },\n  109  		{ id: 'object', defaultValue: '%%', as: 'single' }\n  ...\n  116  jb_component('objectToArray',{\n  117  	type: \"data\",\n  118: 	params: [\n  119  		{ id: 'object', defaultValue: '%%', as: 'single' }\n  120  	],\n  ...\n  133  jb_component('prefix', {\n  134  	type: 'data',\n  135: 	params: [\n  136  		{ id: 'separator', as: 'string', essential: true },\n  137  		{ id: 'text', as: 'string', defaultValue: '%%' },\n  ...\n  144  jb_component('suffix', {\n  145  	type: 'data',\n  146: 	params: [\n  147  		{ id: 'separator', as: 'string', essential: true },\n  148  		{ id: 'text', as: 'string', defaultValue: '%%' },\n  ...\n  155  jb_component('removePrefix',{\n  156  	type: 'data',\n  157: 	params: [\n  158  		{ id: 'separator', as: 'string', essential: true },\n  159  		{ id: 'text', as: 'string', defaultValue: '%%' },\n  ...\n  166  jb_component('removePrefixRegex',{\n  167  	type: 'data',\n  168: 	params: [\n  169  		{ id: 'prefix', as: 'string', essential: true },\n  170  		{ id: 'text', as: 'string', defaultValue: '%%' },\n  ...\n  179  jb_component('removeSuffix',{\n  180  	type: 'data',\n  181: 	params: [\n  182  		{ id: 'separator', as: 'string', essential: true },\n  183  		{ id: 'text', as: 'string', defaultValue: '%%' },\n  ...\n  190  jb_component('removeSuffixRegex',{\n  191  	type: 'data',\n  192: 	params: [\n  193  		{ id: 'suffix', as: 'string', essential: true },\n  194  		{ id: 'text', as: 'string', defaultValue: '%%' },\n  ...\n  203  jb_component('writeValue',{\n  204  	type: 'action',\n  205: 	params: [\n  206  		{ id: 'to', as: 'ref' },\n  207  		{ id: 'value',}\n  ...\n  213  jb_component('toggleBooleanValue',{\n  214  	type: 'action',\n  215: 	params: [\n  216  		{ id: 'of', as: 'ref' },\n  217  	],\n  ...\n  222  jb_component('addToArray', {\n  223  	type: 'action',\n  224: 	params: [\n  225  		{ id: 'array',},\n  226  		{ id: 'add',}\n  ...\n  233  jb_component('removeFromArray',{\n  234  	type: 'action',\n  235: 	params: [\n  236  		{ id: 'array', as:'array' },\n  237  		{ id: 'remove', as:'array' }\n  ...\n  246  jb_component('remove', {\n  247  	type: 'action',\n  248: 	params: [{ id: 'value' }],\n  249  	impl: function(context,value) {\n  250  		jb_remove(value,true);\n  ...\n  254  \n  255  jb_component('slice', {\n  256: 	params: [\n  257  		{ id: 'start', as: 'number', defaultValue: 0, description: '0-based index', essential: true },\n  258  		{ id: 'end', as: 'number', essential: true, description: '0-based index of where to end the selection (not including itself)' }\n  ...\n  267  jb_component('not',{\n  268  	type: 'boolean',\n  269: 	params: [ \n  270  		{ id: 'of', type: 'boolean', as: 'boolean', essential: true} \n  271  	],\n  ...\n  277  jb_component('and',{\n  278  	type: 'boolean',\n  279: 	params: [ \n  280  		{ id: 'items', type: 'boolean[]', ignore: true, essential: true } \n  281  	],\n  ...\n  292  jb_component('or',{\n  293  	type: 'boolean',\n  294: 	params: [ \n  295  		{ id: 'items', type: 'boolean[]', ignore: true, essential: true } \n  296  	],\n  ...\n  307  jb_component('contains',{\n  308  	type: 'boolean',\n  309: 	params: [\n  310  		{ id: 'text', type: 'data[]', as: 'array', essential: true },\n  311  		{ id: 'allText', defaultValue: '%%', as:'array'}\n  ...\n  333  jb_component('startsWith',{\n  334  	type: 'boolean',\n  335: 	params: [\n  336  		{ id: 'startsWith', as: 'string', essential: true },\n  337  		{ id: 'text', defaultValue: '%%', as:'string'}\n  ...\n  344  jb_component('endsWith',{\n  345  	type: 'boolean',\n  346: 	params: [\n  347  		{ id: 'endsWith', as: 'string', essential: true },\n  348  		{ id: 'text', defaultValue: '%%', as:'string'}\n  ...\n  356  jb_component('filter',{\n  357  	type: 'aggregator',\n  358: 	params: [\n  359  		{ id: 'filter', type: 'boolean', as: 'boolean', dynamic: true, essential: true }\n  360  	],\n  ...\n  367  jb_component('count',{\n  368  	type: 'aggregator',\n  369: 	params: [\n  370  		{ id: 'items', as:'array', defaultValue: '%%'}\n  371  	],\n  ...\n  386  \n  387  jb_component('join',{\n  388: 	params: [\n  389  		{ id: 'separator', as: 'string', defaultValue:',', essential: true },\n  390  		{ id: 'prefix', as: 'string' },\n  ...\n  405  \n  406  jb_component('unique',{\n  407: 	params: [\n  408  		{ id: 'id', as: 'string', dynamic: true, defaultValue: '%%' },\n  409  		{ id: 'items', as:'array', defaultValue: '%%'}\n  ...\n  424  \n  425  jb_component('log',{\n  426: 	params: [\n  427  		{ id: 'obj', as: 'single', defaultValue: '%%'}\n  428  	],\n  ...\n  439  });\n  440  \n  441: jb_component('asIs',{ params: [{id: '$asIs'}], impl: function(context) { return context.profile.$asIs } });\n  442  jb_component('profile',{ impl: function(context) { return jb_handledObject(context.profile.$profile); } });\n  443  \n  ...\n  459  \n  460  jb_component('stringify',{\n  461: 	params: [\n  462  		{ id: 'value', defaultValue: '%%', as:'single'},\n  463  		{ id: 'space', as: 'string', description: 'use space or tab to make pretty output' }\n  ...\n  470  \n  471  jb_component('jbart', {\n  472: 	params: [\n  473  		{ id: 'script', description: 'jbart script to run' }\n  474  	],\n  ...\n  480  jb_component('split',{\n  481  	type: 'data',\n  482: 	params: [\n  483  		{ id: 'separator', as: 'string', defaultValue: ',' },\n  484  		{ id: 'text', as: 'string', defaultValue: '%%'},\n  ...\n  500  jb_component('replace',{\n  501  	type: 'data',\n  502: 	params: [\n  503  		{ id: 'find', as: 'string' },\n  504  		{ id: 'replace', as: 'string' },\n  ...\n  517  jb_component('foreach', {\n  518  	type: 'action',\n  519: 	params: [\n  520  		{ id: 'items', as: 'array', defaultValue: '%%'},\n  521  		{ id: 'action', type:'action', dynamic:true },\n  ...\n  532  jb_component('isNull',{\n  533  	type: 'boolean',\n  534: 	params: [\n  535  		{ id: 'item', as: 'single', defaultValue: '%%'}\n  536  	],\n  ...\n  542  jb_component('isEmpty',{\n  543  	type: 'boolean',\n  544: 	params: [\n  545  		{ id: 'item', as: 'single', defaultValue: '%%'}\n  546  	],\n  ...\n  552  jb_component('notEmpty',{\n  553  	type: 'boolean',\n  554: 	params: [\n  555  		{ id: 'item', as: 'single', defaultValue: '%%'}\n  556  	],\n  ...\n  562  jb_component('equals',{\n  563  	type: 'boolean',\n  564: 	params: [\n  565  		{ id: 'item1', as: 'single', essential: true },\n  566  		{ id: 'item2', defaultValue: '%%', as: 'single' }\n  ...\n  578  jb_component('notEquals',{\n  579  	type: 'boolean',\n  580: 	params: [\n  581  		{ id: 'item1', as: 'single', essential: true },\n  582  		{ id: 'item2', defaultValue: '%%', as: 'single' }\n  ...\n  595  jb_component('writableText', {\n  596  	type: 'data',\n  597: 	params: [\n  598  		{ id: 'defaultValue', as: 'string' }\n  599  	],\n  ...\n  605  jb_component('searchFilter', {\n  606  	type: 'aggregator',\n  607: 	params: [\n  608  		{ id: 'pattern', as:'string'},\n  609  		{ id: 'itemText', dynamic:true, as:'string', defaultValue:'%%'},\n  ...\n  626  jb_component('queryFilter', {\n  627  	type: 'aggregator',\n  628: 	params: [\n  629  		{ id: 'query', as:'single' },\n  630  		{ id: 'filters', type:'filter{}', ingore: true },\n  ...\n  686  jb_component('pluralize', {\n  687  	type: 'data',\n  688: 	params: [\n  689  		{ id: 'count', as:'number', defaultValue: '%%' },\n  690  		{ id: 'zero', as:'string', dynamic:true },\n  ...\n  704  jb_component('runActions', {\n  705  	type: 'action',\n  706: 	params: [ \n  707  		{ id: 'actions', type:'action[]', ignore: true, composite: true, essential: true }\n  708  	],\n  ...\n  722  jb_component('runActionOnItems', {\n  723  	type: 'action',\n  724: 	params: [ \n  725  		{ id: 'items', type:'data[]', as:'array', essential: true},\n  726  		{ id: 'action', type:'action', ignore: true, essential: true }\n  ...\n  744  \n  745  jb_component('delay', {\n  746: 	params: [\n  747  		{ id: 'mSec', type: 'number', defaultValue: 1}\n  748  	],\n  749: 	impl: ctx => jb_delay(ctx.params.mSec)\n  750  })\n  751  \n  752  jb_component('extractPrefix',{\n  753  	type: 'data',\n  754: 	params: [\n  755  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  756  		{ id: 'text', as: 'string', defaultValue: '%%'},\n  ...\n  771  jb_component('extractSuffix',{\n  772  	type: 'data',\n  773: 	params: [\n  774  		{ id: 'separator', as: 'string', description: '/w- alphnumberic, /s- whitespace, ^- beginline, $-endline'},\n  775  		{ id: 'text', as: 'string', defaultValue: '%%'},\n  ...\n  790  jb_component('onNextTimer',{\n  791  	type: 'action',\n  792: 	params: [\n  793  		{ id: 'action', type: 'action', dynamic: true }\n  794  	],\n\nC:\\jbart5-ng\\src\\core\\core.js:\n   36          run.preparedParams.forEach(function(paramObj) {\n   37            switch (paramObj.type) {\n   38:             case 'function': run.ctx.params[paramObj.name] = paramObj.func; break;\n   39:             case 'array': run.ctx.params[paramObj.name] = \n   40                paramObj.array.map(function(prof,i) { return jb_run(jb_ctx(run.ctx,{profile: prof, path: paramObj.name+'~'+i}),paramObj.param); } ); break;  // maybe we should [].concat and handle nulls\n   41:             default: run.ctx.params[paramObj.name] = jb_run(paramObj.context, paramObj.param);\n   42            }\n   43          });\n   ..\n   66  \n   67    function prepareGCArgs(ctx,preparedParams) {\n   68:     return [ctx].concat(preparedParams.map(param=>ctx.params[param.name]))\n   69    }\n   70  }\n   71  \n   72  function jb_compParams(comp) {\n   73:   return Array.isArray(comp.params) ? comp.params : jb_entries(comp.params).map(x=>jb_extend(x[1],jb_obj('id',x[0])));\n   74  }\n   75  \n   ..\n  169    var ctx = new jbCtx(context,{});\n  170    ctx.parentParam = parentParam;\n  171:   ctx.params = {}; // TODO: try to delete this line\n  172    var preparedParams = jb_prepareParams(comp,profile,ctx);\n  173    if (typeof comp.impl === 'function') {\n  ...\n  189  function jb_var(context,varname) {\n  190    var res;\n  191:   if (context.componentContext && typeof context.componentContext.params[varname] != 'undefined') \n  192:     res = context.componentContext.params[varname];\n  193    else if (context.vars[varname] != null) \n  194      res = context.vars[varname];\n\nC:\\jbart5-ng\\src\\core\\pretty-print.js:\n   27      var comp_name = jb_compName(profile);\n   28      if (comp_name) { // tgp obj\n   29:       var params = jb_entries((jbart.comps[comp_name] || {}).params || {}).map(x=>x[0]);\n   30:       props.sort((p1,p2)=>params.indexOf(p1) - params.indexOf(p2));\n   31      }\n   32      if (props.indexOf('$') > 0) { // make the $ first\n\nC:\\jbart5-ng\\src\\core\\utils.js:\n   51    if (typeof context == 'undefined') {\n   52      this.vars = {};\n   53:     this.params = {};\n   54      this.resources = {}\n   55    }\n   ..\n   66      this.data= (typeof ctx2.data != 'undefined') ? ctx2.data : context.data;     // allow setting of data:null\n   67      this.vars= ctx2.vars ? jb_extend({},context.vars,ctx2.vars) : context.vars;\n   68:     this.params= ctx2.params || context.params;\n   69      this.resources= context.resources;\n   70      this.componentContext= (typeof ctx2.componentContext != 'undefined') ? ctx2.componentContext : context.componentContext;\n   ..\n  250    eventObject = eventObject || {};\n  251    eventObject.eventType = eventType;\n  252:   var params = [eventObject].concat(Array.prototype.slice.call(arguments,3));\n  253    \n  254    var listeners = object.$jbListeners[eventType];\n  255    for(var i=0;i<listeners.length;i++) {\n  256      try {\n  257:       listeners[i].handler.apply(object,params);\n  258      } catch(e) {\n  259        jb_logException(e,'error trigerring event ' + eventType);\n\nC:\\jbart5-ng\\src\\testing\\ui-testers-ctrls.ts:\n  104  jb.component('ui-tests.show-one-test', {\n  105  	type: 'control',\n  106: 	params: [\n  107  		{ id: 'testResult',as: 'single', defaultValue: '%%'},\n  108  	],\n\nC:\\jbart5-ng\\src\\testing\\ui-testers.ts:\n    3  jb.component('ng2-ui-test', {\n    4  	type: 'test',\n    5: 	params: [\n    6  		{ id: 'control', type: 'control', dynamic: true },\n    7  		{ id: 'expectedTemplateResult', type: 'boolean', dynamic: true, as: 'boolean' },\n    .\n   28  							resolve({ \n   29  								id: ctx.vars.testID,\n   30: 								success: ctx.params.expectedHtmlResult(ctx.setData(html))\n   31  							});\n   32  							if (!jbart.singleTestID)\n   ..\n   41  jb.component('data-test', {\n   42  	type: 'test',\n   43: 	params: [\n   44  		{ id: 'calculate', dynamic: true },\n   45  		{ id: 'runBefore', type: 'action', dynamic: true },\n\nC:\\Dropbox\\mega\\mega.js:\n   12  jb_component('mega.group', {\n   13    type: 'control', \n   14:   params: [\n   15       { id: 'items', as: 'array' }\n   16    ], \n\n506 matches across 73 files\n\n\nSearching 120 files for \"forceDefaultCreation\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\dialog.js:\n    6  		{ id: 'id', as: 'string' },\n    7  		{ id: 'style', type: 'dialog.style', dynamic: true, defaultValue: { $:'dialog.default' }	},\n    8: 		{ id: 'content', type: 'control', dynamic: true, defaultValue :{$: 'group'}, forceDefaultCreation: true },\n    9  		{ id: 'menu', type: 'control', dynamic: true },\n   10  		{ id: 'title', as: 'string', dynamic: true  },\n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n  325  				if (typeof p.defaultValue != 'object')\n  326  					result[p.id] = p.defaultValue\n  327: 				if (typeof p.defaultValue == 'object' && p.forceDefaultCreation)\n  328  					result[p.id] = JSON.parse(JSON.stringify(p.defaultValue));\n  329  			})\n\n2 matches across 2 files\n\n\nSearching 120 files for \"{$: 'layout.horizontal', spacing: 3 }\" (case sensitive)\n\nC:\\jbart5-ng\\projects\\material-demo\\material-demo.js:\n 1186        }\n 1187      ], \n 1188:     style :{$: 'layout.horizontal', spacing: 3 }\n 1189    }\n 1190  })\n\nC:\\jbart5-ng\\projects\\studio\\studio-jb-editor.ts:\n  110        }\n  111      ], \n  112:     style :{$: 'layout.horizontal', spacing: 3 }\n  113    }\n  114  })\n\nC:\\jbart5-ng\\projects\\studio\\studio-main.ts:\n   53                }, \n   54                {$: 'group', \n   55:                 style :{$: 'layout.horizontal', spacing: 3 }, \n   56                  controls: [\n   57                    {$: 'studio.main-menu' }, \n\nC:\\jbart5-ng\\projects\\studio\\studio-menu.ts:\n    5    type: 'control', \n    6    impl :{$: 'group', \n    7:     style :{$: 'layout.horizontal', spacing: 3 }, \n    8      controls: [\n    9        {$: 'pulldown.topMenuItem', \n\n4 matches across 4 files\n\n\nSearching 120 files for \"before\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\button.js:\n   15      if (context.params.$click) try { context.params.action() } catch (e) { jb.logException(e) } // for test debug\n   16      return jb_ui.ctrl(context).jbExtend({\n   17:       beforeInit: function(cmp) {\n   18          cmp.title = context.params.title();\n   19          cmp.clicked = jb_ui.wrapWithLauchingElement(context.params.action, context, cmp.elementRef);\n\nC:\\jbart5-ng\\src\\ui\\dialog.js:\n   27  				.setVars({ $dialog: dialog });\n   28  		dialog.comp = jb_ui.ctrl(ctx).jbExtend({\n   29: 			beforeInit: function(cmp) {\n   30  				cmp.title = ctx.params.title(ctx);\n   31  				cmp.dialog = dialog;\n   ..\n  172  	impl: function(context) { \n  173  		var dialog = context.vars.$dialog;\n  174: 		jb.delay(10).then(() =>  { // delay - close older before    		\n  175  			var clickoutEm = jb_rx.Observable.fromEvent(document, 'mousedown')\n  176  			      			.merge(jb_rx.Observable.fromEvent(\n  ...\n  190  		// 		dialog.close();\n  191  		// }\n  192: 		// jb.delay(10).then( function() { // delay - close older before\n  193  		// 	window.onmousedown = clickOutHandler;\n  194  		// 	if (jbart.previewWindow)\n\nC:\\jbart5-ng\\src\\ui\\editable-boolean.js:\n   17      var ctx2 = ctx.setVars({ field: jb_ui.twoWayBind(ctx.params.databind) });\n   18    	return jb_ui.ctrl(ctx2).jbExtend({\n   19:   		beforeInit: function(cmp) {\n   20          ctx2.vars.field.bindToCmp(cmp, ctx2);\n   21  \n\nC:\\jbart5-ng\\src\\ui\\features.js:\n   12    impl: function(context,waitFor,loading,error) { \n   13      return {\n   14:       beforeInit: function(cmp) {\n   15            var waiting = cmp.jbWait();\n   16            cmp.jbGroupChildrenEm = jb_rx.observableFromCtx(context.setData(waitFor))\n   ..\n   41    impl: function(context, data, itemVariable,watch) {\n   42      return {\n   43:       beforeInit: function(cmp) {\n   44            var dataEm = cmp.jbEmitter\n   45                .filter(x => x == 'check')\n   ..\n   65    ],\n   66    impl: (context, data) => ({\n   67:       beforeInit: function(cmp) {\n   68            cmp.jbWatchGroupChildrenEm = (cmp.jbWatchGroupChildrenEm || jb_rx.Observable.of())\n   69                .merge(cmp.jbEmitter\n\nC:\\jbart5-ng\\src\\ui\\group.js:\n   13    impl: function(context) { \n   14      return jb_ui.ctrl(context).jbExtend({\n   15:       beforeInit(cmp) {\n   16          cmp.ctrls = [];\n   17          cmp.jbToExtend = cmp.jbToExtend || {};\n\nC:\\jbart5-ng\\src\\ui\\itemlist-with-groups.js:\n   50    impl: function(context, items, itemsArrayVariable,watch,groupBy) {\n   51      return {\n   52:       beforeInit: function(cmp) {\n   53            var itemsEm = cmp.jbEmitter\n   54                .filter(x => x == 'check')\n   ..\n   56                  items(cmp.ctx))\n   57                .filter(items=> \n   58:                 !jb_compareArrays(items,cmp.original_items)) // compare before injecting headings\n   59                .do(items => \n   60                  cmp.original_items = items)\n   ..\n   99        })\n  100        var groups_ar = jb.entries(groups).map(x=>x[0]);\n  101:       groups_ar.sort(); // lexical sort before to ensure constant order\n  102        groups_ar.sort((x1,x2) => promoteGroups.indexOf(x1) - promoteGroups.indexOf(x2));\n  103  \n\nC:\\jbart5-ng\\src\\ui\\itemlist.js:\n   36    impl: function(context, items, itemsArrayVariable,watch) {\n   37      return {\n   38:       beforeInit: function(cmp) {\n   39            var itemsEm = cmp.jbEmitter\n   40                .filter(x => x == 'check')\n\nC:\\jbart5-ng\\src\\ui\\itemlog.js:\n   16  	impl: function(context) {\n   17      return jb_ui.ctrl(context).jbExtend({\n   18:         beforeInit(cmp) {\n   19            cmp.items = [];\n   20            cmp.itemToComp = item => \n\nC:\\jbart5-ng\\src\\ui\\jb-ui.ts:\n  179      		debugger;\n  180      	jbTemplate(options);\n  181: 		if (options.beforeInit) this.methodHandler.jbBeforeInitFuncs.push(options.beforeInit);\n  182  		if (options.init) this.methodHandler.jbInitFuncs.push(options.init);\n  183  		if (options.afterViewInit) this.methodHandler.jbAfterViewInitFuncs.push(options.afterViewInit);\n\nC:\\jbart5-ng\\src\\ui\\picklist.js:\n   16      ctx = ctx.setVars({ field: jb_ui.twoWayBind(ctx.params.databind) });\n   17      return jb_ui.ctrl(ctx).jbExtend({\n   18:       beforeInit: function(cmp) {\n   19          ctx.vars.field.bindToCmp(cmp, ctx);\n   20  \n\nC:\\jbart5-ng\\src\\ui\\pulldown-menu.js:\n   30  	    if (context.params.$click) try { context.params.action() } catch (e) { jb.logException(e) } // for test debug\n   31  	    return jb_ui.ctrl(context).jbExtend({\n   32: 	      beforeInit: function(cmp) {\n   33  	        cmp.title = title();\n   34  	        cmp.icon = icon;\n\nC:\\jbart5-ng\\src\\ui\\tabs.js:\n   10    impl: function(context) { \n   11      return jb_ui.ctrl(context).jbExtend({\n   12:       beforeInit(cmp) {\n   13        	cmp.empty = jb_ui.Comp({ template: '<div></div>'},context);\n   14        	cmp.selectedTab = 0;\n\nC:\\jbart5-ng\\src\\ui\\tree\\tree.ts:\n   36  		return jb_ui.ctrl(ctx).jbExtend({\n   37  			host: { 'class': 'jb-tree' }, // define host element to keep the wrapper\n   38: 			beforeInit: function(cmp) {\n   39  				cmp.tree = jb.extend(tree,{\n   40  					expanded: jb.obj(tree.nodeModel.rootPath, true),\n\nC:\\jbart5-ng\\projects\\material-demo\\docs.css:\n   15  }\n   16  \n   17: hljs:before {\n   18    content: attr(lang);\n   19    display: block;\n   ..\n   25  }\n   26  \n   27: hljs.no-header:before {\n   28    display: none;\n   29  }\n   ..\n  958    font-size: 2.0rem;\n  959    margin: 0;\n  960:   -webkit-margin-before: 0;\n  961    -webkit-margin-after: 0;\n  962  }\n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n   78  			if (_ref.$jb_val() == value) return;\n   79  			var comp = path.split('~')[0];\n   80: 			var before = compAsStr(comp);\n   81  			_ref.$jb_val(value);\n   82: 			notifyModification(path,before,ctx);\n   83  		}\n   84  	}\n\nC:\\jbart5-ng\\projects\\studio\\studio-properties.ts:\n  510    		// saving state on focus and setting the change on blur\n  511    		init: cmp => {\n  512:   			var before = compAsStrFromPath(path);\n  513    			if (cmp.codeMirror) {\n  514    				cmp.codeMirror.on('focus',()=>\n  515:   					before = compAsStrFromPath(path)\n  516    				);\n  517    				cmp.codeMirror.on('blur',()=>{\n  518:   					if (before != compAsStrFromPath(path))\n  519: 						notifyModification(path,before,ctx)\n  520    				});\n  521    			} else {\n  522    			$(cmp.elementRef.nativeElement).findIncludeSelf('input')\n  523    				.focus(e=> {\n  524:   					before = compAsStrFromPath(path)\n  525    				})\n  526    				.blur(e=> {\n  527:   					if (before != compAsStrFromPath(path))\n  528: 						notifyModification(path,before,ctx)\n  529    				})\n  530    			}\n\nC:\\jbart5-ng\\projects\\studio\\studio-save.ts:\n    8  	var comp = e.comp;\n    9  	if (!modified[comp])\n   10: 		modified[comp] = { original : e.before || '' }\n   11  })\n   12  \n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n  198  	modify(op,path,args,ctx) {\n  199  		var comp = path.split('~')[0];\n  200: 		var before = getComp(comp) && compAsStr(comp);\n  201  		op.call(this,path,args);\n  202  		modifyOperationsEm.next({ \n  203  			comp: comp, \n  204: 			before: before, \n  205  			after: compAsStr(comp), \n  206  			path: path, \n  ...\n  208  			ctx: ctx, \n  209  			jbart: findjBartToLook(path),\n  210: 			newComp: before ? false: true\n  211  		});\n  212  	}\n\nC:\\jbart5-ng\\projects\\studio\\studio-undo.ts:\n   17  			this.index--;\n   18  			var change = this.history[this.index];\n   19: 			setComp(change.before,change.jbart);\n   20  			jb_ui.apply(ctx);\n   21  		}\n\nC:\\jbart5-ng\\projects\\studio\\studio-utils.ts:\n   30  ,30);\n   31  \n   32: export function notifyModification(path,before,ctx) {\n   33  	var comp = path.split('~')[0];\n   34: 	modifyOperationsEm.next({ comp: comp, before: before, after: compAsStr(comp), path: path, ctx: ctx, jbart: findjBartToLook(path) });\n   35  }\n   36  \n\n41 matches across 20 files\n\n\nSearching 120 files for \"tree.drag-and-drop\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\tree\\tree.ts:\n  286  \n  287  \n  288: jb.component('tree.drag-and-drop', {\n  289    type: 'feature',\n  290    params: [\n\nC:\\jbart5-ng\\projects\\studio\\studio-jb-editor.ts:\n   52              autoFocus: true\n   53            }, \n   54:           {$: 'tree.drag-and-drop' }, \n   55            {$: 'tree.keyboard-shortcut', \n   56              key: 'Ctrl+Up', \n\nC:\\jbart5-ng\\projects\\studio\\studio-tree.ts:\n  116  			},\n  117  			{ $: 'tree.keyboard-selection', onEnter :{$: 'studio.open-properties'} }, \n  118: 			{ $: 'tree.drag-and-drop' },\n  119  			{ $: 'tree.keyboard-shortcut', key: 'Ctrl+C', action :{$: 'studio.copy', path: '%%' } },\n  120  			{ $: 'tree.keyboard-shortcut', key: 'Ctrl+V', action :{$: 'studio.paste', path: '%%' } },\n\nC:\\jbart5-ng\\projects\\ui-tests\\ui-tests-old.js:\n  352      features: [\n  353          { $: 'tree.selection' },\n  354:         { $: 'tree.drag-and-drop'},\n  355          { $: 'tree.keyboard-selection'} \n  356      ] \n\nC:\\jbart5-ng\\projects\\ui-tests\\ui-tests.ts:\n  245      features: [\n  246          { $: 'tree.selection' },\n  247:         { $: 'tree.drag-and-drop'},\n  248          { $: 'tree.keyboard-selection'} \n  249      ] \n\n5 matches across 5 files\n\n\nSearching 120 files for \"'editable-text'\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\editable-text.js:\n    3  jb.type('editable-text.style');\n    4  \n    5: jb.component('editable-text',{\n    6    type: 'control',\n    7    params: [\n\nC:\\jbart5-ng\\projects\\jbart-site\\jbart-site.ts:\n  174          ]\n  175        }, \n  176:       {$: 'editable-text', \n  177          style :{$: 'editable-text.md-input' }\n  178        }\n\nC:\\jbart5-ng\\projects\\material-demo\\material-demo.js:\n   22              style :{$: 'group.section' }, \n   23              controls: [\n   24:               {$: 'editable-text', \n   25                  databind: '%company%', \n   26                  title: 'Company (disabled)'\n   ..\n   30                  style :{$: 'layout.horizontal', spacing: '' }, \n   31                  controls: [\n   32:                   {$: 'editable-text', \n   33                      databind: '%firstName% %', \n   34                      title: 'First Name'\n   35                    }, \n   36:                   {$: 'editable-text', \n   37                      databind: '%lastName%', \n   38                      title: 'Long Last Name That Will Be Truncated'\n   ..\n   44                  style :{$: 'layout.vertical' }, \n   45                  controls: [\n   46:                   {$: 'editable-text', databind: '%address%', title: 'Address' }, \n   47:                   {$: 'editable-text', \n   48                      databind: '%address2%', \n   49                      title: 'Address2'\n   ..\n   55                  style :{$: 'layout.horizontal' }, \n   56                  controls: [\n   57:                   {$: 'editable-text', \n   58                      databind: '%city%', \n   59                      title: 'City', \n   60                      style :{$: 'editable-text.md-input', width: '122' }\n   61                    }, \n   62:                   {$: 'editable-text', databind: '%state%', title: 'State' }, \n   63:                   {$: 'editable-text', \n   64                      databind: '%postalCode%', \n   65                      title: 'Postal Code'\n   ..\n 1063      title: 'buttons', \n 1064      controls: [\n 1065:       {$: 'editable-text', \n 1066          style :{$: 'editable-text.codemirror', \n 1067            debounceTime: '100', \n ....\n 1097      title: 'buttons', \n 1098      controls: [\n 1099:       {$: 'editable-text', \n 1100          style :{$: 'editable-text.codemirror', \n 1101            debounceTime: '100', \n\nC:\\jbart5-ng\\projects\\studio\\studio-edit-source.ts:\n   13  		style :{$: 'dialog.studio-floating', id: 'edit source', width: 600 },\n   14  		features :{$: 'css', css: '.jb-dialog-content-parent {overflow-y: hidden}'},\n   15: 		content :{$: 'editable-text', \n   16  			databind :{$: 'studio.profile-as-text', path: '%$path%' },\n   17  			style :{$: 'editable-text.codemirror', mode: 'javascript'},\n\nC:\\jbart5-ng\\projects\\studio\\studio-jb-editor.ts:\n  162    type: 'control',\n  163    params: [ {id: 'path', as: 'string' } ],\n  164:   impl :{$: 'editable-text', \n  165        databind :{$: 'studio.profile-value-as-text', path: '%$path%' }, \n  166        features: [\n  ...\n  311            content :{$: 'group', \n  312              controls: [\n  313:               {$: 'editable-text', \n  314                  style :{$: 'editable-text.md-input' }, \n  315                  title: 'name', \n\nC:\\jbart5-ng\\projects\\studio\\studio-new-control.ts:\n   11      content :{$: 'group', \n   12        controls: [\n   13:         {$: 'editable-text', \n   14            databind: '%$globals/ctrl_pattern%', \n   15            style :{$: 'editable-text.md-input' }, \n   ..\n  101      content :{$: 'group', \n  102        controls: [\n  103:         {$: 'editable-text', \n  104            databind: '%$dialogData/name%', \n  105            features :{$: 'onEnter', \n\nC:\\jbart5-ng\\projects\\studio\\studio-open-project.ts:\n   27      title: 'itemlist-with-find', \n   28      controls: [\n   29:       {$: 'editable-text', \n   30          databind: '%$globals/project_pattern%', \n   31          title: 'search', \n\nC:\\jbart5-ng\\projects\\studio\\studio-popups.ts:\n   11  		$: 'openDialog',\n   12  		style :{$: 'dialog.studio-multiline-edit' },\n   13: 		content :{$: 'editable-text', \n   14  			databind :{$: 'studio.ref', path: '%$path%' },\n   15  			style :{$: 'editable-text.codemirror', \n\nC:\\jbart5-ng\\projects\\studio\\studio-properties.ts:\n  167      { id: 'path', as: 'string' }\n  168    ], \n  169:   impl :{$: 'editable-text', \n  170      style :{$: 'editable-text.studio-primitive-text' }, \n  171      title :{$: 'studio.prop-name', path: '%$path%' }, \n\nC:\\jbart5-ng\\projects\\studio\\studio-style-editor.ts:\n   69      style :{$: 'property-sheet.titles-above' }, \n   70      controls: [\n   71:       {$: 'editable-text', \n   72          title: 'css', \n   73          databind :{$: 'studio.profile-as-text',  path: '%$styleSource/path%~css', stringOnly: true }, \n   ..\n   75          style :{$: 'editable-text.codemirror', mode: 'css', height: 300 }\n   76        }, \n   77:       {$: 'editable-text', \n   78          title: 'template', \n   79          databind :{$: 'studio.profile-as-text',  path: '%$styleSource/path%~template', stringOnly: true }, \n   ..\n  117        features :{$: 'dialogFeature.autoFocusOnFirstInput' }\n  118      }, \n  119:     content :{$: 'editable-text', \n  120        databind: '%$dialogData/name%',\n  121        features :{$: 'feature.onEnter', action :{$: 'closeContainingPopup'} }\n\nC:\\jbart5-ng\\projects\\studio\\studio-tests.ts:\n   17  'studio-codemirror' :{$: 'studio-test', \n   18    page: 'main',\n   19: 	control :{$: 'editable-text', \n   20        databind: {$: 'studio.profile-as-text'}, \n   21  			style: { $: 'editable-text.codemirror' }\n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n  153  			image: 'insert_photo',\n  154  			'custom-control': 'build',\n  155: 			'editable-text': 'data_usage',\n  156  			'editable-boolean': 'radio_button',\n  157  			'editable-number': 'donut_large',\n\nC:\\jbart5-ng\\projects\\studio-helper\\studio-helper.ts:\n  171    impl :{$: 'group', \n  172      controls: [\n  173:       {$: 'editable-text', \n  174          title: 'aaa', \n  175          databind: '%$group-with-custom-style/title%', \n  ...\n  178        {$: 'tabs', \n  179          tabs: [\n  180:           {$: 'editable-text', \n  181              title: 'css', \n  182              databind: '%$group-with-custom-style/style/css%', \n  ...\n  184              features :{$: 'css', css: '{ width: 700px }' }\n  185            }, \n  186:           {$: 'editable-text', \n  187              title: 'template', \n  188              databind: '%$group-with-custom-style/style/template%', \n  ...\n  254      title: 'itemlist-with-find', \n  255      controls: [\n  256:       {$: 'editable-text', \n  257          databind: '%$globals/project_pattern%', \n  258          style :{$: 'editable-text.md-input' }, \n  ...\n  309            content :{$: 'group', \n  310              controls: [\n  311:               {$: 'editable-text', \n  312                  style :{$: 'editable-text.md-input', width: '230' }, \n  313                  features :{$: 'css.margin', top: '19', left: '23' }, \n  ...\n  334      title: 'itemlist-with-find', \n  335      controls: [\n  336:       {$: 'editable-text', \n  337          databind: '%$globals/ctrl_pattern%', \n  338          title: 'search', \n\nC:\\jbart5-ng\\projects\\ui-tests\\md-tests.ts:\n   24    type: 'test',\n   25    impl :{$: 'ng2-ui-test',  \n   26:     control :{ $: 'editable-text', \n   27        title: 'name', \n   28        databind: '%$person/name%', \n   ..\n   52          {$: 'group',\n   53                controls: [\n   54:                 { $: 'editable-text', title: 'name', databind: '%$person/name%', style :{$: 'editable-text.md-input'} },\n   55:                 { $: 'editable-text', title: 'name', databind: '%$person/name%', style :{$: 'editable-text.md-input'} },\n   56                ]\n   57          },\n\nC:\\jbart5-ng\\projects\\ui-tests\\ui-tests-old.js:\n   76  \n   77    'md-input' :{$: 'ng2-ui-test',  \n   78:     control :{ $: 'editable-text', \n   79        title: 'name', \n   80        databind: '%$person/name%', \n   ..\n  108          {$: 'group',\n  109                controls: [\n  110:                 { $: 'editable-text', title: 'name', databind: '%$person/name%', style :{$: 'editable-text.md-input'} },\n  111:                 { $: 'editable-text', title: 'name', databind: '%$person/name%', style :{$: 'editable-text.md-input'} },\n  112                ]\n  113          },\n  ...\n  446        style :{$: 'layout.horizontal' },\n  447        controls: [\n  448:         { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  449:         { $: 'editable-text', title: 'address', databind: '%$person/address%' },\n  450        ],\n  451    },\n  ...\n  453  },\n  454  \n  455: 'editable-text' :{$: 'ng2-ui-test',  \n  456:     control :{$: 'editable-text', \n  457        title: 'name', \n  458        databind: '%$person/name%' \n  ...\n  464    control :{$: 'group',\n  465          controls: [\n  466:           { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  467:           { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  468            { $: 'label', title: '%$person/name%' }\n  469          ]\n  ...\n  485        },\n  486        controls: [\n  487:           { $: 'editable-text', title: 'name', databind: '%$a1%' },\n  488:           { $: 'editable-text', title: 'name', databind: '%$a1%' },\n  489            { $: 'picklist', title: 'name', databind: '%$a1%', \n  490              options :{$: 'picklist.optionsByComma', \n  ...\n  502            style :{$: 'property-sheet.growing'},\n  503            controls: [\n  504:               { $: 'editable-text', \n  505                  title: 'name', \n  506                  databind: '%$person/name%',\n  ...\n  512                  }\n  513                },\n  514:               { $: 'editable-text', title: 'age', databind: '%$person/age%' },\n  515            ]\n  516    },\n  ...\n  522            style :{$: 'property-sheet.style-on-focus'},\n  523            controls: [\n  524:               { $: 'editable-text', \n  525                  title: 'name', \n  526                  databind: '%$person/name%',\n  ...\n  537                  ]\n  538                },\n  539:               { $: 'editable-text', title: 'age', databind: '%$person/age%' },\n  540            ]\n  541    },\n  ...\n  550              style :{$: 'property-sheet.titles-above-float-left' },\n  551              controls: [\n  552:               { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  553:               { $: 'editable-text', title: 'address', databind: '%$person/address%' },\n  554              ]\n  555        },\n  ...\n  566              style :{$: 'property-sheet.titles-left' },\n  567              controls: [\n  568:               { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  569:               { $: 'editable-text', title: 'address', databind: '%$person/address%' },\n  570              ]\n  571        },\n  ...\n  663      controls: \n  664      [\n  665:       { $: 'editable-text', \n  666            databind: '%$js/text%',\n  667            style :{$: 'editable-text.codemirror', mode: 'javascript'}\n  668        },\n  669:       { $: 'editable-text', \n  670            databind: '%$css/text%',\n  671            style :{$: 'editable-text.codemirror', mode: 'css'}\n  672        },\n  673:       { $: 'editable-text', \n  674            databind: '%$html/text%',\n  675            style :{$: 'editable-text.codemirror', mode: 'htmlmixed'}\n  ...\n  762        controls :{$: 'dynamic-controls', \n  763            controlItems: {$list: ['name','age']},\n  764:           genericControl: { $: 'editable-text', databind: '%$person/{%$controlItem%}%', title: '%$controlItem%' }\n  765        }\n  766    },\n\nC:\\jbart5-ng\\projects\\ui-tests\\ui-tests.ts:\n  353        style :{$: 'layout.horizontal' },\n  354        controls: [\n  355:         { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  356:         { $: 'editable-text', title: 'address', databind: '%$person/address%' },\n  357        ],\n  358    },\n  ...\n  363  jb.component('ui-test.editable-text', {\n  364    impl :{$: 'ng2-ui-test',  \n  365:     control :{$: 'editable-text', \n  366        title: 'name', \n  367        databind: '%$person/name%' \n  ...\n  375    control :{$: 'group',\n  376          controls: [\n  377:           { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  378:           { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  379            { $: 'label', title: '%$person/name%' }\n  380          ]\n  ...\n  398        },\n  399        controls: [\n  400:           { $: 'editable-text', title: 'name', databind: '%$a1%' },\n  401:           { $: 'editable-text', title: 'name', databind: '%$a1%' },\n  402            { $: 'picklist', title: 'name', databind: '%$a1%', \n  403              options :{$: 'picklist.optionsByComma', \n  ...\n  417            style :{$: 'property-sheet.growing'},\n  418            controls: [\n  419:               { $: 'editable-text', \n  420                  title: 'name', \n  421                  databind: '%$person/name%',\n  ...\n  427                  }\n  428                },\n  429:               { $: 'editable-text', title: 'age', databind: '%$person/age%' },\n  430            ]\n  431    },\n  ...\n  439            style :{$: 'property-sheet.style-on-focus'},\n  440            controls: [\n  441:               { $: 'editable-text', \n  442                  title: 'name', \n  443                  databind: '%$person/name%',\n  ...\n  454                  ]\n  455                },\n  456:               { $: 'editable-text', title: 'age', databind: '%$person/age%' },\n  457            ]\n  458    },\n  ...\n  469              style :{$: 'property-sheet.titles-above-float-left' },\n  470              controls: [\n  471:               { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  472:               { $: 'editable-text', title: 'address', databind: '%$person/address%' },\n  473              ]\n  474        },\n  ...\n  487              style :{$: 'property-sheet.titles-left' },\n  488              controls: [\n  489:               { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  490:               { $: 'editable-text', title: 'address', databind: '%$person/address%' },\n  491              ]\n  492        },\n  ...\n  594      controls: \n  595      [\n  596:       { $: 'editable-text', \n  597            databind: '%$js/text%',\n  598            style :{$: 'editable-text.codemirror', mode: 'javascript'}\n  599        },\n  600:       { $: 'editable-text', \n  601            databind: '%$css/text%',\n  602            style :{$: 'editable-text.codemirror', mode: 'css'}\n  603        },\n  604:       { $: 'editable-text', \n  605            databind: '%$html/text%',\n  606            style :{$: 'editable-text.codemirror', mode: 'htmlmixed'}\n  ...\n  705        controls :{$: 'dynamic-controls', \n  706            controlItems: {$list: ['name','age']},\n  707:           genericControl: { $: 'editable-text', databind: '%$person/{%$controlItem%}%', title: '%$controlItem%' }\n  708        }\n  709    },\n\nC:\\Dropbox\\mega\\mega.js:\n   30            }, \n   31            controls: [\n   32:             {$: 'editable-text', \n   33                style :{$: 'editable-text.input' }, \n   34                features :{$: 'group-item.if', \n\n77 matches across 17 files\n\n\nSearching 120 files for \"function sortedPropertyNames(obj)\" (case sensitive)\n\nC:\\jbart5-ng\\src\\core\\pretty-print.js:\n   22    return { result : result, positions : positions }\n   23  \n   24:   function sortedPropertyNames(obj) {\n   25      var props = jb_entries(obj).map(x=>x[0]) // try to keep the order\n   26        .filter(p=>p.indexOf('$jb') != 0)\n\n1 match in 1 file\n\n\nSearching 120 files for \"[1]\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\editable-number.ts:\n   53      var parts = (''+dataString).match(/([^0-9\\.\\-]*)([0-9\\.\\-]+)([^0-9\\.\\-]*)/); // prefix-number-suffix\n   54      if ((!this.symbol) && parts)\n   55:       this.symbol = parts[1] || parts[3] || this.symbol;\n   56      return (parts && parts[2]) || '';\n   57    }\n\nC:\\jbart5-ng\\src\\ui\\features.js:\n  231                  if (key == 'Delete') keyCode = 46;\n  232  \n  233:                 var helper = (key.match('([A-Za-z]*)+') || ['',''])[1];\n  234                  if (helper == 'Ctrl' && !event.ctrlKey) return\n  235                  if (helper == 'Alt' && !event.altKey) return\n\nC:\\jbart5-ng\\src\\ui\\jb-ui-utils.ts:\n  111  export function urlParam(param) {\n  112  	var _wnd = window.parent ? window.parent : window;\n  113: 	var out = (RegExp(param + '=' + '(.+?)(&|$)').exec(_wnd.location.search) || [, null])[1];\n  114  	return (out && decodeURIComponent(out)) || '';\n  115  }\n\nC:\\jbart5-ng\\src\\ui\\jb-ui.ts:\n   31      var _win = jbart.previewWindow || window;\n   32      jb.delay(1).then(()=>\n   33: 		jb.entries(_win.jbart.zones).forEach(x=>x[1].run(()=>{}))\n   34  	)\n   35  }\n   ..\n  199      		.filter(x=>x.match(/^{([^]*)}$/m))\n  200      		.forEach(x=>\n  201:     			jb.path(options,['atts','style'],x.match(/^{([^]*)}$/m)[1]));\n  202  \n  203      	(options.styles || [])\n\nC:\\jbart5-ng\\src\\ui\\ui-common.js:\n   80  	impl: (ctx,module,_class) => {\n   81  		try {\n   82: 			return new (jb.entries(System._loader.modules).filter(p=>p[0].indexOf(module) != -1)[0][1].module[_class])()\n   83  		} catch (e) {\n   84  			return;\n\nC:\\jbart5-ng\\src\\ui\\styles\\layout-styles.ts:\n   50      //         ['flex-wrap', params.wrap ? 'wrap' : ''], \n   51      //       ].filter(x\n   52:     //         =>x[1] != '')\n   53:     //       .map(x=> `${x[0]}: ${x[1]}` )\n   54      //       .join('; ')\n   55      //    }\n\nC:\\jbart5-ng\\src\\ui\\tree\\tree.ts:\n  275  	              if (key.match(/\\+Down$/)) keyCode = 40;\n  276  \n  277: 	              var helper = (key.match('([A-Za-z]*)+') || ['',''])[1];\n  278  	              if (helper == 'Ctrl' && !event.ctrlKey) return\n  279  	              if (helper == 'Alt' && !event.altKey) return\n\nC:\\jbart5-ng\\jbart-studio.js:\n   26     try {\n   27      var url_parts = req.url.split('#')[0].split('?');\n   28:     var path = url_parts[0].substring(1); //, query= url_parts[1] && url_parts[1].split('#')[0];\n   29  //    console.log(req.url,path);\n   30      var base = path.split('/')[0] || '';\n   ..\n   66  function serveFile(req,res,path) {\n   67    var project = path.match(/^projects\\/([^/]*)(.*)/);\n   68:   if (project && external_projects[project[1]])\n   69:     var full_path = settings.http_dir + external_projects[project[1]] + '/' + project[1] + project[2];\n   70    else\n   71      var full_path = settings.http_dir + path;\n   ..\n  317  function getURLParam(req,name) {\n  318    try {\n  319:     return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(req.url)||[,\"\"])[1].replace(/\\+/g, '%20'))||null;\n  320    } catch(e) {}\n  321  }\n\nC:\\jbart5-ng\\projects\\studio\\studio-main.ts:\n  181  // 		for(var i in jbart.previewjbart.comps)\n  182  // 			if (i.indexOf(projectName+'.') == 0 && jbart.previewjbart.comps[i].type == 'control')\n  183: // 				out.push(i.split(projectName+'.')[1]);\n  184  \n  185  // 		return out;\n  ...\n  226  								//console.log('studio.all stable');\n  227  								// refresh preview\n  228: 								jb.entries(w.jbart.zones).forEach(x=>x[1].run(()=>{}));\n  229  								//w.setTimeout(()=>{},1); \n  230  							});\n\nC:\\jbart5-ng\\projects\\studio\\studio-save.ts:\n   19  	impl :{$rxLog : [\n   20  			ctx => jb.entries(modified).map(x=>\n   21: 				({key:x[0],val:x[1]})),\n   22  			ctx => {\n   23  				var comp = ctx.data.key;\n\nC:\\jbart5-ng\\projects\\studio\\studio-suggestions.ts:\n   15      this.text_with_open_close = this.text.replace(/%([^%;{}\\s><\"']*)%/g, (match,contents) =>\n   16        '{' + contents + '}');\n   17:     this.exp = rev((rev(this.text_with_open_close).match(/([^\\}%]*%)/) || ['',''])[1]);\n   18:     this.exp = this.exp || rev((rev(this.text_with_open_close).match(/([^\\}=]*=)/) || ['',''])[1]);\n   19:     this.tail = rev((rev(this.exp).match(/([^%.\\/=]*)(\\/|\\.|%|=)/)||['',''])[1]);\n   20      this.tailSymbol = this.text_with_open_close.slice(-1-this.tail.length).slice(0,1); // % or /\n   21      if (this.tailSymbol == '%' && this.exp.slice(0,2) == '%$')\n   ..\n   40      probeCtx = probeCtx || (jbart.previewjbart || jbart).initialCtx;\n   41      var vars = jb.entries(jb.extend({},(probeCtx.componentContext||{}).params,probeCtx.vars,probeCtx.resources))\n   42:           .map(x=>({toPaste: '$' + x[0], value: x[1]}))\n   43  \n   44      if (this.inputVal.indexOf('=') == 0)\n   ..\n   57          .map(x=>\n   58            jb.entries(x).map(x=>\n   59:             ({toPaste: x[0], value: x[1]}))))\n   60          .concat(vars)\n   61      else if (this.tailSymbol == '%$') \n   ..\n   64        this.options = [].concat.apply([],\n   65          jb.toarray(probeCtx.exp(this.base))\n   66:           .map(x=>jb.entries(x).map(x=>({toPaste: x[0], value: x[1]}))) )\n   67  \n   68      this.options = this.options\n\nC:\\jbart5-ng\\projects\\studio\\studio-testers.ts:\n   99          .map(e=>({\n  100            prop: e[0],\n  101:           res: findProbeProfile(e[1])\n  102          }))\n  103          .map(e=>\n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n  413  		var types = [].concat.apply([],(type||'').split(',')\n  414  			.map(x=>\n  415: 				x.match(/([^\\[\\]*)([])?/)[1])\n  416  			.map(x=> \n  417  				x=='data' ? ['data','aggregator'] : [x]));\n  418  		var comp_arr = types.map(t=>jb_entries((jbartToLook || jbart_base()).comps)\n  419  			.filter(c=>\n  420: 				(c[1].type||'data').split(',').indexOf(t) != -1\n  421: 				|| (c[1].typePattern && t.match(c[1].typePattern.match))\n  422  			)\n  423  			.map(c=>c[0]));\n\nC:\\jbart5-ng\\projects\\studio-helper\\studio-tree-tests.ts:\n   47  		path: 'studio-tree-test.actions-sugar-example1~action', \n   48  		childrenType: 'jb-editor',\n   49: 		expectedResult :{ $and: [{$: 'contains', text: ['action[0]','action[1]'] }, { $not: { $contains: 'actions'}}]}\n   50  	}\n   51  })\n   ..\n   63  		path: 'studio-tree-test.actions-sugar-example2~action~$runActions', \n   64  		childrenType: 'jb-editor',\n   65: 		expectedResult :{ $and: [{$: 'contains', text: ['runActions[0]','runActions[1]'] }, { $not: { $contains: 'actions'}}]}\n   66  	}\n   67  })\n\nC:\\jbart5-ng\\src\\core\\components.js:\n  489  		switch (part) {\n  490  			case 'first': return out[0];\n  491: 			case 'second': return out[1];\n  492  			case 'last': return out.pop();\n  493  			case 'but first': return out.slice(1);\n\nC:\\jbart5-ng\\src\\core\\core.js:\n   21        case 'expressionRef': return jb_expression(profile, context,parentParam);\n   22        case 'asIs': return profile;\n   23:       case 'object': return jb_entriesToObject(jb_entries(profile).map(e=>[e[0],context.runInner(e[1],null,e[0])]));\n   24        case 'function': return jb_tojstype(profile(context),jstype, context);\n   25        case 'null': return jb_tojstype(null,jstype, context);\n   ..\n   71  \n   72  function jb_compParams(comp) {\n   73:   return Array.isArray(comp.params) ? comp.params : jb_entries(comp.params).map(x=>jb_extend(x[1],jb_obj('id',x[0])));\n   74  }\n   75  \n   ..\n   83        if (!val && index == 0 && jb_sugarProp(profile)) {\n   84          path = jb_sugarProp(profile)[0];\n   85:         val = jb_sugarProp(profile)[1]; \n   86        }\n   87        var valOrDefault = (typeof(val) != \"undefined\") ? val : (typeof(param.defaultValue) != 'undefined') ? param.defaultValue : null;\n   ..\n  206    if (expression.indexOf('$debugger:') == 0) {\n  207      debugger;\n  208:     expression = expression.split('$debugger:')[1];\n  209    }\n  210    if (expression.indexOf('$log:') == 0) {\n  211:     var out = jb_expression(expression.split('$log:')[1],context,parentParam);\n  212      jbart.comps.log.impl(context, out);\n  213      return out;\n  ...\n  238      // check variable value - if not empty return all expression, otherwise empty\n  239      var match = expression.match(/%([^%;{}\\s><\"']*)%/);\n  240:     if (match && jb_tostring(expPart(match[1],context,'string')))\n  241        return jb_expression(expression, context, { as: 'string' });\n  242      else\n  ...\n  264    if (expressionPart.indexOf('=') == 0) { // function\n  265      var parsed = expressionPart.match(/=([a-zA-Z]*)\\(?([^)]*)\\)?/);\n  266:     var funcName = parsed && parsed[1];\n  267      if (funcName && jbart.functions[funcName])\n  268        return jb_tojstype(jbart.functions[funcName](context,parsed[2]),jstype,context);\n  ...\n  275      var part = parts[i], index, match;\n  276      if ((match = part.match(/(.*)\\[([0-9]+)\\]/)) != null) { // x[y]\n  277:       part = match[1];\n  278        index = Number(match[2]);\n  279      }\n  ...\n  302    if (expression.indexOf('$debugger:') == 0) {\n  303      debugger;\n  304:     expression = expression.split('$debugger:')[1];\n  305    }\n  306    if (expression.indexOf('$log:') == 0) {\n  307:     var calculated = jb_expression(expression.split('$log:')[1],context,{as: 'string'});\n  308:     var result = jb_bool_expression(expression.split('$log:')[1], context);\n  309      jbart.comps.log.impl(context, calculated + ':' + result);\n  310      return result;\n  ...\n  322  \n  323    if (op == '==' || op == '!=' || op == '$=' || op == '^=') {\n  324:     var p1 = jb_expression(trim(parts[1]), context, {as: 'string'});\n  325      var p2 = jb_expression(trim(parts[3]), context, {as: 'string'});\n  326:     p2 = (p2.match(/^[\"'](.*)[\"']/) || [,p2])[1]; // remove quotes\n  327      if (op == '==') return p1 == p2;\n  328      if (op == '!=') return p1 != p2;\n  ...\n  331    }\n  332  \n  333:   var p1 = jb_tojstype(jb_expression(parts[1].trim(), context), {as:'number'});\n  334    var p2 = jb_tojstype(jb_expression(parts[3].trim(), context), {as:'number'});\n  335  \n\nC:\\jbart5-ng\\src\\core\\pretty-print.js:\n   45      if (typeof val === 'object') return printObj(val,path);\n   46      if (typeof val === 'string' && val.indexOf('$jbProbe:') == 0)\n   47:       val = val.split('$jbProbe:')[1];\n   48      if (typeof val === 'function')\n   49        result += val.toString();\n\nC:\\jbart5-ng\\src\\core\\utils.js:\n  334  function jb_entriesToObject(entries) {\n  335    var ret = {};\n  336:   entries.map(e=>ret[e[0]]=e[1]);\n  337    return ret;\n  338  }\n\nC:\\jbart5-ng\\src\\loader\\load-jbart.js:\n  190  function jbBootstrap(loadedModules) {\n  191    var bootstrap = loadedModules['@angular/platform-browser-dynamic'].bootstrap;\n  192:   jb_entries(jbart.ng.modules|| []).map(e=>e[1]).forEach(m =>\n  193      loadedModules['@angular/platform-browser-dynamic'].bootstrapModule(m)\n  194    )\n  195  \n  196:   bootstrap(loadedModules['jb-ui'].jBartWidget, jb_entries(jbart.ng.providers).map(e=>e[1]))\n  197      .catch(err => console.error(err))\n  198      .then(()=>\n  ...\n  206  function jbProjectModules(project) {\n  207    return $.get('/projects/'+project+'/'+project+'.html').then(function(html){\n  208:     return (html.split('jbLoadModules(')[1] || '')\n  209:       .split('[')[1]\n  210        .split(']')[0]\n  211        .replace(/'|\"/g,'')\n\nC:\\jbart5-ng\\src\\testing\\ui-testers-ctrls.ts:\n   34  		$vars : {\n   35  			module: ctx =>\n   36: 				location.href.split('?module=')[1] || '',			\n   37  			tst: {\n   38  				counter: 0,\n\n53 matches across 20 files\n\n\nSearching 120 files for \"'data-test'\" (case sensitive)\n\nC:\\jbart5-ng\\projects\\data-tests\\data-tests.ts:\n    3  jb.component('data-tests.join', {\n    4  	type: 'test',\n    5: 	 impl :{$: 'data-test', \n    6  		calculate: [ {$list: [1,2]}, {$: 'join'} ],\n    7  		expectedResult :{$: 'contains', text: '1,2' }\n    .\n   11  jb.component('data-tests.conditional-text', {\n   12  	type: 'test',\n   13: impl: {$: 'data-test', \n   14    calculate :{$: 'pipeline', \n   15      $vars: { full: 'full', empty: '' }, \n\nC:\\jbart5-ng\\projects\\studio\\studio-testers.ts:\n   13      { id: 'expectedResult', type: 'boolean', dynamic: true, as: 'boolean' }\n   14    ],\n   15:   impl :{$: 'data-test', \n   16      calculate: ctx => {\n   17        var params = ctx.componentContext.params;\n   ..\n   32      { id: 'expectedResult', type: 'boolean', dynamic: true, as: 'boolean' }\n   33    ],\n   34:   impl :{$: 'data-test', \n   35      calculate: ctx => {\n   36        var params = ctx.componentContext.params;\n\nC:\\jbart5-ng\\src\\testing\\ui-testers.ts:\n   39  })\n   40  \n   41: jb.component('data-test', {\n   42  	type: 'test',\n   43  	params: [\n\n5 matches across 3 files\n\n\nSearching 120 files for \"test_modules\" (case sensitive)\n\nC:\\jbart5-ng\\projects\\ui-tests\\single-test.html:\n   20    }\n   21  \n   22: jbProjectsModules(jbart.testProjects).then(test_modules=>\n   23:   jbLoadModules(jb_modules.concat(jb_studio_modules).concat(test_modules))\n   24      .then(loadedModules=>\n   25        jbBootstrap(loadedModules))   \n\nC:\\jbart5-ng\\projects\\ui-tests\\tests.html:\n   14  <script>\n   15  \n   16: jbProjectsModules(jbart.testProjects).then(test_modules=>\n   17: 	jbLoadModules(jb_modules.concat(jb_studio_modules).concat(test_modules))\n   18  	  .then(loadedModules=>\n   19  	    jbBootstrap(loadedModules))   \n\n4 matches across 2 files\n\n\nSearching 120 files for \"testProjects\" (case sensitive)\n\nC:\\jbart5-ng\\projects\\ui-tests\\single-test.html:\n   20    }\n   21  \n   22: jbProjectsModules(jbart.testProjects).then(test_modules=>\n   23    jbLoadModules(jb_modules.concat(jb_studio_modules).concat(test_modules))\n   24      .then(loadedModules=>\n\nC:\\jbart5-ng\\projects\\ui-tests\\tests.html:\n   14  <script>\n   15  \n   16: jbProjectsModules(jbart.testProjects).then(test_modules=>\n   17  	jbLoadModules(jb_modules.concat(jb_studio_modules).concat(test_modules))\n   18  	  .then(loadedModules=>\n\nC:\\jbart5-ng\\src\\loader\\load-jbart.js:\n  202  // for tests\n  203  \n  204: jbart.testProjects = ['ui-tests','studio-helper'];\n  205  \n  206  function jbProjectModules(project) {\n\n3 matches across 3 files\n\n\nSearching 120 files for \"'data-test'\" (case sensitive)\n\nC:\\jbart5-ng\\projects\\data-tests\\data-tests.ts:\n    2  \n    3  jb.component('data-tests.join', {\n    4: 	 impl :{$: 'data-test', \n    5  		calculate: [ {$list: [1,2]}, {$: 'join'} ],\n    6  		expectedResult :{$: 'contains', text: '1,2' }\n    .\n    9  \n   10  jb.component('data-tests.conditional-text', {\n   11: impl: {$: 'data-test', \n   12    calculate :{$: 'pipeline', \n   13      $vars: { full: 'full', empty: '' }, \n\nC:\\jbart5-ng\\projects\\studio\\studio-testers.ts:\n   13      { id: 'expectedResult', type: 'boolean', dynamic: true, as: 'boolean' }\n   14    ],\n   15:   impl :{$: 'data-test', \n   16      calculate: ctx => {\n   17        var params = ctx.componentContext.params;\n   ..\n   32      { id: 'expectedResult', type: 'boolean', dynamic: true, as: 'boolean' }\n   33    ],\n   34:   impl :{$: 'data-test', \n   35      calculate: ctx => {\n   36        var params = ctx.componentContext.params;\n\nC:\\jbart5-ng\\src\\testing\\ui-testers.ts:\n   39  })\n   40  \n   41: jb.component('data-test', {\n   42  	type: 'test',\n   43  	params: [\n\n5 matches across 3 files\n\n\nSearching 120 files for \"'button-href'\" (case sensitive)\n\n0 matches\n\nSearching 120 files for \"'button.href'\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\button.js:\n   23  })\n   24  \n   25: jb.component('button.href', {\n   26    type: 'button.style',\n   27      impl :{$: 'customStyle', \n\nC:\\jbart5-ng\\projects\\studio\\studio-properties.ts:\n  472          title: 'new feature', \n  473          action :{$: 'studio.newArrayItem', path: '%$path%' }, \n  474:         style :{$: 'button.href' }, \n  475          features :{$: 'css.margin', top: '20', left: '20' }\n  476        }\n\nC:\\jbart5-ng\\src\\testing\\ui-testers-ctrls.ts:\n  112  			[\n  113  				{	$: 'button', title: {$firstSucceeding: ['%$testResult/title%','%$testResult/id%']},\n  114: 					style :{$: 'button.href' },\n  115  					features :{$: 'css', css: '{ padding: 0 5px 0 5px }'},\n  116  					action :{$: 'goto-url', url: '/projects/ui-tests/single-test.html?test=%$testResult/id%' }\n  ...\n  132  				},\n  133  				{	$: 'button', title: 'sublime',\n  134: 					style :{$: 'button.href' },\n  135  					action :{$: 'studio.goto-sublime', path: '%$testResult/id%' },\n  136  					features: [\n  ...\n  150  			[\n  151  				{	$: 'button', title: { $firstSucceeding: ['%title%','%id%']},\n  152: 					style :{$: 'button.href' },\n  153  					features :{$: 'css', css: '{ padding: 0 5px 0 5px }'},\n  154    					action : [{$: 'writeValue', \n\n5 matches across 3 files\n\n\nSearching 120 files for \"'customStyle'\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\button.js:\n   25  jb.component('button.href', {\n   26    type: 'button.style',\n   27:     impl :{$: 'customStyle', \n   28          template: '<a href=\"javascript:;\" (click)=\"clicked()\">{{title}}</a>',\n   29      }\n   ..\n   35      { id: 'size', as: 'number', defaultValue: '21'}\n   36    ],\n   37:   impl :{$: 'customStyle', \n   38        template: '<div><button (click)=\"clicked()\" [title]=\"title\" style=\":hover { opacity: .5 }\">&#215;</button></div>',\n   39        css: `button {\n   ..\n   53  jb.component('button.popup-menu', {\n   54    type: 'button.style',\n   55:   impl :{$: 'customStyle',  \n   56        template: '<div><button (click)=\"clicked()\" [title]=\"title\"></button></div>',\n   57        css: `\n\nC:\\jbart5-ng\\src\\ui\\dialog.js:\n   55  jb.component('dialog.default', {\n   56  	type: 'dialog.style',\n   57: 	impl :{$: 'customStyle',\n   58  		template: `<div class=\"jb-dialog jb-default-dialog\">\n   59  				      <div class=\"dialog-title\">{{title}}</div>\n   ..\n   66  jb.component('dialog.popup', {\n   67    type: 'dialog.style',\n   68:   impl :{$: 'customStyle',\n   69        template: '<div class=\"jb-dialog jb-popup\"><jb_comp [comp]=\"contentComp\" class=\"dialog-content\"></jb_comp></div>',\n   70        features: [\n\nC:\\jbart5-ng\\src\\ui\\divider.js:\n   18      params: [\n   19      ],\n   20:     impl :{$: 'customStyle', \n   21          template: '<div></div>',\n   22          css: `{ border-top-color: rgba(0,0,0,0.12); display: block; border-top-width: 1px; border-top-style: solid;margin-top: 10px; margin-bottom: 10px;} `\n   ..\n   26  jb.component('divider.flex-auto-grow', {\n   27      type: 'divider.style',\n   28:     impl :{$: 'customStyle', \n   29          template: '<div></div>',\n   30          css: `{ flex-grow: 10 } `\n\nC:\\jbart5-ng\\src\\ui\\editable-number.ts:\n   36  jb.component('editable-number.input',{\n   37    type: 'editable-number.style',\n   38:   impl :{$: 'customStyle', \n   39        features :{$: 'editable-number.bindField' },\n   40        template: `<div><input %$field.modelExp%></div>`,\n\nC:\\jbart5-ng\\src\\ui\\editable-text.js:\n   25  jb.component('editable-text.input', {\n   26    type: 'editable-text.style',\n   27:   impl :{$: 'customStyle', \n   28        features :{$: 'editable-text.bindField' },\n   29        template: `<div><input %$field.modelExp%></div>`,\n   ..\n   34  jb.component('editable-text.textarea', {\n   35  	type: 'editable-text.style',\n   36: 	impl :{$: 'customStyle', \n   37        features :{$: 'editable-text.bindField' },\n   38        template: '<textarea %$field/modelExp%></textarea>',\n\nC:\\jbart5-ng\\src\\ui\\group.js:\n   79  jb.component('group.section', {\n   80    type: 'group.style',\n   81:   impl :{$: 'customStyle',\n   82      template: '<section class=\"jb-group\"><jb_comp *ngFor=\"let ctrl of ctrls\" [comp]=\"ctrl.comp\" [flatten]=\"true\"></jb_comp></section>',\n   83      features :{$: 'group.initGroup'}\n\nC:\\jbart5-ng\\src\\ui\\image.js:\n   30  jb.component('image.default', {\n   31  	type: 'image.style',\n   32: 	impl: {$: 'customStyle',\n   33  			template: `<div [style.width]=\"width\" [style.height]=\"height\" [style.background-image]=\"\">\n   34  			               <img [style.width]=\"imageWidth\" [style.height]=\"imageHeight\" src=\"{{url}}\"/>\n\nC:\\jbart5-ng\\src\\ui\\itemlist.js:\n   64  jb.component('itemlist.ul-li', {\n   65    type: 'group.style',\n   66:   impl :{$: 'customStyle',\n   67      features :{$: 'group.initGroup'},\n   68      template: `<div><ul class=\"jb-itemlist\">\n\nC:\\jbart5-ng\\src\\ui\\itemlog.js:\n   33  jb.component('itemlog.div', {\n   34    type: 'group.style',\n   35:   impl :{$: 'customStyle',\n   36      template: `<div class=\"jb-group jb-itemlog\"><div jb-item *ngFor=\"let item of items\">\n   37          <jb_comp [comp]=\"itemToComp(item)\" flatten=\"true\"></jb_comp>\n\nC:\\jbart5-ng\\src\\ui\\label.js:\n   25  jb.component('label.span', {\n   26      type: 'label.style',\n   27:     impl :{$: 'customStyle', \n   28          template: '<span>{{title}}</span>',\n   29          features :{$: 'label.bind-title' }\n   ..\n   33  jb.component('label.static-span', {\n   34      type: 'label.style',\n   35:     impl :{$: 'customStyle', \n   36          template: '<span>%$title%</span>'\n   37      }\n   ..\n   40  jb.component('label.p', {\n   41      type: 'label.style',\n   42:     impl :{$: 'customStyle', \n   43          template: '<p>{{title}}</p>',\n   44          features :{$: 'label.bind-title' }\n   ..\n   48  jb.component('label.h1', {\n   49      type: 'label.style',\n   50:     impl :{$: 'customStyle', \n   51          template: '<h1>{{title}}</h1>',\n   52          features :{$: 'label.bind-title' }\n   ..\n   56  jb.component('label.h2', {\n   57      type: 'label.style',\n   58:     impl :{$: 'customStyle', \n   59          template: '<h2>{{title}}</h2>',\n   60          features :{$: 'label.bind-title' }\n\nC:\\jbart5-ng\\src\\ui\\pulldown-menu.js:\n   58  	  { id: 'icon', as: 'string' }\n   59    ],\n   60:   impl :{$: 'customStyle',\n   61    	template: `<div><div class=\"line noselect\" (click)=\"clicked()\">\n   62    		<i class=\"material-icons\">{{icon}}</i><span class=\"title\">{{title}}</span><span class=\"shortcut\">{{shortcut}}</span>\n   ..\n  115  jb.component('pulldownTopMenuItem.default',{\n  116  	type: 'pulldownTopMenuItem.style',\n  117: 	impl :{$: 'customStyle',\n  118  			template: '<button class=\"pulldown-top-menu-item\" (mouseEnter)=\"mouseEnter()\" (click)=\"openPopup()\">{{title}}</button>',\n  119  	}\n  ...\n  122  jb.component('pulldownPopup.mainMenuPopup',{\n  123  	type: 'dialog.style',\n  124: 	impl :{$: 'customStyle',\n  125  			template: `<div class=\"jb-dialog jb-popup pulldown-mainmenu-popup\">\n  126  							<jb_comp [comp]=\"contentComp\" class=\"dialog-content\"></jb_comp>\n  ...\n  140  jb.component('pulldownPopup.contextMenuPopup',{\n  141  	type: 'dialog.style',\n  142: 	impl :{$: 'customStyle',\n  143  			template: '<div class=\"jb-dialog jb-popup pulldown-mainmenu-popup\"><jb_comp [comp]=\"contentComp\" class=\"dialog-content\"></jb_comp></div>',\n  144  			features: [\n\nC:\\jbart5-ng\\src\\ui\\sidenav.js:\n   23      { id: 'opened', as: 'boolean', type: 'boolean' }\n   24    ],\n   25:   impl :{$: 'customStyle',\n   26      template: `<md-sidenav-layout>\n   27        <md-sidenav>\n\nC:\\jbart5-ng\\src\\ui\\slider.ts:\n    9  		{ id: 'width', as: 'number', defaultValue: '200' },\n   10  	],\n   11: 	impl :{$:'customStyle',\n   12  		template: `<div class=\"jb-slider\">\n   13  						<div class=\"slider_scale\">\n\nC:\\jbart5-ng\\src\\ui\\styles.js:\n    1  jbLoadModules(['jb-core','jb-ui']).then(loadedModules => { var jb = loadedModules['jb-core'].jb, jb_ui = loadedModules['jb-ui'];\n    2  \n    3: jb.component('customStyle', {\n    4  	typePattern: /.*-style/,\n    5  	params: [\n\nC:\\jbart5-ng\\src\\ui\\tabs.js:\n   43  jb.component('tabs.simple', {\n   44  	type: 'tabs.style',\n   45:   	impl :{$: 'customStyle',\n   46  	    template: `<div class=\"jb-tab\">\n   47  	    	<div class=\"tab-titles\">\n\nC:\\jbart5-ng\\src\\ui\\text.js:\n   31          { id: 'cols',as: 'number', defaultValue: '80'},\n   32      ],\n   33:     impl :{$: 'customStyle', \n   34          template: '<div><textarea readonly cols=\"%$cols%\" rows=\"%$rows%\">{{text}}</textarea></div>',\n   35          features :{$: 'text.bind-text'}\n   ..\n   39  jb.component('text.paragraph', {\n   40      type: 'text.style',\n   41:     impl :{$: 'customStyle', \n   42          template: '<p>{{text}}</p>',\n   43          features :{$: 'text.bind-text' }\n   ..\n   59  jb.component('rich-text.html', {\n   60      type: 'rich-text.style',\n   61:     impl :{$: 'customStyle', \n   62          template: '%$text%',\n   63      }\n   ..\n   66  jb.component('rich-text.html-in-section', {\n   67      type: 'rich-text.style',\n   68:     impl :{$: 'customStyle', \n   69          template: `<section>\n   70                      <div class=\"title\">%$title%</div>\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\button-md.ts:\n   13  jb.component('button.md-flat', {\n   14    type: 'button.style',\n   15:   impl :{$: 'customStyle', \n   16        template: '<div><button md-button (click)=\"clicked()\">{{title}}</button></div>',\n   17        directives: 'MdButton'\n   ..\n   21  jb.component('button.md-raised', {\n   22    type: 'button.style',\n   23:   impl :{$: 'customStyle', \n   24        template: '<div><button md-raised-button (click)=\"clicked()\">{{title}}</button></div>',\n   25        directives: 'MdButton'\n   ..\n   34      { id: 'aria', as: 'string' },\n   35    ],\n   36:   impl :{$: 'customStyle', \n   37        template: `<div><button md-icon-button md-button aria-label=\"%$aria%\" (click)=\"clicked()\" title=\"{{title}}\" tabIndex=\"-1\">\n   38                  <i class=\"material-icons\" style=\"font-size:%$size%px;\">%$icon%</i>\n   ..\n   49      { id: 'aria', as: 'string' },\n   50    ],\n   51:   impl :{$: 'customStyle', \n   52        template: `<div><button md-icon-button md-button aria-label=\"%$aria%\" (click)=\"clicked()\" title=\"{{title}}\" tabIndex=\"-1\">\n   53                  <i class=\"material-icons\">%$icon%</i>\n   ..\n   68      { id: 'aria', as: 'string' },\n   69    ],\n   70:   impl :{$: 'customStyle', \n   71        template: `<div><button md-fab aria-label=\"%$aria%\" (click)=\"clicked()\" title=\"{{title}}\" tabIndex=\"-1\">\n   72                  <i class=\"material-icons md-24\">%$icon%</i>\n   ..\n   83      { id: 'aria', as: 'string' },\n   84    ],\n   85:   impl :{$: 'customStyle', \n   86        template: `<div><button md-mini-fab aria-label=\"%$aria%\" (click)=\"clicked()\" title=\"{{title}}\" tabIndex=\"-1\">\n   87                  <i class=\"material-icons md-24\">%$icon%</i>\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\card-md.ts:\n    7  jb.component('group.md-card', {\n    8    type: 'group.style',\n    9:   impl :{$: 'customStyle',\n   10      template: `<div><md-card>\n   11          <jb_comp *ngFor=\"let ctrl of ctrls\" [comp]=\"ctrl.comp\" [flatten]=\"true\" class=\"group-item\"></jb_comp>\n   ..\n   18  jb.component('group.md-card-actions', {\n   19    type: 'group.style',\n   20:   impl :{$: 'customStyle',\n   21      template: `<div><md-card-actions>\n   22          <jb_comp *ngFor=\"let ctrl of ctrls\" [comp]=\"ctrl.comp\" [flatten]=\"true\" class=\"group-item\"></jb_comp>\n   ..\n   29  jb.component('group.md-card-content', {\n   30    type: 'group.style',\n   31:   impl :{$: 'customStyle',\n   32      template: `<div><md-card-content>\n   33          <jb_comp *ngFor=\"let ctrl of ctrls\" [comp]=\"ctrl.comp\" [flatten]=\"true\" class=\"group-item\"></jb_comp>\n   ..\n   40  jb.component('group.md-card-header', {\n   41    type: 'group.style',\n   42:   impl :{$: 'customStyle',\n   43      template: `<div><md-card-header>\n   44          <jb_comp *ngFor=\"let ctrl of ctrls\" [comp]=\"ctrl.comp\" [flatten]=\"true\" class=\"group-item\"></jb_comp>\n   ..\n   51  jb.component('label.md-card-title', {\n   52      type: 'label.style',\n   53:     impl :{$: 'customStyle', \n   54          template: '<div><md-card-title>{{title}}</md-card-title></div>',\n   55          features :{$: 'label.bind-title' },\n   ..\n   60  jb.component('label.md-card-subtitle', {\n   61      type: 'label.style',\n   62:     impl :{$: 'customStyle', \n   63          template: '<div><md-card-subtitle>{{title}}</md-card-subtitle></div>',\n   64          ffeatures :{$: 'label.bind-title' },\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\dialog-md.ts:\n    8  		{ id: 'cancelLabel', as: 'string', defaultValue: 'Cancel' },\n    9  	],\n   10: 	impl :{$: 'customStyle',\n   11  		template: `\n   12  				<div class=\"jb-dialog jb-default-dialog\">\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\editable-boolean-md.ts:\n    8  jb.component('editable-boolean.md-slide-toggle', {\n    9    type: 'editable-boolean.style',\n   10:   impl :{$: 'customStyle', \n   11        template: `<div><md-slide-toggle %$field.modelExp% >{{text()}}</md-slide-toggle></div>`,\n   12        directives: 'MdSlideToggle'\n   ..\n   16  jb.component('editable-boolean.md-slide-toggle-fixed', {\n   17    type: 'editable-boolean.style',\n   18:   impl :{$: 'customStyle', \n   19        template: `<div><md-slide-toggle color=\"primary\" class=\"fix-slide-toggle\" %$field.modelExp% >{{text()}}</md-slide-toggle></div>`,\n   20        css: `\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\input-md.ts:\n   10      { id: 'width', as: 'number' }\n   11    ],\n   12:   impl :{$: 'customStyle', \n   13     features :{$: 'editable-text.bindField' },\n   14     template: `<div><md-input %$field.modelExp% placeholder=\"{{title}}\"></md-input></div>`,\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\sidenav-md.ts:\n   14      { id: 'opened', as: 'boolean', type: 'boolean' }\n   15    ],\n   16:   impl :{$: 'customStyle',\n   17      template: `<md-sidenav-layout>\n   18        <md-sidenav>\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\tabs-md.ts:\n   13    ],\n   14    type: 'tabs.style',\n   15:     impl :{$: 'customStyle',\n   16        template: `<div><md-tab-group>\n   17    <md-tab *ngFor=\"let tab of comps\">\n\nC:\\jbart5-ng\\src\\ui\\styles\\editable-boolean-styles.ts:\n    3  jb.component('editable-boolean.checkbox', {\n    4    type: 'editable-boolean.style',\n    5:   impl :{$: 'customStyle', \n    6        template: `<div><input type=\"checkbox\" %$field.modelExp%></div>`,\n    7  	}\n    .\n   10  jb.component('editable-boolean.checkbox-with-title', {\n   11    type: 'editable-boolean.style',\n   12:   impl :{$: 'customStyle', \n   13        template: `<div><input type=\"checkbox\" %$field.modelExp%>{{text()}}</div>`,\n   14  	}\n   ..\n   17  jb.component('editable-boolean.expand-collapse', {\n   18    type: 'editable-boolean.style',\n   19:   impl :{$: 'customStyle',\n   20        template: `<div><input type=\"checkbox\" %$field.modelExp%>\n   21        	<i class=\"material-icons noselect\" (click)=\"toggle()\">{{jbModel ? 'keyboard_arrow_down' : 'keyboard_arrow_right'}}</i>\n\nC:\\jbart5-ng\\src\\ui\\styles\\group-styles.ts:\n    4  jb.component('group.div', {\n    5    type: 'group.style',\n    6:   impl :{$: 'customStyle',\n    7      template: `<div class=\"jb-group\">\n    8          <jb_comp *ngFor=\"let ctrl of ctrls\" [comp]=\"ctrl.comp\" [flatten]=\"true\" class=\"group-item\"></jb_comp>\n    .\n   14  jb.component('group.expandable', {\n   15    type: 'group.style',\n   16:   impl :{$: 'customStyle', \n   17        template: `<section class=\"jb-group\">\n   18         <div class=\"header\">\n   ..\n   47  jb.component('group.accordion', {\n   48    type: 'group.style',\n   49:   impl :{$: 'customStyle', \n   50        template: `<section class=\"jb-group\">\n   51        <div *ngFor=\"let ctrl of ctrls\" class=\"accordion-section\">\n   ..\n   84  jb.component('toolbar.simple', {\n   85    type: 'group.style',\n   86:   impl :{$: 'customStyle', \n   87      features :{$: 'group.initGroup' },\n   88      template: `<div class=\"toolbar\">\n\nC:\\jbart5-ng\\src\\ui\\styles\\itemlist-styles.ts:\n    3  jb.component('itemlist.ul-li', {\n    4    type: 'itemlist.style',\n    5:   impl :{$: 'customStyle',\n    6      template: `<ul class=\"jb-itemlist\">\n    7    <li *ngFor=\"let item of items\" jb-item>\n    .\n   19  jb.component('itemlist.table', {\n   20    type: 'itemlist.style',\n   21:   impl :{$: 'customStyle',\n   22      template: `<table>\n   23  <thead>    \n\nC:\\jbart5-ng\\src\\ui\\styles\\layout-styles.ts:\n    7      { id: 'spacing', as: 'number', defaultValue: 3 }\n    8    ],\n    9:   impl :{$: 'customStyle',\n   10      template: `<div class=\"jb-group\">\n   11          <jb_comp *ngFor=\"let ctrl of ctrls\" [comp]=\"ctrl.comp\" [flatten]=\"true\" class=\"group-item\"></jb_comp>\n   ..\n   22      { id: 'spacing', as: 'number', defaultValue: 3 }\n   23    ],\n   24:   impl :{$: 'customStyle',\n   25      template: `<div class=\"jb-group\">\n   26          <jb_comp *ngFor=\"let ctrl of ctrls\" [comp]=\"ctrl.comp\" [flatten]=\"true\" class=\"group-item\"></jb_comp>\n   ..\n   40        { id: 'wrap', as: 'string', options:',wrap' },\n   41    ],\n   42:   impl :{$: 'customStyle',\n   43      // $vars: {\n   44      //    flexProps: ctx => {\n\nC:\\jbart5-ng\\src\\ui\\styles\\picklist-styles.ts:\n    3  jb.component('picklist.native', {\n    4    type: 'picklist.style',\n    5:   impl :{$: 'customStyle', \n    6      template: `<div><select %$field.modelExp%>\n    7                      <option *ngFor=\"let option of options\" [value]=\"option.code\">{{option.text}}</option>\n    .\n   21  jb.component('picklist.groups', {\n   22    type: 'picklist.style',\n   23:   impl :{$: 'customStyle', \n   24      template: `<div><select %$field.modelExp%>\n   25      <optgroup *ngFor=\"let group of groups\" label=\"{{group.text}}\">\n\nC:\\jbart5-ng\\src\\ui\\styles\\property-sheet-styles.ts:\n    6      { id: 'spacing', as: 'number', defaultValue: 20 }\n    7    ],\n    8:   impl :{$: 'customStyle', \n    9      features :{$: 'group.initGroup'},\n   10      template: `<div>\n   ..\n   35      { id: 'fieldWidth', as: 'number', defaultValue: 200 },\n   36    ],\n   37:   impl :{$: 'customStyle', \n   38      features :{$: 'group.initGroup'},\n   39      template: `<div>\n   ..\n   69      { id: 'titleWidth', as: 'number', defaultValue: 100 },\n   70    ],\n   71:   impl :{$: 'customStyle', \n   72      features :{$: 'group.initGroup'},\n   73      template: `<div>\n   ..\n   99      { id: 'titleWidth', as: 'number', defaultValue: 100 },\n  100    ],\n  101:   impl :{$: 'customStyle', \n  102      features : {$: 'group.initGroup'},\n  103      methods: {\n  ...\n  172      { id: 'titleWidth', as: 'number', defaultValue: 100 },\n  173    ],\n  174:   impl :{$: 'customStyle', \n  175      features : {$: 'group.initGroup'},\n  176      methods: {\n\nC:\\jbart5-ng\\src\\ui\\tree\\tree.ts:\n   50  jb.component('tree.ul-li', {\n   51  	type: 'tree.style',\n   52: 	impl :{$:'customStyle',\n   53  		template: '<span><jb_node [tree]=\"tree\" [path]=\"tree.nodeModel.rootPath\" class=\"jb-control-tree treenode\" [ngClass]=\"{selected: tree.selected == tree.nodeModel.rootPath}\"></jb_node></span>',\n   54  		directives: ['TreeNode', 'TreeNodeLine'],\n\nC:\\jbart5-ng\\projects\\jbart-site\\jbart-site.ts:\n   57                `, \n   58              title: 'Visual Development Concepts', \n   59:             style :{$: 'customStyle', \n   60                template: `<section>\n   61                  <div class=\"title\">%$title%</div>\n   ..\n   90              imageHeight: '', \n   91              units: 'px', \n   92:             style :{$: 'customStyle', \n   93                template: `<div [style.width]=\"width\" [style.height]=\"height\">\n   94                  <img [style.width]=\"imageWidth\" [style.height]=\"imageHeight\" src=\"{{url}}\"/>\n\nC:\\jbart5-ng\\projects\\studio\\studio-jb-editor-styles.ts:\n    3  jb.component('dialog.studio-jb-editor-popup', {\n    4    type: 'dialog.style',\n    5:   impl: {$: 'customStyle',\n    6        template: `<div class=\"jb-dialog jb-popup\">\n    7                <button class=\"dialog-close\" (click)=\"dialogClose()\">&#215;</button>\n    .\n   42  jb.component('dialog.studio-suggestions-popup',{\n   43    type: 'dialog.style',\n   44:   impl: {$: 'customStyle',\n   45        template: `<div class=\"jb-dialog jb-popup\">\n   46                <jb_comp [comp]=\"contentComp\" class=\"dialog-content\"></jb_comp>\n   ..\n   82  // jb.component('editable-text.studio-jb-edit-input',{\n   83  //   type: 'editable-text.style',\n   84: //   impl :{$: 'customStyle', \n   85  //    features :{$: 'editable-text.bindField' },\n   86  //    template: `<span><md-input [(ngModel)] = \"jbModel\" placeholder=\"\"></md-input></span>`,\n\nC:\\jbart5-ng\\projects\\studio\\studio-main.ts:\n   31                {$: 'label', \n   32                  title: 'message', \n   33:                 style :{$: 'customStyle', \n   34                    template: '<span class=\"studio-message\">{{title}}</span> ', \n   35                    css: `{ position: absolute;\n\nC:\\jbart5-ng\\projects\\studio\\studio-new-control.ts:\n   44                  ]\n   45                }, \n   46:               style :{$: 'customStyle', \n   47                  template: '<div><button md-button (click)=\"clicked()\">{{title}}</button></div>', \n   48                  directives: 'MdButton', \n\nC:\\jbart5-ng\\projects\\studio\\studio-open-project.ts:\n   60  })\n   61  \n   62:           // style :{$: 'customStyle', \n   63            //   template: '<span><button md-button (click)=\"clicked()\">{{title}}</button></span>', \n   64            //   directives: 'MdButton', \n\nC:\\jbart5-ng\\projects\\studio\\studio-pick-dialog.ts:\n   27  		{ id: 'from', as: 'string' },\n   28  	],\n   29: 	impl: {$: 'customStyle',\n   30  			template: `<div class=\"jb-dialog\">\n   31  <div class=\"edge top\" [style.width]=\"width+'px'\" [style.top]=\"top+'px'\" [style.left]=\"left+'px'\"></div>\n\nC:\\jbart5-ng\\projects\\studio\\studio-popups.ts:\n   28  		{ id: 'height', as: 'number', default: 100},\n   29  	],\n   30: 	impl :{$: 'customStyle',\n   31  			template: `<div class=\"jb-dialog jb-default-dialog\">\n   32  				      		  <div class=\"dialog-title noselect\">{{title}}</div>\n\nC:\\jbart5-ng\\projects\\studio\\studio-properties-menu.ts:\n   39                  {$: 'notEquals', \n   40                    item1 :{$: 'studio.compName', path: '%$path%' }, \n   41:                   item2: 'customStyle'\n   42                  }\n   43                ]\n   ..\n   52                showCondition :{$: 'equals', \n   53                    item1 :{$: 'studio.compName', path: '%$path%' }, \n   54:                   item2: 'customStyle'\n   55                  }\n   56              }\n\nC:\\jbart5-ng\\projects\\studio\\studio-properties.ts:\n  145  		// else if ( (paramDef.type || '').indexOf('.style') > -1 )\n  146  		//  	fieldPT = 'studio.property-Style';\n  147:     // else if ( model.compName(path) == 'customStyle')\n  148      //   fieldPT = 'studio.property-custom-style';\n  149  		else \n  ...\n  294                      { $: 'notEquals', \n  295                        item1 :{$: 'studio.compName', path: '%$path%' }, \n  296:                       item2: 'customStyle'\n  297                      }\n  298                    ]\n  ...\n  334                { $: 'notEquals', \n  335                  item1 :{$: 'studio.compName', path: '%$path%' }, \n  336:                 item2: 'customStyle'\n  337                }\n  338              ]\n\nC:\\jbart5-ng\\projects\\studio\\studio-styles.ts:\n    3  jb.component('editable-text.studio-primitive-text',{\n    4    type: 'editable-text.style',\n    5:   impl :{$: 'customStyle', \n    6        features :{$: 'editable-text.bindField' },\n    7        template: `<div><input %$field.modelExp%></div>`,\n    .\n   23  jb.component('button.studio-script',{\n   24    type: 'editable-text.style',\n   25:   impl :{$: 'customStyle', \n   26            template: '<div [title]=\"title\" (click)=\"clicked()\"><div class=\"inner-text\">{{title}}</div></div>', \n   27            css: `.inner-text {\n   ..\n   49  jb.component('editable-boolean.studio-slide-toggle', {\n   50    type: 'editable-boolean.style',\n   51:   impl :{$: 'customStyle', \n   52        template: `<div><md-slide-toggle color=\"primary\" class=\"studio-slide-toggle\" %$field.modelExp% >{{text()}}</md-slide-toggle></div>`,\n   53        css: `\n   ..\n   67  jb.component('picklist.studio-enum', {\n   68    type: 'picklist.style',\n   69:   impl :{$: 'customStyle', \n   70      template: `<div><select %$field.modelExp%>\n   71                      <option *ngFor=\"let option of options\" [value]=\"option.code\">{{option.text}}</option>\n   ..\n   89  jb.component('property-sheet.studio-properties', {\n   90    type: 'group.style', \n   91:   impl :{$: 'customStyle', \n   92      features :{$: 'group.initGroup' }, \n   93      methods: {\n   ..\n  134  jb.component('property-sheet.studio-plain', {\n  135    type: 'group.style', \n  136:   impl :{$: 'customStyle', \n  137      features :{$: 'group.initGroup' }, \n  138      template: `<div>\n  ...\n  167  jb.component('editable-boolean.studio-expand-collapse-in-toolbar', {\n  168    type: 'editable-boolean.style',\n  169:   impl :{$: 'customStyle',\n  170        template: `<div><button md-icon-button md-button (click)=\"toggle()\" title=\"{{yesNo ? 'collapse' : 'expand'}}\">\n  171        	<i class=\"material-icons\">{{yesNo ? 'keyboard_arrow_down' : 'keyboard_arrow_right'}}</i>\n  ...\n  179  jb.component('editable-boolean.studio-expand-collapse-in-array', {\n  180    type: 'editable-boolean.style',\n  181:   impl :{$: 'customStyle',\n  182        template: `<div><button md-icon-button md-button (click)=\"toggle()\" title=\"{{yesNo ? 'collapse' : 'expand'}}\">\n  183        	<i class=\"material-icons\">{{yesNo ? 'keyboard_arrow_down' : 'keyboard_arrow_right'}}</i>\n  ...\n  191  // jb.component('button.studio-edit-js', {\n  192  //   type: 'button.style',\n  193: //   impl :{$: 'customStyle',  \n  194  //   	template: '<div><button (click)=\"clicked()\" [title]=\"title\">{}</button></div>',\n  195  //   	css: `{ margin-top: -2px; margin-left: -3px; margin-right: -5px;}\n  ...\n  209  // jb.component('button.studio-delete', {\n  210  //   type: 'button.style',\n  211: //   impl :{$: 'customStyle',  \n  212  //       template: '<div><button (click)=\"clicked()\" [title]=\"title\">&#215;</button></div>',\n  213  //       css: `{ margin-left: -4px; margin-top: -1px }\n  ...\n  228  jb.component('dialog.studio-multiline-edit',{\n  229  	type: 'dialog.style',\n  230: 	impl: {$: 'customStyle',\n  231  			template: `<div class=\"jb-dialog jb-popup\">\n  232  							<button class=\"dialog-close\" (click)=\"dialogClose()\">&#215;</button>\n  ...\n  279  jb.component('group.studio-properties-accordion', {\n  280    type: 'group.style', \n  281:   impl :{$: 'customStyle', \n  282      template: `<section class=\"jb-group\">\n  283        <div *ngFor=\"let ctrl of ctrls\" class=\"accordion-section\">\n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n  285  	    var style = this.val(path);\n  286  	    var compName = jb.compName(style);\n  287: 	    if (compName == 'customStyle')\n  288  	      return { type: 'inner', path: path, style : style }\n  289  		var comp = compName && getComp(compName);\n  290: 		if (jb.compName(comp.impl) == 'customStyle') \n  291  	      return { type: 'global', path: compName, style: comp.impl, innerPath: path }\n  292  	}\n\nC:\\jbart5-ng\\projects\\studio\\studio-toolbar.ts:\n  118  jb.component('studio-toolbar', {\n  119    type: 'group.style',\n  120:   impl :{$: 'customStyle', \n  121      features :{$: 'group.initGroup' },\n  122      template: '<section class=\"jb-group\"><jb_comp *ngFor=\"let ctrl of ctrls\" [comp]=\"ctrl.comp\" [flatten]=\"true\"></jb_comp></section>',\n\nC:\\jbart5-ng\\projects\\studio-helper\\studio-helper.ts:\n   13    {$: 'group', \n   14      title: 'main', \n   15:     style : {$: 'customStyle',\n   16      template: `<div class=\"jb-group\">\n   17          <jb_comp *ngFor=\"let ctrl of ctrls\" [comp]=\"ctrl.comp\" [flatten]=\"true\" class=\"group-item\"></jb_comp>\n   ..\n  267            {$: 'button', \n  268              title: '%name%', \n  269:             style :{$: 'customStyle', \n  270                template: '<div><button md-button (click)=\"clicked()\">{{title}}</button></div>', \n  271                directives: 'MdButton', \n  ...\n  348            {$: 'button', \n  349              title: '%%', \n  350:             style :{$: 'customStyle', \n  351                template: '<div><button md-button (click)=\"clicked()\">{{title}}</button></div>', \n  352                directives: 'MdButton', \n\n102 matches across 43 files\n\n\nSearching 120 files for \"('customStyle'\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\styles.js:\n    1  jbLoadModules(['jb-core','jb-ui']).then(loadedModules => { var jb = loadedModules['jb-core'].jb, jb_ui = loadedModules['jb-ui'];\n    2  \n    3: jb.component('customStyle', {\n    4  	typePattern: /.*-style/,\n    5  	params: [\n\n1 match in 1 file\n\n\nSearching 120 files for \"as: 'object'\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\features.js:\n  150    type: 'feature',\n  151    params: [\n  152:     { id: 'atts', as: 'object' }\n  153    ],\n  154    impl: (ctx,atts) => \n\nC:\\jbart5-ng\\src\\ui\\styles.js:\n    7  		{ id: 'css', as: 'string'},\n    8      	{ id: 'features', type: 'feature[]', dynamic: true },\n    9: 		{ id: 'methods', as: 'object'},\n   10: 		{ id: 'atts', as: 'object'},\n   11  		{ id: 'directives', ignore: true }\n   12  	],\n   ..\n   34  		{ id: 'html', as: 'string', essential: true, defaultValue: '<div></div>'},\n   35  		{ id: 'css', as: 'string'},\n   36: 		{ id: 'options', as: 'object'},\n   37      	{ id: 'features', type: 'feature[]', dynamic: true },\n   38  		{ id: 'directives', ignore: true },\n\n4 matches across 2 files\n\n\nSearching 120 files for \"as: 'single'\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\features.js:\n  108    type: 'feature',\n  109    params: [\n  110:     { id: 'data', as: 'single', dynamic: true }\n  111    ],\n  112    impl: (ctx,data) => ({init: cmp => {\n\nC:\\jbart5-ng\\src\\ui\\jb-rx.ts:\n  257  	params: [\n  258  		{ id: 'params', type: 'data[]', as: 'array'},\n  259: 		{ id: 'databind', as: 'single' , essential: true },\n  260  		{ id: 'base', as: 'string'},\n  261  		{ id: 'zoneId', as: 'string'},\n\nC:\\jbart5-ng\\src\\ui\\styles\\codemirror-styles.ts:\n    6  	type: 'editable-text.style',\n    7  	params: [\n    8: 		{ id: 'cm_settings', as: 'single' },\n    9  		{ id: 'enableFullScreen', type: 'boolean', as: 'boolean', defaultValue: true},\n   10  		{ id: 'resizer', type: 'boolean', as: 'boolean', description: 'resizer id or true (id is used to keep size in session storage)' },\n   ..\n  153      type: 'text.style',\n  154      params: [\n  155:         { id: 'cm_settings', as: 'single' },\n  156  		{ id: 'enableFullScreen', type: 'boolean', as: 'boolean', defaultValue: true},\n  157          { id: 'resizer', type: 'boolean', as: 'boolean', description: 'resizer id or true (id is used to keep size in session storage)' },\n\nC:\\jbart5-ng\\src\\core\\components.js:\n   58   	type: '*',\n   59   	params: [\n   60:  		{ id: 'profile', as: 'single'},\n   61   	],\n   62   	impl: function(context,profile) {\n   ..\n   97  	type: \"data\",\n   98  	params: [\n   99: 		{ id: 'object', defaultValue: '%%', as: 'single' }\n  100  	],\n  101  	impl: (ctx,object) =>\n  ...\n  106  	type: \"data\",\n  107  	params: [\n  108: 		{ id: 'with', as: 'single' },\n  109: 		{ id: 'object', defaultValue: '%%', as: 'single' }\n  110  	],\n  111  	impl: function(context,_with,object) {\n  ...\n  117  	type: \"data\",\n  118  	params: [\n  119: 		{ id: 'object', defaultValue: '%%', as: 'single' }\n  120  	],\n  121  	impl: (context,object) =>\n  ...\n  425  jb_component('log',{\n  426  	params: [\n  427: 		{ id: 'obj', as: 'single', defaultValue: '%%'}\n  428  	],\n  429  	impl: function(context,obj) {\n  ...\n  533  	type: 'boolean',\n  534  	params: [\n  535: 		{ id: 'item', as: 'single', defaultValue: '%%'}\n  536  	],\n  537  	impl: function(context, item) {\n  ...\n  543  	type: 'boolean',\n  544  	params: [\n  545: 		{ id: 'item', as: 'single', defaultValue: '%%'}\n  546  	],\n  547  	impl: function(context, item) {\n  ...\n  553  	type: 'boolean',\n  554  	params: [\n  555: 		{ id: 'item', as: 'single', defaultValue: '%%'}\n  556  	],\n  557  	impl: function(context, item) {\n  ...\n  563  	type: 'boolean',\n  564  	params: [\n  565: 		{ id: 'item1', as: 'single', essential: true },\n  566: 		{ id: 'item2', defaultValue: '%%', as: 'single' }\n  567  	],\n  568  	impl: function(context, item1, item2) {\n  ...\n  579  	type: 'boolean',\n  580  	params: [\n  581: 		{ id: 'item1', as: 'single', essential: true },\n  582: 		{ id: 'item2', defaultValue: '%%', as: 'single' }\n  583  	],\n  584  	impl: { $not: { $: 'equals', item1: '%$item1%', item2: '%$item2%'} }\n  ...\n  715  		return actions.reduce((def,action,index) =>\n  716  			def.then(() =>\n  717: 				$.when(jb_run(jb_ctx(context,{profile: action, path: innerPath + index }),{ as: 'single'}))),\n  718  			$.Deferred().resolve())\n  719  	}\n  ...\n  732  				return deferred.resolve();\n  733  \n  734: 			var promise = jb_run(jb_ctx(context,{data: [items[index]], profile: context.profile.action }), {as: 'single'});\n  735  			$.when(promise).then(\n  736  					function() { runFromIndex(index+1) },\n\nC:\\jbart5-ng\\src\\testing\\ui-testers-ctrls.ts:\n  105  	type: 'control',\n  106  	params: [\n  107: 		{ id: 'testResult',as: 'single', defaultValue: '%%'},\n  108  	],\n  109  	impl :{$: 'group',\n\n20 matches across 5 files\n\n\nSearching 120 files for \"as: 'object'\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\features.js:\n  150    type: 'feature',\n  151    params: [\n  152:     { id: 'atts', as: 'object' }\n  153    ],\n  154    impl: (ctx,atts) => \n\nC:\\jbart5-ng\\src\\ui\\styles.js:\n    7  		{ id: 'css', as: 'string'},\n    8      	{ id: 'features', type: 'feature[]', dynamic: true },\n    9: 		{ id: 'methods', as: 'object'},\n   10: 		{ id: 'atts', as: 'object'},\n   11  		{ id: 'directives', ignore: true }\n   12  	],\n   ..\n   34  		{ id: 'html', as: 'string', essential: true, defaultValue: '<div></div>'},\n   35  		{ id: 'css', as: 'string'},\n   36: 		{ id: 'options', as: 'object'},\n   37      	{ id: 'features', type: 'feature[]', dynamic: true },\n   38  		{ id: 'directives', ignore: true },\n\n4 matches across 2 files\n\n\nSearching 120 files for \"as: 'object'\" (case sensitive)\n\n0 matches\n\nSearching 120 files for \"expand_title\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\styles\\group-styles.ts:\n   18         <div class=\"header\">\n   19          <div class=\"title\">{{title}}</div>\n   20:         <button md-icon-button md-button (click)=\"toggle()\" title=\"{{expand_title()}}\">\n   21          <i *ngIf=\"show\" class=\"material-icons\">keyboard_arrow_down</i>\n   22          <i *ngIf=\"!show\" class=\"material-icons\">keyboard_arrow_right</i>\n   ..\n   31              return function (cmp) {\n   32                  cmp.show = true;\n   33:                 cmp.expand_title = () => cmp.show ? 'collapse' : 'expand';\n   34                  cmp.toggle = function () { cmp.show = !cmp.show; };\n   35              };\n   ..\n   52          <div class=\"header\">\n   53            <div class=\"title\">{{ctrl.title}}</div>\n   54:           <button md-icon-button md-button (click)=\"toggle(ctrl)\" title=\"{{expand_title(ctrl)}}\">\n   55                  <i *ngIf=\"ctrl.show\" class=\"material-icons\">keyboard_arrow_down</i>\n   56                  <i *ngIf=\"!ctrl.show\" class=\"material-icons\">keyboard_arrow_right</i>\n   ..\n   62        methods: {\n   63          init: ctx => cmp => {\n   64:                 cmp.expand_title = (ctrl) => \n   65                    ctrl.show ? 'collapse' : 'expand';\n   66                  cmp.toggle = newCtrl => \n\nC:\\jbart5-ng\\projects\\studio\\studio-styles.ts:\n  284          <div class=\"header\">\n  285            <div class=\"title\">{{ctrl.title}}</div>\n  286:           <div class=\"expand\" (click)=\"toggle(ctrl)\" title=\"{{expand_title(ctrl)}}\">\n  287                  <i *ngIf=\"ctrl.show\" class=\"material-icons\">keyboard_arrow_down</i>\n  288                  <i *ngIf=\"!ctrl.show\" class=\"material-icons\">keyboard_arrow_right</i>\n  ...\n  296        init: function (ctx) {\n  297                              return function (cmp) {\n  298:                                 cmp.expand_title = function (ctrl) {\n  299                                      return ctrl.show ? 'collapse' : 'expand';\n  300                                  };\n\n6 matches across 2 files\n\n\nSearching 120 files for \"expand_title\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\styles\\group-styles.ts:\n   18         <div class=\"header\">\n   19          <div class=\"title\">{{title}}</div>\n   20:         <button md-icon-button md-button (click)=\"toggle()\" title=\"{{expand_title()}}\">\n   21          <i *ngIf=\"show\" class=\"material-icons\">keyboard_arrow_down</i>\n   22          <i *ngIf=\"!show\" class=\"material-icons\">keyboard_arrow_right</i>\n   ..\n   31              return function (cmp) {\n   32                  cmp.show = true;\n   33:                 cmp.expand_title = () => cmp.show ? 'collapse' : 'expand';\n   34                  cmp.toggle = function () { cmp.show = !cmp.show; };\n   35              };\n   ..\n   52          <div class=\"header\">\n   53            <div class=\"title\">{{ctrl.title}}</div>\n   54:           <button md-icon-button md-button (click)=\"toggle(ctrl)\" title=\"{{expand_title(ctrl)}}\">\n   55                  <i *ngIf=\"ctrl.show\" class=\"material-icons\">keyboard_arrow_down</i>\n   56                  <i *ngIf=\"!ctrl.show\" class=\"material-icons\">keyboard_arrow_right</i>\n   ..\n   62        methods: {\n   63          init: ctx => cmp => {\n   64:                 cmp.expand_title = (ctrl) => \n   65                    ctrl.show ? 'collapse' : 'expand';\n   66                  cmp.toggle = newCtrl => \n\nC:\\jbart5-ng\\projects\\studio\\studio-styles.ts:\n  284          <div class=\"header\">\n  285            <div class=\"title\">{{ctrl.title}}</div>\n  286:           <div class=\"expand\" (click)=\"toggle(ctrl)\" title=\"{{expand_title(ctrl)}}\">\n  287                  <i *ngIf=\"ctrl.show\" class=\"material-icons\">keyboard_arrow_down</i>\n  288                  <i *ngIf=\"!ctrl.show\" class=\"material-icons\">keyboard_arrow_right</i>\n  ...\n  296        init: function (ctx) {\n  297                              return function (cmp) {\n  298:                                 cmp.expand_title = function (ctrl) {\n  299                                      return ctrl.show ? 'collapse' : 'expand';\n  300                                  };\n\n6 matches across 2 files\n\n\nSearching 120 files for \"expand_title\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\styles\\group-styles.ts:\n   18         <div class=\"header\">\n   19          <div class=\"title\">{{title}}</div>\n   20:         <button md-icon-button md-button (click)=\"toggle()\" title=\"{{expand_title()}}\">\n   21          <i *ngIf=\"show\" class=\"material-icons\">keyboard_arrow_down</i>\n   22          <i *ngIf=\"!show\" class=\"material-icons\">keyboard_arrow_right</i>\n   ..\n   31              return function (cmp) {\n   32                  cmp.show = true;\n   33:                 cmp.expand_title = () => cmp.show ? 'collapse' : 'expand';\n   34                  cmp.toggle = function () { cmp.show = !cmp.show; };\n   35              };\n   ..\n   52          <div class=\"header\">\n   53            <div class=\"title\">{{ctrl.title}}</div>\n   54:           <button md-icon-button md-button (click)=\"toggle(ctrl)\" title=\"{{expand_title(ctrl)}}\">\n   55                  <i *ngIf=\"ctrl.show\" class=\"material-icons\">keyboard_arrow_down</i>\n   56                  <i *ngIf=\"!ctrl.show\" class=\"material-icons\">keyboard_arrow_right</i>\n   ..\n   62        methods: {\n   63          init: ctx => cmp => {\n   64:                 cmp.expand_title = (ctrl) => \n   65                    ctrl.show ? 'collapse' : 'expand';\n   66                  cmp.toggle = newCtrl => \n\nC:\\jbart5-ng\\projects\\studio\\studio-styles.ts:\n  284          <div class=\"header\">\n  285            <div class=\"title\">{{ctrl.title}}</div>\n  286:           <div class=\"expand\" (click)=\"toggle(ctrl)\" title=\"{{expand_title(ctrl)}}\">\n  287                  <i *ngIf=\"ctrl.show\" class=\"material-icons\">keyboard_arrow_down</i>\n  288                  <i *ngIf=\"!ctrl.show\" class=\"material-icons\">keyboard_arrow_right</i>\n  ...\n  296        init: function (ctx) {\n  297                              return function (cmp) {\n  298:                                 cmp.expand_title = function (ctrl) {\n  299                                      return ctrl.show ? 'collapse' : 'expand';\n  300                                  };\n\n6 matches across 2 files\n\n\nSearching 120 files for \"('customStyle'\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\styles.js:\n    1  jbLoadModules(['jb-core','jb-ui']).then(loadedModules => { var jb = loadedModules['jb-core'].jb, jb_ui = loadedModules['jb-ui'];\n    2  \n    3: jb.component('customStyle', {\n    4  	typePattern: /.*-style/,\n    5  	params: [\n\n1 match in 1 file\n\n\nSearching 120 files for \"methods:\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\slider.ts:\n   41  			.slider_scale.aa_disabled { opacity: 0.5 }\n   42  `,\n   43: 		methods: {\n   44  			init: ctx => cmp => {\n   45  				cmp.slider = new Slider(ctx,cmp,$(cmp.elementRef.nativeElement));\n\nC:\\jbart5-ng\\src\\ui\\md-styles\\input-md.ts:\n   13     features :{$: 'editable-text.bindField' },\n   14     template: `<div><md-input %$field.modelExp% placeholder=\"{{title}}\"></md-input></div>`,\n   15:    methods: {\n   16        	init: ctx => cmp =>\n   17        		cmp.title = ctx.vars.$model.title()\n\nC:\\jbart5-ng\\src\\ui\\styles\\group-styles.ts:\n   27        </div>\n   28  </section>`, \n   29:       methods: {\n   30          init: function (ctx) {\n   31              return function (cmp) {\n   ..\n   60        </div>\n   61    </section>`, \n   62:       methods: {\n   63          init: ctx => cmp => {\n   64                  cmp.expand_title = (ctrl) => \n\nC:\\jbart5-ng\\src\\ui\\styles\\property-sheet-styles.ts:\n  101    impl :{$: 'customStyle', \n  102      features : {$: 'group.initGroup'},\n  103:     methods: {\n  104          init: ctx => cmp => {\n  105            cmp.getComp = ctrl =>\n  ...\n  174    impl :{$: 'customStyle', \n  175      features : {$: 'group.initGroup'},\n  176:     methods: {\n  177          afterViewInit: ctx => cmp =>\n  178            jb.delay(1).then(() =>\n\nC:\\jbart5-ng\\projects\\studio\\studio-styles.ts:\n   91    impl :{$: 'customStyle', \n   92      features :{$: 'group.initGroup' }, \n   93:     methods: {\n   94        afterViewInit: function (ctx) { return function (cmp) {\n   95                              return jb.delay(1).then(function () {\n   ..\n  293        </div>\n  294    </section>`, \n  295:     methods: {\n  296        init: function (ctx) {\n  297                              return function (cmp) {\n\nC:\\jbart5-ng\\src\\testing\\ui-testers-ctrls.ts:\n  212  // 		return jb_ui.Comp({ \n  213  // 			template: '<div>{{result}}</div>',\n  214: // 			methods: {\n  215  // 				init: function(cmp) {\n  216  // 					cmp.result = 'start: ';\n\nC:\\jbart5-ng\\src\\testing\\ui-testers.ts:\n   92  // 		return jb_ui.Comp({ \n   93  // 			template: '<div>{{result}}</div>',\n   94: // 			methods: {\n   95  // 				init: function(cmp) {\n   96  // 					cmp.result = 'start: ';\n\n10 matches across 7 files\n\n\nSearching 120 files for \"singleDataBind\" (case sensitive)\n\nC:\\jbart5-ng\\src\\core\\core.js:\n  355  function jb_toboolean(value) { return jb_tojstype(value,'boolean'); }\n  356  function jb_tosingle(value) { return jb_tojstype(value,'single'); }\n  357: function jb_tosingleDataBind(value) { return jb_tojstype(value,'singleDataBind'); }\n  358  function jb_tonumber(value) { return jb_tojstype(value,'number'); }\n  359  \n  ...\n  390        return value;\n  391      },\n  392:     'singleDataBind': function(value) {\n  393        if (Array.isArray(value)) return value[0];\n  394        if (!value) return value;\n\n3 matches in 1 file\n\n\nSearching 120 files for \"'editable-text'\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\editable-text.js:\n    3  jb.type('editable-text.style');\n    4  \n    5: jb.component('editable-text',{\n    6    type: 'control',\n    7    params: [\n\nC:\\jbart5-ng\\projects\\jbart-site\\jbart-site.ts:\n  174          ]\n  175        }, \n  176:       {$: 'editable-text', \n  177          style :{$: 'editable-text.md-input' }\n  178        }\n\nC:\\jbart5-ng\\projects\\material-demo\\material-demo.js:\n   22              style :{$: 'group.section' }, \n   23              controls: [\n   24:               {$: 'editable-text', \n   25                  databind: '%company%', \n   26                  title: 'Company (disabled)'\n   ..\n   30                  style :{$: 'layout.horizontal', spacing: '' }, \n   31                  controls: [\n   32:                   {$: 'editable-text', \n   33                      databind: '%firstName% %', \n   34                      title: 'First Name'\n   35                    }, \n   36:                   {$: 'editable-text', \n   37                      databind: '%lastName%', \n   38                      title: 'Long Last Name That Will Be Truncated'\n   ..\n   44                  style :{$: 'layout.vertical' }, \n   45                  controls: [\n   46:                   {$: 'editable-text', databind: '%address%', title: 'Address' }, \n   47:                   {$: 'editable-text', \n   48                      databind: '%address2%', \n   49                      title: 'Address2'\n   ..\n   55                  style :{$: 'layout.horizontal' }, \n   56                  controls: [\n   57:                   {$: 'editable-text', \n   58                      databind: '%city%', \n   59                      title: 'City', \n   60                      style :{$: 'editable-text.md-input', width: '122' }\n   61                    }, \n   62:                   {$: 'editable-text', databind: '%state%', title: 'State' }, \n   63:                   {$: 'editable-text', \n   64                      databind: '%postalCode%', \n   65                      title: 'Postal Code'\n   ..\n 1178      style :{$: 'layout.horizontal', spacing: 3 }, \n 1179      controls: [\n 1180:       {$: 'editable-text', \n 1181          databind: '%$sources/button%', \n 1182          style :{$: 'editable-text.codemirror', \n\nC:\\jbart5-ng\\projects\\studio\\studio-edit-source.ts:\n   13  		style :{$: 'dialog.studio-floating', id: 'edit source', width: 600 },\n   14  		features :{$: 'css', css: '.jb-dialog-content-parent {overflow-y: hidden}'},\n   15: 		content :{$: 'editable-text', \n   16  			databind :{$: 'studio.profile-as-text', path: '%$path%' },\n   17  			style :{$: 'editable-text.codemirror', mode: 'javascript'},\n\nC:\\jbart5-ng\\projects\\studio\\studio-jb-editor.ts:\n  162    type: 'control',\n  163    params: [ {id: 'path', as: 'string' } ],\n  164:   impl :{$: 'editable-text', \n  165        databind :{$: 'studio.profile-value-as-text', path: '%$path%' }, \n  166        features: [\n  ...\n  311            content :{$: 'group', \n  312              controls: [\n  313:               {$: 'editable-text', \n  314                  style :{$: 'editable-text.md-input' }, \n  315                  title: 'name', \n\nC:\\jbart5-ng\\projects\\studio\\studio-new-control.ts:\n   11      content :{$: 'group', \n   12        controls: [\n   13:         {$: 'editable-text', \n   14            databind: '%$globals/ctrl_pattern%', \n   15            style :{$: 'editable-text.md-input' }, \n   ..\n  101      content :{$: 'group', \n  102        controls: [\n  103:         {$: 'editable-text', \n  104            databind: '%$dialogData/name%', \n  105            features :{$: 'onEnter', \n\nC:\\jbart5-ng\\projects\\studio\\studio-open-project.ts:\n   27      title: 'itemlist-with-find', \n   28      controls: [\n   29:       {$: 'editable-text', \n   30          databind: '%$globals/project_pattern%', \n   31          title: 'search', \n\nC:\\jbart5-ng\\projects\\studio\\studio-popups.ts:\n   11  		$: 'openDialog',\n   12  		style :{$: 'dialog.studio-multiline-edit' },\n   13: 		content :{$: 'editable-text', \n   14  			databind :{$: 'studio.ref', path: '%$path%' },\n   15  			style :{$: 'editable-text.codemirror', \n\nC:\\jbart5-ng\\projects\\studio\\studio-properties.ts:\n  167      { id: 'path', as: 'string' }\n  168    ], \n  169:   impl :{$: 'editable-text', \n  170      style :{$: 'editable-text.studio-primitive-text' }, \n  171      title :{$: 'studio.prop-name', path: '%$path%' }, \n\nC:\\jbart5-ng\\projects\\studio\\studio-style-editor.ts:\n   69      style :{$: 'property-sheet.titles-above' }, \n   70      controls: [\n   71:       {$: 'editable-text', \n   72          title: 'css', \n   73          databind :{$: 'studio.profile-as-text',  path: '%$styleSource/path%~css', stringOnly: true }, \n   ..\n   75          style :{$: 'editable-text.codemirror', mode: 'css', height: 300 }\n   76        }, \n   77:       {$: 'editable-text', \n   78          title: 'template', \n   79          databind :{$: 'studio.profile-as-text',  path: '%$styleSource/path%~template', stringOnly: true }, \n   ..\n  117        features :{$: 'dialogFeature.autoFocusOnFirstInput' }\n  118      }, \n  119:     content :{$: 'editable-text', \n  120        databind: '%$dialogData/name%',\n  121        features :{$: 'feature.onEnter', action :{$: 'closeContainingPopup'} }\n\nC:\\jbart5-ng\\projects\\studio\\studio-tests.ts:\n   17  'studio-codemirror' :{$: 'studio-test', \n   18    page: 'main',\n   19: 	control :{$: 'editable-text', \n   20        databind: {$: 'studio.profile-as-text'}, \n   21  			style: { $: 'editable-text.codemirror' }\n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n  153  			image: 'insert_photo',\n  154  			'custom-control': 'build',\n  155: 			'editable-text': 'data_usage',\n  156  			'editable-boolean': 'radio_button',\n  157  			'editable-number': 'donut_large',\n\nC:\\jbart5-ng\\projects\\studio-helper\\studio-helper.ts:\n  171    impl :{$: 'group', \n  172      controls: [\n  173:       {$: 'editable-text', \n  174          title: 'aaa', \n  175          databind: '%$group-with-custom-style/title%', \n  ...\n  178        {$: 'tabs', \n  179          tabs: [\n  180:           {$: 'editable-text', \n  181              title: 'css', \n  182              databind: '%$group-with-custom-style/style/css%', \n  ...\n  184              features :{$: 'css', css: '{ width: 700px }' }\n  185            }, \n  186:           {$: 'editable-text', \n  187              title: 'template', \n  188              databind: '%$group-with-custom-style/style/template%', \n  ...\n  254      title: 'itemlist-with-find', \n  255      controls: [\n  256:       {$: 'editable-text', \n  257          databind: '%$globals/project_pattern%', \n  258          style :{$: 'editable-text.md-input' }, \n  ...\n  309            content :{$: 'group', \n  310              controls: [\n  311:               {$: 'editable-text', \n  312                  style :{$: 'editable-text.md-input', width: '230' }, \n  313                  features :{$: 'css.margin', top: '19', left: '23' }, \n  ...\n  334      title: 'itemlist-with-find', \n  335      controls: [\n  336:       {$: 'editable-text', \n  337          databind: '%$globals/ctrl_pattern%', \n  338          title: 'search', \n\nC:\\jbart5-ng\\projects\\ui-tests\\md-tests.ts:\n   24    type: 'test',\n   25    impl :{$: 'ng2-ui-test',  \n   26:     control :{ $: 'editable-text', \n   27        title: 'name', \n   28        databind: '%$person/name%', \n   ..\n   52          {$: 'group',\n   53                controls: [\n   54:                 { $: 'editable-text', title: 'name', databind: '%$person/name%', style :{$: 'editable-text.md-input'} },\n   55:                 { $: 'editable-text', title: 'name', databind: '%$person/name%', style :{$: 'editable-text.md-input'} },\n   56                ]\n   57          },\n\nC:\\jbart5-ng\\projects\\ui-tests\\ui-tests-old.js:\n   76  \n   77    'md-input' :{$: 'ng2-ui-test',  \n   78:     control :{ $: 'editable-text', \n   79        title: 'name', \n   80        databind: '%$person/name%', \n   ..\n  108          {$: 'group',\n  109                controls: [\n  110:                 { $: 'editable-text', title: 'name', databind: '%$person/name%', style :{$: 'editable-text.md-input'} },\n  111:                 { $: 'editable-text', title: 'name', databind: '%$person/name%', style :{$: 'editable-text.md-input'} },\n  112                ]\n  113          },\n  ...\n  446        style :{$: 'layout.horizontal' },\n  447        controls: [\n  448:         { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  449:         { $: 'editable-text', title: 'address', databind: '%$person/address%' },\n  450        ],\n  451    },\n  ...\n  453  },\n  454  \n  455: 'editable-text' :{$: 'ng2-ui-test',  \n  456:     control :{$: 'editable-text', \n  457        title: 'name', \n  458        databind: '%$person/name%' \n  ...\n  464    control :{$: 'group',\n  465          controls: [\n  466:           { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  467:           { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  468            { $: 'label', title: '%$person/name%' }\n  469          ]\n  ...\n  485        },\n  486        controls: [\n  487:           { $: 'editable-text', title: 'name', databind: '%$a1%' },\n  488:           { $: 'editable-text', title: 'name', databind: '%$a1%' },\n  489            { $: 'picklist', title: 'name', databind: '%$a1%', \n  490              options :{$: 'picklist.optionsByComma', \n  ...\n  502            style :{$: 'property-sheet.growing'},\n  503            controls: [\n  504:               { $: 'editable-text', \n  505                  title: 'name', \n  506                  databind: '%$person/name%',\n  ...\n  512                  }\n  513                },\n  514:               { $: 'editable-text', title: 'age', databind: '%$person/age%' },\n  515            ]\n  516    },\n  ...\n  522            style :{$: 'property-sheet.style-on-focus'},\n  523            controls: [\n  524:               { $: 'editable-text', \n  525                  title: 'name', \n  526                  databind: '%$person/name%',\n  ...\n  537                  ]\n  538                },\n  539:               { $: 'editable-text', title: 'age', databind: '%$person/age%' },\n  540            ]\n  541    },\n  ...\n  550              style :{$: 'property-sheet.titles-above-float-left' },\n  551              controls: [\n  552:               { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  553:               { $: 'editable-text', title: 'address', databind: '%$person/address%' },\n  554              ]\n  555        },\n  ...\n  566              style :{$: 'property-sheet.titles-left' },\n  567              controls: [\n  568:               { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  569:               { $: 'editable-text', title: 'address', databind: '%$person/address%' },\n  570              ]\n  571        },\n  ...\n  663      controls: \n  664      [\n  665:       { $: 'editable-text', \n  666            databind: '%$js/text%',\n  667            style :{$: 'editable-text.codemirror', mode: 'javascript'}\n  668        },\n  669:       { $: 'editable-text', \n  670            databind: '%$css/text%',\n  671            style :{$: 'editable-text.codemirror', mode: 'css'}\n  672        },\n  673:       { $: 'editable-text', \n  674            databind: '%$html/text%',\n  675            style :{$: 'editable-text.codemirror', mode: 'htmlmixed'}\n  ...\n  762        controls :{$: 'dynamic-controls', \n  763            controlItems: {$list: ['name','age']},\n  764:           genericControl: { $: 'editable-text', databind: '%$person/{%$controlItem%}%', title: '%$controlItem%' }\n  765        }\n  766    },\n\nC:\\jbart5-ng\\projects\\ui-tests\\ui-tests.ts:\n  355        style :{$: 'layout.horizontal' },\n  356        controls: [\n  357:         { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  358:         { $: 'editable-text', title: 'address', databind: '%$person/address%' },\n  359        ],\n  360    },\n  ...\n  365  jb.component('ui-test.editable-text', {\n  366    impl :{$: 'ng2-ui-test',  \n  367:     control :{$: 'editable-text', \n  368        title: 'name', \n  369        databind: '%$person/name%' \n  ...\n  377    control :{$: 'group',\n  378          controls: [\n  379:           { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  380:           { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  381            { $: 'label', title: '%$person/name%' }\n  382          ]\n  ...\n  400        },\n  401        controls: [\n  402:           { $: 'editable-text', title: 'name', databind: '%$a1%' },\n  403:           { $: 'editable-text', title: 'name', databind: '%$a1%' },\n  404            { $: 'picklist', title: 'name', databind: '%$a1%', \n  405              options :{$: 'picklist.optionsByComma', \n  ...\n  419            style :{$: 'property-sheet.growing'},\n  420            controls: [\n  421:               { $: 'editable-text', \n  422                  title: 'name', \n  423                  databind: '%$person/name%',\n  ...\n  429                  }\n  430                },\n  431:               { $: 'editable-text', title: 'age', databind: '%$person/age%' },\n  432            ]\n  433    },\n  ...\n  441            style :{$: 'property-sheet.style-on-focus'},\n  442            controls: [\n  443:               { $: 'editable-text', \n  444                  title: 'name', \n  445                  databind: '%$person/name%',\n  ...\n  456                  ]\n  457                },\n  458:               { $: 'editable-text', title: 'age', databind: '%$person/age%' },\n  459            ]\n  460    },\n  ...\n  471              style :{$: 'property-sheet.titles-above-float-left' },\n  472              controls: [\n  473:               { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  474:               { $: 'editable-text', title: 'address', databind: '%$person/address%' },\n  475              ]\n  476        },\n  ...\n  489              style :{$: 'property-sheet.titles-left' },\n  490              controls: [\n  491:               { $: 'editable-text', title: 'name', databind: '%$person/name%' },\n  492:               { $: 'editable-text', title: 'address', databind: '%$person/address%' },\n  493              ]\n  494        },\n  ...\n  596      controls: \n  597      [\n  598:       { $: 'editable-text', \n  599            databind: '%$js/text%',\n  600            style :{$: 'editable-text.codemirror', mode: 'javascript'}\n  601        },\n  602:       { $: 'editable-text', \n  603            databind: '%$css/text%',\n  604            style :{$: 'editable-text.codemirror', mode: 'css'}\n  605        },\n  606:       { $: 'editable-text', \n  607            databind: '%$html/text%',\n  608            style :{$: 'editable-text.codemirror', mode: 'htmlmixed'}\n  ...\n  707        controls :{$: 'dynamic-controls', \n  708            controlItems: {$list: ['name','age']},\n  709:           genericControl: { $: 'editable-text', databind: '%$person/{%$controlItem%}%', title: '%$controlItem%' }\n  710        }\n  711    },\n\nC:\\Dropbox\\mega\\mega.js:\n   30            }, \n   31            controls: [\n   32:             {$: 'editable-text', \n   33                style :{$: 'editable-text.input' }, \n   34                features :{$: 'group-item.if', \n\n76 matches across 17 files\n\n\nSearching 120 files for \"'material-demo.buttons2'\" (case sensitive)\n\nC:\\jbart5-ng\\projects\\material-demo\\material-demo.js:\n 1172  })\n 1173  \n 1174: jb.component('material-demo.buttons2', {\n 1175    type: 'control', \n 1176    impl :{$: 'group', \n\n1 match in 1 file\n\n\nSearching 120 files for \"button2\" (case sensitive)\n\nC:\\jbart5-ng\\projects\\material-demo\\material-demo.js:\n  138        </button>\n  139        <button md-raised-button (click)=\"button1.focus()\">Focus 1</button>\n  140:       <button md-raised-button (click)=\"button2.focus()\">Focus 2</button>\n  141        <button md-raised-button (click)=\"button3.focus()\">Focus 3</button>\n  142      </div>\n  ...\n 1139        </button>\n 1140        <button md-raised-button (click)=\"button1.focus()\">Focus 1</button>\n 1141:       <button md-raised-button (click)=\"button2.focus()\">Focus 2</button>\n 1142        <button md-raised-button (click)=\"button3.focus()\">Focus 3</button>\n 1143      </div>\n\n2 matches in 1 file\n\n\nSearching 120 files for \"profileFromPath\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\jb-ui.ts:\n  391  				  			$(this._nativeElement).addClass('jb-highlight-comp-changed'));\n  392  \n  393: 						if (jbart.profileFromPath) {\n  394: 							var prof = jbart.profileFromPath(this.comp.callerPath);\n  395  							var ctxToRun = this.comp.ctx.ctx({profile: prof, comp: this.comp.callerPath,path:''});\n  396  							var comp = ctxToRun.runItself();\n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n   10  		$jb_val: function(value) {\n   11  			if (typeof value == 'undefined') \n   12: 				return profileFromPath(path);\n   13  			else\n   14  				findjBartToLook(path).comps[path].impl = value;\n   ..\n   20  		$jb_val: function(value) {\n   21  			if (typeof value == 'undefined') \n   22: 				return profileFromPath(this.path);\n   23  \n   24: 			if (profileFromPath(parentPath(this.path)) == profileFromPath(this.path)) // flatten one-item array\n   25  				var actual_path = parentPath(this.path);\n   26  			else\n   27  				var actual_path = this.path;\n   28  			\n   29: 			var parent = profileFromPath(parentPath(actual_path));\n   30  			parent[actual_path.split('~').pop()] = value;\n   31  		}\n   ..\n   35  }\n   36  \n   37: export function profileFromPath(path,silent) {\n   38  	var id = path.split('~')[0];\n   39  	var comp = jbart_base().comps[id] || jbart.comps[id];\n   ..\n   49  	return comp && innerPath.split('~').reduce(function(obj, p) { \n   50  		if (!obj && !silent)\n   51: 			jb.logError('profileFromPath: non existing path '+ path+ ' property: ' + p);\n   52  		if (obj && p == '0' && obj[p] == null) // flatten one-item array\n   53  			return obj;\n   ..\n   61  }\n   62  \n   63: jbart.profileFromPath = profileFromPath;\n   64  \n   65  export var pathFixer = {\n   ..\n   88  	if (!path) return '';\n   89  	var _path = path;\n   90: 	while (profileFromPath(_path,true) == null && Number(_path.split('~').pop()) )\n   91  		_path = _path.replace(/([0-9]+)$/,(x,y) => Number(y)-1)\n   92  \n   93: 	while (profileFromPath(_path,true) == null && _path.indexOf('~') != -1)\n   94  		_path = parentPath(_path);\n   95  \n   96: 	if (profileFromPath(_path,true))\n   97  		return _path;\n   98  }\n\nC:\\jbart5-ng\\projects\\studio\\studio-probe.ts:\n  190    // setTrace() {\n  191    //   this.clearTrace();\n  192:   //   var profile = studio.profileFromPath(this.pathToTrace);\n  193    //   if (jb.compName(profile))\n  194    //     profile.$jbProbe = true;\n  ...\n  199    // }\n  200    // clearTrace() {\n  201:   //   var profile = studio.profileFromPath(this.pathToTrace);\n  202    //   if (jb.compName(profile))\n  203    //     delete profile.$jbProbe;\n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n    3  import * as jb_rx from 'jb-ui/jb-rx';\n    4  \n    5: import {profileFromPath,parentPath,profileRefFromPath,pathFixer} from './studio-path';\n    6  import {jbart_base,findjBartToLook,compAsStr,getComp,modifyOperationsEm,evalProfile} from './studio-utils';\n    7  \n    .\n   11  \n   12  	val(path) { \n   13: 		return profileFromPath(path) \n   14  	}\n   15  \n   ..\n   18  			return this.jbEditorSubNodes(path);\n   19  \n   20: 		var val = profileFromPath(path);\n   21  		if (childrenType == 'controls') {\n   22  			return [].concat.apply([],\n   ..\n   59  \n   60  	jbEditorSubNodes(path) {\n   61: 		var val = profileFromPath(path);\n   62  		var compName = jb.compName(val||{});\n   63  		var comp = getComp(compName);\n   ..\n   77  					.filter(p=>!p.composite)\n   78  					.map(p=> ({ path: path + '~' + p.id, param: p}))\n   79: 					.filter(e=>profileFromPath(e.path) != null || e.param.essential)\n   80  					.map(e=>e.path)\n   81  				)\n   ..\n   95  \n   96  	jbEditorMoreParams(path) {\n   97: 		var val = profileFromPath(path);\n   98  		var comp = getComp(jb.compName(val||{}));\n   99  		if (comp) {\n  ...\n  108  \n  109  	jbEditorTitle(path, collapsed) { \n  110: 		var val = profileFromPath(path);\n  111  		var compName = jb.compName(val||{});\n  112  		var prop = path.split('~').pop();\n  ...\n  126  	title(path, collapsed) {\n  127  		collapsed = collapsed || this.isArray(path);\n  128: 		var val = profileFromPath(path);\n  129  		if (path.indexOf('~') == -1)\n  130  			return path;\n  ...\n  138  	icon(path) {\n  139  		if (parentPath(path)) {\n  140: 			var parentVal = profileFromPath(parentPath(path));\n  141  			if (Array.isArray(parentVal) && path.split('~').pop() == parentVal.length)\n  142  				return 'add';\n  143  		}\n  144  		if (this.paramType(path) == 'control') {\n  145: 			if (profileFromPath(path+'~style',true) && this.compName(path+'~style') == 'layout.horizontal')\n  146  				return 'view_column'\n  147  			return 'folder_open'; //'view_headline' , 'folder_open'\n  ...\n  168  \n  169  	compName(path) {\n  170: 		var val = profileFromPath(path);\n  171  		return val && jb.compName(val);\n  172  	}\n  ...\n  214  	_delete(path) {\n  215  		var prop = path.split('~').pop();\n  216: 		var parent = profileFromPath(parentPath(path))\n  217  		if (Array.isArray(parent)) {\n  218  			var index = Number(prop);\n  ...\n  223  			if (parent[prop] === undefined) { // array type with one element\n  224  				var pathToDelete = parentPath(path);\n  225: 				var parent = profileFromPath(parentPath(pathToDelete));\n  226  				var prop = pathToDelete.split('~').pop();\n  227  			}\n  ...\n  232  \n  233  	move(path,args) { // drag & drop\n  234: 		var dragged = profileFromPath(args.dragged);\n  235  		var arr = this.getOrCreateArray(path);\n  236  		if (arr) {\n  ...\n  245  \n  246  	moveInArray(path,args) { // drag & drop\n  247: 		var arr = profileFromPath(parentPath(path));\n  248  		if (Array.isArray(arr)) {\n  249  			var index = Number(path.split('~').pop());\n  ...\n  265  \n  266  	wrapWithPipeline(path) {\n  267: 		jb.writeValue(profileRefFromPath(path),[ profileFromPath(path) ]);\n  268  	}\n  269  \n  270  	wrapWithGroup(path) {\n  271: 		var result = { $: 'group', controls: [ profileFromPath(path) ] };\n  272  		jb.writeValue(profileRefFromPath(path),result);\n  273  	}\n  ...\n  276  		var firstParam = ((compDef || {}).params || [])[0];\n  277  		if (firstParam) {\n  278: 			var result = jb.extend({ $: args.compName }, jb.obj(firstParam.id, [profileFromPath(path)]));\n  279  			jb.writeValue(profileRefFromPath(path),result);\n  280  		}\n  ...\n  292  \n  293  	addProperty(path) {\n  294: 		var parent = profileFromPath(parentPath(path));\n  295  		if (this.paramType(path) == 'data')\n  296  			return jb.writeValue(profileRefFromPath(path),'');\n  ...\n  301  	duplicate(path) {\n  302  		var prop = path.split('~').pop();\n  303: 		var val = profileFromPath(path);\n  304  		var arr = this.getOrCreateArray(parentPath(parentPath(path)));\n  305  		if (Array.isArray(arr)) {\n  ...\n  317  		if (!compName || !comp) return;\n  318  		var result = { $: compName };\n  319: 		var existing = profileFromPath(path);\n  320  		// copy properties from existing & default values\n  321  		if (existing && typeof existing == 'object')\n  ...\n  359  		var res = JSON.stringify(comp.impl, (key, val) => typeof val === 'function' ? ''+val : val , 4);\n  360  \n  361: 		var profile = profileFromPath(path);\n  362  		// inject conditional param values\n  363  		(comp.params||[])\n  ...\n  396  		if (!isNaN(Number(path.split('~').pop()))) // array elements\n  397  			path = parentPath(path);\n  398: 		var parent_prof = profileFromPath(parentPath(path),true);\n  399  		var compDef = parent_prof && getComp(jb.compName(parent_prof));\n  400  		var params = (compDef || {}).params || [];\n  ...\n  429  	}\n  430  	controlParams(path) {\n  431: 		var prof = profileFromPath(path,true);\n  432  		if (!prof) return [];\n  433  		var params = (getComp(jb.compName(prof)) || {}).params || [];\n  ...\n  435  	}\n  436  	nonControlParams(path) {\n  437: 		var prof = profileFromPath(path);\n  438  		if (!prof) return [];\n  439  		var params = (getComp(jb.compName(prof)) || {}).params || [];\n  ...\n  444  \n  445  	getOrCreateArray(path) {\n  446: 		var val = profileFromPath(path);\n  447  		var prop = this.controlParam(path);\n  448  		if (!prop)\n  ...\n  456  \n  457  	addArrayItem(path,args) {\n  458: 		var val = profileFromPath(path);\n  459  		var toAdd = args.toAdd || {$:''};\n  460  		if (Array.isArray(val))\n  ...\n  467  \n  468  	fixArray(path) { // turn arrays with single element into single object\n  469: 		// var val = profileFromPath(path);\n  470  		// var prop = controlParam(path);\n  471  		// if (!prop) return;\n  ...\n  481  \n  482  		var paramDef = this.paramDef(path);\n  483: 		var val = profileFromPath(path);\n  484  		if ((paramDef.type ||'').indexOf('[]') != -1) {\n  485  			var length = this.subNodes(path,'array').length;\n\nC:\\jbart5-ng\\projects\\studio\\studio-utils.ts:\n    5  \n    6  import {model} from './studio-tgp-model';\n    7: import {profileFromPath} from './studio-path';\n    8  \n    9  export var modifyOperationsEm = new jb_rx.Subject();\n   ..\n   17      var firstCtrl = sub_paths\n   18        .filter(p=>\n   19:       	model.isCompNameOfType(jb.compName(profileFromPath(p)),'control'))\n   20        [0];\n   21       return firstCtrl ? [{ path: firstCtrl}] : [];\n\n47 matches across 5 files\n\n\nSearching 120 files for \"profileFromPath\" (case sensitive)\n\nC:\\jbart5-ng\\src\\ui\\jb-ui.ts:\n  391  				  			$(this._nativeElement).addClass('jb-highlight-comp-changed'));\n  392  \n  393: 						if (jbart.profileFromPath) {\n  394: 							var prof = jbart.profileFromPath(this.comp.callerPath);\n  395  							var ctxToRun = this.comp.ctx.ctx({profile: prof, comp: this.comp.callerPath,path:''});\n  396  							var comp = ctxToRun.runItself();\n\nC:\\jbart5-ng\\projects\\studio\\studio-main.ts:\n  213  						w.jbart.studioActivityEm = studioActivityEm;\n  214  						w.jbart.modifiedCtrlsEm = jbart.modifiedCtrlsEm;\n  215:             w.jbart.profileFromPath = jbart.profileFromPath;\n  216  						jbart.previewWindow = w;\n  217  						jbart.previewjbart = w.jbart;\n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n   10  		$jb_val: function(value) {\n   11  			if (typeof value == 'undefined') \n   12: 				return profileFromPath(path);\n   13  			else\n   14  				findjBartToLook(path).comps[path].impl = value;\n   ..\n   20  		$jb_val: function(value) {\n   21  			if (typeof value == 'undefined') \n   22: 				return profileFromPath(this.path);\n   23  \n   24: 			if (profileFromPath(parentPath(this.path)) == profileFromPath(this.path)) // flatten one-item array\n   25  				var actual_path = parentPath(this.path);\n   26  			else\n   27  				var actual_path = this.path;\n   28  			\n   29: 			var parent = profileFromPath(parentPath(actual_path));\n   30  			parent[actual_path.split('~').pop()] = value;\n   31  		}\n   ..\n   35  }\n   36  \n   37: export function profileFromPath(path,silent) {\n   38  	var id = path.split('~')[0];\n   39  	var comp = jbart_base().comps[id] || jbart.comps[id];\n   ..\n   49  	return comp && innerPath.split('~').reduce(function(obj, p) { \n   50  		if (!obj && !silent)\n   51: 			jb.logError('profileFromPath: non existing path '+ path+ ' property: ' + p);\n   52  		if (obj && p == '0' && obj[p] == null) // flatten one-item array\n   53  			return obj;\n   ..\n   61  }\n   62  \n   63: jbart.profileFromPath = profileFromPath;\n   64  \n   65  export var pathFixer = {\n   ..\n   88  	if (!path) return '';\n   89  	var _path = path;\n   90: 	while (profileFromPath(_path,true) == null && Number(_path.split('~').pop()) )\n   91  		_path = _path.replace(/([0-9]+)$/,(x,y) => Number(y)-1)\n   92  \n   93: 	while (profileFromPath(_path,true) == null && _path.indexOf('~') != -1)\n   94  		_path = parentPath(_path);\n   95  \n   96: 	if (profileFromPath(_path,true))\n   97  		return _path;\n   98  }\n\nC:\\jbart5-ng\\projects\\studio\\studio-probe.ts:\n  190    // setTrace() {\n  191    //   this.clearTrace();\n  192:   //   var profile = studio.profileFromPath(this.pathToTrace);\n  193    //   if (jb.compName(profile))\n  194    //     profile.$jbProbe = true;\n  ...\n  199    // }\n  200    // clearTrace() {\n  201:   //   var profile = studio.profileFromPath(this.pathToTrace);\n  202    //   if (jb.compName(profile))\n  203    //     delete profile.$jbProbe;\n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n    3  import * as jb_rx from 'jb-ui/jb-rx';\n    4  \n    5: import {profileFromPath,parentPath,profileRefFromPath,pathFixer} from './studio-path';\n    6  import {jbart_base,findjBartToLook,compAsStr,getComp,modifyOperationsEm,evalProfile} from './studio-utils';\n    7  \n    .\n   11  \n   12  	val(path) { \n   13: 		return profileFromPath(path) \n   14  	}\n   15  \n   ..\n   18  			return this.jbEditorSubNodes(path);\n   19  \n   20: 		var val = profileFromPath(path);\n   21  		if (childrenType == 'controls') {\n   22  			return [].concat.apply([],\n   ..\n   59  \n   60  	jbEditorSubNodes(path) {\n   61: 		var val = profileFromPath(path);\n   62  		var compName = jb.compName(val||{});\n   63  		var comp = getComp(compName);\n   ..\n   77  					.filter(p=>!p.composite)\n   78  					.map(p=> ({ path: path + '~' + p.id, param: p}))\n   79: 					.filter(e=>profileFromPath(e.path) != null || e.param.essential)\n   80  					.map(e=>e.path)\n   81  				)\n   ..\n   95  \n   96  	jbEditorMoreParams(path) {\n   97: 		var val = profileFromPath(path);\n   98  		var comp = getComp(jb.compName(val||{}));\n   99  		if (comp) {\n  ...\n  108  \n  109  	jbEditorTitle(path, collapsed) { \n  110: 		var val = profileFromPath(path);\n  111  		var compName = jb.compName(val||{});\n  112  		var prop = path.split('~').pop();\n  ...\n  126  	title(path, collapsed) {\n  127  		collapsed = collapsed || this.isArray(path);\n  128: 		var val = profileFromPath(path);\n  129  		if (path.indexOf('~') == -1)\n  130  			return path;\n  ...\n  138  	icon(path) {\n  139  		if (parentPath(path)) {\n  140: 			var parentVal = profileFromPath(parentPath(path));\n  141  			if (Array.isArray(parentVal) && path.split('~').pop() == parentVal.length)\n  142  				return 'add';\n  143  		}\n  144  		if (this.paramType(path) == 'control') {\n  145: 			if (profileFromPath(path+'~style',true) && this.compName(path+'~style') == 'layout.horizontal')\n  146  				return 'view_column'\n  147  			return 'folder_open'; //'view_headline' , 'folder_open'\n  ...\n  168  \n  169  	compName(path) {\n  170: 		var val = profileFromPath(path);\n  171  		return val && jb.compName(val);\n  172  	}\n  ...\n  214  	_delete(path) {\n  215  		var prop = path.split('~').pop();\n  216: 		var parent = profileFromPath(parentPath(path))\n  217  		if (Array.isArray(parent)) {\n  218  			var index = Number(prop);\n  ...\n  223  			if (parent[prop] === undefined) { // array type with one element\n  224  				var pathToDelete = parentPath(path);\n  225: 				var parent = profileFromPath(parentPath(pathToDelete));\n  226  				var prop = pathToDelete.split('~').pop();\n  227  			}\n  ...\n  232  \n  233  	move(path,args) { // drag & drop\n  234: 		var dragged = profileFromPath(args.dragged);\n  235  		var arr = this.getOrCreateArray(path);\n  236  		if (arr) {\n  ...\n  245  \n  246  	moveInArray(path,args) { // drag & drop\n  247: 		var arr = profileFromPath(parentPath(path));\n  248  		if (Array.isArray(arr)) {\n  249  			var index = Number(path.split('~').pop());\n  ...\n  265  \n  266  	wrapWithPipeline(path) {\n  267: 		jb.writeValue(profileRefFromPath(path),[ profileFromPath(path) ]);\n  268  	}\n  269  \n  270  	wrapWithGroup(path) {\n  271: 		var result = { $: 'group', controls: [ profileFromPath(path) ] };\n  272  		jb.writeValue(profileRefFromPath(path),result);\n  273  	}\n  ...\n  276  		var firstParam = ((compDef || {}).params || [])[0];\n  277  		if (firstParam) {\n  278: 			var result = jb.extend({ $: args.compName }, jb.obj(firstParam.id, [profileFromPath(path)]));\n  279  			jb.writeValue(profileRefFromPath(path),result);\n  280  		}\n  ...\n  292  \n  293  	addProperty(path) {\n  294: 		var parent = profileFromPath(parentPath(path));\n  295  		if (this.paramType(path) == 'data')\n  296  			return jb.writeValue(profileRefFromPath(path),'');\n  ...\n  301  	duplicate(path) {\n  302  		var prop = path.split('~').pop();\n  303: 		var val = profileFromPath(path);\n  304  		var arr = this.getOrCreateArray(parentPath(parentPath(path)));\n  305  		if (Array.isArray(arr)) {\n  ...\n  317  		if (!compName || !comp) return;\n  318  		var result = { $: compName };\n  319: 		var existing = profileFromPath(path);\n  320  		// copy properties from existing & default values\n  321  		if (existing && typeof existing == 'object')\n  ...\n  359  		var res = JSON.stringify(comp.impl, (key, val) => typeof val === 'function' ? ''+val : val , 4);\n  360  \n  361: 		var profile = profileFromPath(path);\n  362  		// inject conditional param values\n  363  		(comp.params||[])\n  ...\n  396  		if (!isNaN(Number(path.split('~').pop()))) // array elements\n  397  			path = parentPath(path);\n  398: 		var parent_prof = profileFromPath(parentPath(path),true);\n  399  		var compDef = parent_prof && getComp(jb.compName(parent_prof));\n  400  		var params = (compDef || {}).params || [];\n  ...\n  429  	}\n  430  	controlParams(path) {\n  431: 		var prof = profileFromPath(path,true);\n  432  		if (!prof) return [];\n  433  		var params = (getComp(jb.compName(prof)) || {}).params || [];\n  ...\n  435  	}\n  436  	nonControlParams(path) {\n  437: 		var prof = profileFromPath(path);\n  438  		if (!prof) return [];\n  439  		var params = (getComp(jb.compName(prof)) || {}).params || [];\n  ...\n  444  \n  445  	getOrCreateArray(path) {\n  446: 		var val = profileFromPath(path);\n  447  		var prop = this.controlParam(path);\n  448  		if (!prop)\n  ...\n  456  \n  457  	addArrayItem(path,args) {\n  458: 		var val = profileFromPath(path);\n  459  		var toAdd = args.toAdd || {$:''};\n  460  		if (Array.isArray(val))\n  ...\n  467  \n  468  	fixArray(path) { // turn arrays with single element into single object\n  469: 		// var val = profileFromPath(path);\n  470  		// var prop = controlParam(path);\n  471  		// if (!prop) return;\n  ...\n  481  \n  482  		var paramDef = this.paramDef(path);\n  483: 		var val = profileFromPath(path);\n  484  		if ((paramDef.type ||'').indexOf('[]') != -1) {\n  485  			var length = this.subNodes(path,'array').length;\n\nC:\\jbart5-ng\\projects\\studio\\studio-utils.ts:\n    5  \n    6  import {model} from './studio-tgp-model';\n    7: import {profileFromPath} from './studio-path';\n    8  \n    9  export var modifyOperationsEm = new jb_rx.Subject();\n   ..\n   17      var firstCtrl = sub_paths\n   18        .filter(p=>\n   19:       	model.isCompNameOfType(jb.compName(profileFromPath(p)),'control'))\n   20        [0];\n   21       return firstCtrl ? [{ path: firstCtrl}] : [];\n\n49 matches across 6 files\n\n\nSearching 120 files for \"jbart_base\" (case sensitive)\n\nC:\\jbart5-ng\\projects\\studio\\studio-path.ts:\n    1  import {jb} from 'jb-core';\n    2: import {jbart_base,compAsStr,findjBartToLook,pathChangesEm,notifyModification} from './studio-utils';\n    3  \n    4  export function parentPath(path) {\n    .\n   37  export function profileFromPath(path,silent) {\n   38  	var id = path.split('~')[0];\n   39: 	var comp = jbart_base().comps[id] || jbart.comps[id];\n   40  	comp = comp && comp.impl;\n   41  	if (!comp) {\n\nC:\\jbart5-ng\\projects\\studio\\studio-probe.ts:\n    3  \n    4  import {model} from './studio-tgp-model';\n    5: import {jbart_base} from './studio-utils';\n    6  import {parentPath} from './studio-path';\n    7  \n    .\n   71    params: [ { id: 'path', as: 'string', dynamic: true } ],\n   72    impl: (ctx,path) => {\n   73:       var _jbart = jbart_base();\n   74        var _win = jbart.previewWindow || window;\n   75        var circuit = ctx.exp('%$circuit%') || ctx.exp('%$globals/project%.%$globals/page%');\n   ..\n   83    // test the control as a dialog\n   84    return new Promise((resolve,reject)=> {\n   85:     var _jbart = jbart_base();\n   86      var _win = jbart.previewWindow || window;\n   87      var dialog = { \n\nC:\\jbart5-ng\\projects\\studio\\studio-tgp-model.ts:\n    4  \n    5  import {profileFromPath,parentPath,profileRefFromPath,pathFixer} from './studio-path';\n    6: import {jbart_base,findjBartToLook,compAsStr,getComp,modifyOperationsEm,evalProfile} from './studio-utils';\n    7  \n    8  // The jbart control model return string paths and methods to fix them on change\n    .\n  176  	}\n  177  	isCompNameOfType(name,type) {\n  178: 		var _jbart = jbart_base().comps[name] ? jbart_base() : jbart;\n  179  		if (name && _jbart.comps[name]) {\n  180  			while (!_jbart.comps[name].type && jb.compName(jbart.comps[name].impl))\n  ...\n  417  				x=='data' ? ['data','aggregator'] : [x]));\n  418  		var comp_arr = types.map(t=>\n  419: 			jb_entries((jbartToLook || jbart_base()).comps)\n  420  				.filter(c=>\n  421  					(c[1].type||'data').split(',').indexOf(t) != -1\n  ...\n  696  	impl: (context,project) => {\n  697  		if (!project) return;\n  698: 		var comps = jb.entries(jbart_base().comps).map(x=>x[0]).filter(x=>x.indexOf(project) == 0);\n  699  		return comps.map(comp=>compAsStr(comp)).join('\\n\\n')\n  700  	}\n\nC:\\jbart5-ng\\projects\\studio\\studio-undo.ts:\n   63  \n   64  \n   65: function doSetComp(jbart_base,id,comp) {\n   66: 	jbart_base.comps[id] = comp;\n   67  }\n   68  \n   69: function setComp(code,jbart_base) {\n   70: 	var fixed = code.replace(/^jb.component\\(/,'doSetComp(jbart_base,')\n   71  	try {\n   72  		return eval(`(${fixed})`)\n\nC:\\jbart5-ng\\projects\\studio\\studio-utils.ts:\n   36  }\n   37  \n   38: export function jbart_base() {\n   39  	return jbart.previewjbart || jbart;\n   40  }\n   ..\n   42  export function findjBartToLook(path) {\n   43  	var id = path.split('~')[0];\n   44: 	if (jbart_base().comps[id])\n   45: 		return jbart_base();\n   46  	if (jbart.comps[id])\n   47  		return jbart;\n   ..\n   49  \n   50  export function getComp(id) {\n   51: 	return jbart_base().comps[id] || jbart.comps[id];\n   52  }\n   53  \n   ..\n  109  	impl: (context,project) => {\n  110  		if (!project) return;\n  111: 		var comps = jb.entries(jbart_base().comps).map(x=>x[0]).filter(x=>x.indexOf(project) == 0);\n  112  		return comps.map(comp=>compAsStr(comp)).join('\\n\\n')\n  113  	}\n\n19 matches across 5 files\n",
			"settings":
			{
				"buffer_size": 375124,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/C/jbart5-ng/projects/studio/studio-styles.ts",
			"settings":
			{
				"buffer_size": 11925,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/src/ui/styles/group-styles.ts",
			"settings":
			{
				"buffer_size": 3398,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "jbLoadModules(['jb-core','jb-ui','jb-ui/jb-rx']).then(loadedModules => { var jb = loadedModules['jb-core'].jb, jb_ui = loadedModules['jb-ui'], jb_rx = loadedModules['jb-ui/jb-rx'];\n\njb.component('group.wait', {\n  type: 'feature',\n  params: [ \n    { id: 'for', essential: true },\n    { id: 'loadingControl', type: 'control', defaultValue: { $:'label', title: 'loading ...'} , dynamic: true },\n    { id: 'error', type: 'control', defaultValue: { $:'label', title: 'error: %$error%', css: '{color: red; font-weight: bold}'} , dynamic: true },\n    { id: 'resource', as: 'string' },\n    { id: 'mapToResource', dynamic: true, defaultValue: '%%' },\n  ],\n  impl: function(context,waitFor,loading,error) { \n    return {\n      beforeInit: function(cmp) {\n          var waiting = cmp.jbWait();\n          cmp.jbGroupChildrenEm = jb_rx.observableFromCtx(context.setData(waitFor))\n            .flatMap(x=>{\n                var data = context.params.mapToResource(x);\n                jb.writeToResource(context.params.resource,data,context);\n                return [context.vars.$model.controls(cmp.ctx.setData(data))];\n              })\n            .do(x=>\n              jb_ui.delayOutsideAngular(context,() => \n                waiting.ready()))\n            .startWith([loading(context)])\n            .catch(e=> \n              jb_rx.Observable.of([error(context.setVars({error:e}))]));\n      },\n      observable: () => {} // to create jbEmitter\n  }}\n})\n\n// bind data and watch the data to refresh the control\njb.component('group.data', {\n  type: 'feature',\n  params: [\n    { id: 'data', essential: true, dynamic: true, as: 'ref' },\n    { id: 'itemVariable', as: 'string' },\n    { id: 'watch', type: 'boolean', as: 'boolean', defaultValue: true }\n  ],\n  impl: function(context, data, itemVariable,watch) {\n    return {\n      beforeInit: function(cmp) {\n          var dataEm = cmp.jbEmitter\n              .filter(x => x == 'check')\n              .map(()=> \n                jb.val(data())) \n              .distinctUntilChanged(jb_compareArrays)\n              .map(val=> {\n                  var ctx2 = (cmp.refreshCtx ? cmp.refreshCtx(cmp.ctx) : cmp.ctx).setData(val);\n                  var ctx3 = itemVariable ? ctx2.setVars(jb.obj(itemVariable,val)) : ctx2;\n                  return context.vars.$model.controls(ctx3)\n              })\n\n          cmp.jbGroupChildrenEm = watch ? dataEm : dataEm.take(1);\n      },\n      observable: () => {} // to create jbEmitter\n  }}\n})\n\njb.component('group.watch', {\n  type: 'feature',\n  params: [\n    { id: 'data', essential: true, dynamic: true },\n  ],\n  impl: (context, data) => ({\n      beforeInit: function(cmp) {\n          cmp.jbWatchGroupChildrenEm = (cmp.jbWatchGroupChildrenEm || jb_rx.Observable.of())\n              .merge(cmp.jbEmitter\n                .filter(x => x == 'check')\n                .map(()=> \n                  jb.val(data())) \n                .filter(x=>x != null)\n                .distinctUntilChanged(jb_compareArrays)\n                .map(val=> {\n                    var ctx2 = (cmp.refreshCtx ? cmp.refreshCtx(cmp.ctx) : cmp.ctx);\n                    return context.vars.$model.controls(ctx2)\n                })\n            )\n      },\n      observable: () => {} // to create jbEmitter\n  })\n})\n\njb.component('group-item.if', {\n  type: 'feature',\n  params: [\n    { id: 'showCondition', type: 'boolean', as: 'boolean', essential: true },\n  ],\n  impl: (context, condition) => ({\n    invisible: !condition\n  })\n})\n\n\n\njb.component('feature.init', {\n  type: 'feature',\n  params: [\n    { id: 'action', type: 'action[]', essential: true, dynamic: true }\n  ],\n  impl: (ctx,action) => ({init: cmp => \n      action(cmp.ctx)\n  })\n})\n\njb.component('feature.ng-attach-object', {\n  type: 'feature',\n  params: [\n    { id: 'data', as: 'single', dynamic: true }\n  ],\n  impl: (ctx,data) => ({init: cmp => {\n      var obj = data(cmp.ctx);\n      jb.extend(cmp,obj);\n      jb.extend(cmp.constructor.prototype,obj.constructor.prototype || {});\n  }})\n})\n\njb.component('feature.disableChangeDetection', {\n  type: 'feature',\n  impl: (ctx) => ({\n      disableChangeDetection: true })\n})\n\njb.component('feature.onEnter', {\n  type: 'feature',\n  params: [\n    { id: 'action', type: 'action[]', essential: true, dynamic: true }\n  ],\n  impl: ctx => ({ \n      host: {\n        '(keydown)': 'keydownSrc.next($event)',\n        'tabIndex': '0',\n      },\n      init: cmp=> {\n        cmp.keydownSrc = cmp.keydownSrc || new jb_rx.Subject();\n        cmp.keydown = cmp.keydownSrc\n          .takeUntil( cmp.jbEmitter.filter(x=>x =='destroy') );\n\n        cmp.keydown.filter(e=> e.keyCode == 13)\n            .subscribe(()=>\n              jb_ui.wrapWithLauchingElement(ctx.params.action, cmp.ctx, cmp.elementRef)())\n      },\n      observable: () => {},\n  })\n})\n\n\njb.component('ngAtts', {\n  type: 'feature',\n  params: [\n    { id: 'atts', as: 'single' }\n  ],\n  impl: (ctx,atts) => \n    ({atts:atts})\n})\n\njb.component('feature.afterLoad', {\n  type: 'feature',\n  params: [\n    { id: 'action', type: 'action[]', essential: true, dynamic: true }\n  ],\n  impl: function(context) { return  { \n    afterViewInit: cmp => jb.delay(1).then(() => context.params.action(cmp.ctx))\n  }}\n})\n\njb.component('feature.emitter',{\n  type: 'feature',\n  params: [\n    { id: 'varName', as: 'string'},\n  ],\n  impl: function(context,varName) { return  { \n    extendCtx: (ctx,cmp) => \n      ctx.setVars(jb.obj(varName,cmp.jbEmitter)),\n    observable: (obs,ctx) => {},\n  }}\n})\n\njb.component('var',{\n  type: 'feature',\n  params: [\n    { id: 'name', as: 'string'},\n    { id: 'value', dynamic: true },\n  ],\n  impl: (context,name,value) => \n    jb.extend({}, name && {\n      extendCtx: ctx =>\n        ctx.setVars(jb.obj(name,value(ctx)))\n    })\n})\n\njb.component('hidden', {\n  type: 'feature',\n  params: [\n    { id: 'showCondition', type: 'boolean', essential: true, dynamic: true },\n  ],\n  impl: function(context,showCondition) { return {\n      init: function(cmp) {\n        cmp.jb_hidden = () =>\n          !showCondition(cmp.ctx)\n      },\n      atts: { '[hidden]': 'jb_hidden()'}\n    }\n  }\n})\n\njb.component('field.style-on-focus', {\n  type: 'feature',\n  params: [\n    { id: 'style', type: 'style', essential: true, dynamic: true },\n  ],\n  impl: ctx => ({\n    extendComp: { jb_styleOnFocus: ctx.profile.style }\n  })\n})\n\n\njb.component('feature.keyboard-shortcut', {\n  type: 'feature',\n  params: [\n    { id: 'key', as: 'string', description: 'e.g. Alt+C' },\n    { id: 'action', type: 'action', dynamic: true }\n  ],\n  impl: (context,key,action) => \n    ({\n      init: function(cmp) {\n            var doc = cmp.elementRef.nativeElement.ownerDocument;\n            $(doc).keydown(event => {\n                var keyCode = key.split('+').pop().charCodeAt(0);\n                if (key == 'Delete') keyCode = 46;\n\n                var helper = (key.match('([A-Za-z]*)+') || ['',''])[1];\n                if (helper == 'Ctrl' && !event.ctrlKey) return\n                if (helper == 'Alt' && !event.altKey) return\n                if (event.keyCode == keyCode)\n                action();\n            })\n          }\n    })\n})\n\n})",
			"file": "/C/jbart5-ng/src/ui/features.js",
			"file_size": 7317,
			"file_write_time": 131173778756663718,
			"settings":
			{
				"buffer_size": 7075,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/src/ui/styles.js",
			"settings":
			{
				"buffer_size": 1624,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/src/loader/load-jbart.js",
			"settings":
			{
				"buffer_size": 7090,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/ui-tests/single-test.html",
			"settings":
			{
				"buffer_size": 656,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/src/testing/ui-testers.ts",
			"settings":
			{
				"buffer_size": 4449,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/ui-tests/tests.html",
			"settings":
			{
				"buffer_size": 531,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/src/ui/editable-text.js",
			"settings":
			{
				"buffer_size": 1180,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/src/ui/tree/tree.ts",
			"settings":
			{
				"buffer_size": 10863,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/material-demo/material-demo.js",
			"settings":
			{
				"buffer_size": 38034,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/material-demo/material-demo.html",
			"settings":
			{
				"buffer_size": 629,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/studio/studio-tree.ts",
			"settings":
			{
				"buffer_size": 5172,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/studio/studio-save.ts",
			"settings":
			{
				"buffer_size": 1364,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/jbart-studio.js",
			"settings":
			{
				"buffer_size": 13622,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/material-demo/ng-material-demo-loader.ts",
			"settings":
			{
				"buffer_size": 5501,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/src/core/components.js",
			"settings":
			{
				"buffer_size": 21515,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/studio/studio-main.ts",
			"settings":
			{
				"buffer_size": 9864,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/src/ui/tree/json-tree.ts",
			"settings":
			{
				"buffer_size": 1363,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/src/ui/css-features.js",
			"settings":
			{
				"buffer_size": 3582,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/studio/studio-testers.ts",
			"settings":
			{
				"buffer_size": 3879,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/studio-helper/path-tests.ts",
			"settings":
			{
				"buffer_size": 4108,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/studio/studio-jb-editor.ts",
			"settings":
			{
				"buffer_size": 10628,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/studio/studio-model-components.ts",
			"settings":
			{
				"buffer_size": 4507,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/studio/studio-path.ts",
			"settings":
			{
				"buffer_size": 5417,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/studio/studio-popups.ts",
			"settings":
			{
				"buffer_size": 5599,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/studio/studio-properties.ts",
			"settings":
			{
				"buffer_size": 17160,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/studio/studio-tgp-model.ts",
			"settings":
			{
				"buffer_size": 20002,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/ui-tests/ui-tests.ts",
			"settings":
			{
				"buffer_size": 22040,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/src/ui/jb-ui.ts",
			"settings":
			{
				"buffer_size": 22256,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/data-tests/data-tests.js",
			"settings":
			{
				"buffer_size": 993,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/src/core/core.js",
			"settings":
			{
				"buffer_size": 17931,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/studio/studio-utils.ts",
			"settings":
			{
				"buffer_size": 3213,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/data-tests/data-tests.html",
			"settings":
			{
				"buffer_size": 563,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/src/ui/button.js",
			"settings":
			{
				"buffer_size": 2395,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/src/core/pretty-print.js",
			"settings":
			{
				"buffer_size": 5115,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/jbart5-ng/projects/studio/studio-undo.ts",
			"settings":
			{
				"buffer_size": 1584,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 35.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"About"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 174.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/jbart5-ng/src/ui",
		"/C/jbart5-ng",
		"/C/jbart5-ng/projects",
		"/C/jbart5-ng/projects/data-tests",
		"/C/jbart5-ng/projects/material-demo",
		"/C/jbart5-ng/projects/studio-helper",
		"/C/jbart5-ng/projects/ui-tests",
		"/C/jbart5-ng/src",
		"/C/jbart5-ng/src/core",
		"/C/jbart5-ng/src/loader",
		"/C/jbart5-ng/src/testing",
		"/C/Dropbox/mega"
	],
	"file_history":
	[
		"/C/jbart5-ng/src/ui/jb-ui.ts",
		"/C/jbart5-ng/todo.txt",
		"/C/jbart5-ng/src/ui/css-features.js",
		"/C/jbart5-ng/src/ui/features.js",
		"/C/jbart5-ng/src/ui/field.js",
		"/C/jbart5-ng/src/core/core.js",
		"/C/jbart5-ng/projects/ui-tests/tests.html",
		"/C/jbart5-ng/src/core/functions.js",
		"/C/jbart5-ng/projects/studio-helper/studio-tree-tests.ts",
		"/C/jbart5-ng/projects/studio-helper/studio-helper.html",
		"/C/jbart5-ng/projects/studio/studio-probe.ts",
		"/C/jbart5-ng/projects/studio/studio-properties.ts",
		"/C/jbart5-ng/projects/studio/studio-styles.ts",
		"/C/jbart5-ng/projects/studio/studio-save.ts",
		"/C/jbart5-ng/projects/studio/studio-style-editor.ts",
		"/C/Dropbox/mega/mega.js",
		"/C/jbart5-ng/fixParams.js",
		"/C/jbart5-ng/src/ui/md-styles/editable-boolean-md.ts",
		"/C/jbart5-ng/src/ui/tree/tree.ts",
		"/C/jbart5-ng/src/ui/editable-text.js",
		"/C/jbart5-ng/src/ui/styles/codemirror-styles.ts",
		"/C/jbart5-ng/projects/studio-helper/path-tests.ts",
		"/C/jbart5-ng/src/ui/button.js",
		"/C/jbart5-ng/projects/studio/studio.html",
		"/C/jbart5-ng/src/ui/slider.ts",
		"/C/jbart5-ng/src/ui/styles.js",
		"/C/jbart5-ng/package.json",
		"/C/jbart5-ng/src/ui/ui-common.js",
		"/C/jbart5-ng/projects/material-demo/material-demo.js",
		"/C/jbart5-ng/projects/material-demo/material-demo.html",
		"/C/jbart5-ng/src/ui/http.ts",
		"/C/jbart5-ng/src/ui/image.js",
		"/C/jbart5-ng/src/ui/styles/group-styles.ts",
		"/C/jbart5-ng/projects/studio/studio-toolbar.ts",
		"/C/jbart5-ng/src/core/jb.ts",
		"/C/jbart5-ng/src/core/utils.js",
		"/C/jbart5-ng/src/core/pretty-print.js",
		"/C/jbart5-ng/src/ui/jb-rx.ts",
		"/C/jbart5-ng/dist/src/ui/jb-rx.js",
		"/C/jbart5-ng/node_modules/@angular2-material/icon/icon-registry.d.ts",
		"/C/jbart5-ng/node_modules/@angular2-material/icon/icon-registry.js",
		"/C/jbart5-ng/src/testing/ui-testers.ts",
		"/C/jbart5-ng/src/ui/styles/picklist-styles.ts",
		"/C/jbart5-ng/src/ui/picklist.js",
		"/C/jbart5-ng/src/ui/pulldown-menu.js",
		"/C/jbart5-ng/src/ui/sidenav.js",
		"/C/jbart5-ng/src/ui/md-styles/sidenav-md.ts",
		"/C/jbart5-ng/src/ui/itemlist-with-groups.js",
		"/C/jbart5-ng/projects/jbart-site/jbart-site.ts",
		"/C/jbart5-ng/projects/studio/studio-tgp-model.ts",
		"/C/jbart5-ng/projects/studio/studio-edit-source.ts",
		"/C/jbart5-ng/projects/studio/studio-data-browse.ts",
		"/C/jbart5-ng/projects/studio/studio-tree.ts",
		"/C/jbart5-ng/projects/studio/studio-undo.ts",
		"/C/jbart5-ng/projects/studio/studio-jb-editor.ts",
		"/C/jbart5-ng/projects/studio/studio-suggestions.ts",
		"/C/jbart5-ng/projects/studio-helper/studio-helper.ts",
		"/C/jbart5-ng/projects/ui-tests/ui-tests-old.js",
		"/C/jbart5-ng/projects/ui-tests/ui-tests.ts",
		"/C/jbart5-ng/src/ui/itemlist.js",
		"/C/jbart5-ng/src/ui/itemlog.js",
		"/C/jbart5-ng/src/ui/text.js",
		"/C/jbart5-ng/src/ui/theme.js",
		"/C/jbart5-ng/src/ui/group.js",
		"/C/jbart5-ng/projects/studio/studio-model-components.ts",
		"/C/jbart5-ng/projects/studio/studio-utils.ts",
		"/C/jbart5-ng/projects/studio/studio-path.ts",
		"/C/jbart5-ng/projects/hello-world/hello.ts",
		"/C/jbart5-ng/src/ui/label.js",
		"/C/jbart5-ng/src/ui/dialog.js",
		"/C/jbart5-ng/src/ui/divider.js",
		"/C/jbart5-ng/src/ui/editable-boolean.js",
		"/C/jbart5-ng/src/ui/editable-number.ts",
		"/C/jbart5-ng/projects/studio/studio-main.ts",
		"/C/jbart5-ng/projects/studio/studio-menu.ts",
		"/C/jbart5-ng/src/loader/load-jbart.js",
		"/C/jbart5-ng/node_modules/rxjs/bundles/Rx.js",
		"/C/jbart5-ng/src/ui/tree/json-tree.ts",
		"/C/jbart5-ng/projects/studio/studio-new-control.ts",
		"/C/jbart5-ng/projects/studio/studio-open-project.ts",
		"/C/jbart5-ng/projects/studio/studio-pick-dialog.ts",
		"/C/jbart5-ng/projects/studio/studio-popups.ts",
		"/C/jbart5-ng/projects/studio/studio-testers.ts",
		"/C/jbart5-ng/projects/studio-helper/suggestion-tests.ts",
		"/C/jbart5-ng/projects/ui-tests/rx-tests.ts",
		"/C/jbart5-ng/src/core/components.js",
		"/C/jbart5-ng/src/testing/ui-testers-ctrls.ts",
		"/C/jbart5-ng/projects/material-demo/ng-material-demo-loader.ts",
		"/C/jbart5-ng/src/ui/jb-ui-utils.ts",
		"/C/jbart5-ng/src/ui/tabs.js",
		"/C/jbart5-ng/src/testing/core-testers.js",
		"/C/jbart5-ng/src/ui/tree/tree-undo.ts",
		"/C/jbart5-ng/projects/ui-tests/ui-tests.html",
		"/C/jbart5-ng/projects/ui-tests/md-tests.ts",
		"/C/jbart5-ng/src/ui/styles.ts",
		"/C/jbart5-ng/projects/studio/studio-model.ts",
		"/C/jbart5-ng/projects/studio/studio-tests.ts",
		"/C/jbart5-ng/projects/ui-tests/path-tests.txt",
		"/C/jbart5-ng/src/ui/group.ts",
		"/C/jbart5-ng/src/ui/md-styles/tabs-md.ts",
		"/C/jbart5-ng/src/ui/button.ts",
		"/C/jbart5-ng/src/ui/md-styles/button-md.ts",
		"/C/jbart5-ng/src/ui/editable-text.ts",
		"/C/jbart5-ng/src/ui/md-styles/card-md.ts",
		"/C/jbart5-ng/src/ui/features.ts",
		"/C/jbart5-ng/src/ui/label.ts",
		"/C/jbart5-ng/src/ui/text.ts",
		"/C/jbart5-ng/projects/ui-tests/single-test.html",
		"/C/jbart5-ng/src/ui/itemlist.ts",
		"/C/jbart5-ng/src/ui/itemlog.ts",
		"/C/jbart5-ng/node_modules/@angular2-material/core/portal/portal-directives.js",
		"/C/jbart5-ng/src/ui/pulldown-menu.ts",
		"/C/jbart5-ng/src/ui/styles/editable-boolean-styles.ts",
		"/C/jbart5-ng/src/ui/md-styles/input-md.ts",
		"/C/jbart5-ng/src/ui/dialog.ts",
		"/C/jbart5-ng/src/ui/ui-common.ts",
		"/C/jbart5-ng/css/ng2-styles.css",
		"/C/jbart5-ng/projects/ui-tests/ui-tests.js",
		"/C/jbart5-ng/projects/material-demo/material-demo.ts",
		"/C/jbart5-ng/src/ui/itemlist-heading.ts",
		"/C/jbart5-ng/README.md",
		"/C/jbart5-ng/node_modules/@angular2-material/core/ripple/ripple.js",
		"/C/jbart5-ng/node_modules/@angular2-material/core/portal/README.md",
		"/C/jbart5-ng/node_modules/@angular2-material/core/portal/portal.js",
		"/C/jbart5-ng/node_modules/@angular2-material/button/button.js",
		"/C/jbart5-ng/node_modules/@angular2-material/tabs/tabs.js",
		"/C/jbart5-ng/src/ui/button-md-styles.ts",
		"/C/jbart5-ng/projects/studio/css/studio.css"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"*.ts,*.js,*.css,*.html",
			"*.ts,*.js,*.css		",
			"*.ts,*.js,*.css	",
			"*.ts,*.js,*.css",
			"*.ts,*.js",
			"*.ts;*.js",
			"*.ts",
			"*.ts,*.js,*.css",
			"*.ts",
			"*.ts,*.js,*.css",
			"*.ts,*.js",
			"*.ts",
			"*.ts,*.js,*.css",
			"*.ts,*.js",
			"*.ts;*.js",
			"*.ts,*.js",
			"*.css",
			"*.ts,*.js",
			"*.css",
			"*.ts,*.js",
			"*.ts",
			"*.js,*.ts",
			"*.js;*.ts",
			"*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"jbart_base",
			"profileFromPath",
			"button2",
			"'material-demo.buttons2'",
			"n endWithFailure",
			"endWithFailure",
			"'editable-text'",
			"modif",
			"singleDataBind",
			"methods:",
			"('customStyle'",
			"expand_title",
			"as: 'object'",
			"single",
			"as: 'single'",
			"as: 'object'",
			"('customStyle'",
			"'customStyle'",
			"'button.href'",
			"'button-href'",
			"data-tests",
			"'data-test'",
			"testProjects",
			"test_modules",
			"'data-test'",
			"[0]",
			"[1]",
			"function sortedPropertyNames(obj)",
			"'editable-text'",
			"modify",
			"tree.drag-and-drop",
			"before",
			"{$: 'layout.horizontal', spacing: 3 }",
			"params",
			"forceDefaultCreation",
			"[1]",
			"[0]",
			"params",
			"params.filter",
			".params",
			"params",
			"paramDef",
			"params",
			"[a-z] ',",
			" ',",
			"jb-path-test",
			"jb-path",
			"params: [ {id: 'path' as: 'string' } ]",
			"studio.short-title",
			"{ id: 'path',",
			"params: [{ id: 'path',",
			"params: [{ id: 'path', 'string':  }]",
			"studio.is-of-type",
			"params:{",
			"params: {",
			"params:{",
			"params: {",
			"params: { path: { as: 'string' }}",
			"params: {",
			"params: { path: { as: 'string'} }",
			"params: {",
			"params:",
			"params: { path: { as: 'string' } }",
			"params: {",
			"params:",
			"param",
			"'list'",
			"jb_sugarProp",
			"'jb-path-",
			"isOfType",
			"studio.is-of-type",
			"ui-tests.show-tests",
			"itemlist",
			"'itemlog'",
			"ui-tests.single-test",
			"$call",
			"$call: \"Style\"",
			"$call: 'Style'",
			"group.section",
			"ui-tests.single-test",
			"jb_ctx",
			"componentContext",
			"'call'",
			"preparedParams",
			"ctx.params",
			"componentContext",
			"preparedParam",
			"jb_func",
			"data2",
			"jb_comp",
			"preparedParam",
			"paramsWithValues",
			"jb_calcParams",
			"jb_func",
			"jb_funcDynamicParam",
			"paramName",
			"jb_funcDynamicParam",
			"function Array.isA",
			"jb_isArray",
			"jb_profileType",
			"jb_sugarProp",
			"jb_compName",
			"jb_first$prop",
			"srcPath",
			"paramsWithValues.push(",
			"jb_calcParams",
			"paramsArray",
			"firstProp",
			"jb_entriesToObject",
			"onlyUnique",
			"jb_onlyUnique",
			"jb_onlyUniqueFunc",
			"jb_onlyUnique",
			"jb_onlyUniqueFunc",
			".ownPropertyNames",
			"jb_firstProp",
			".firstProp",
			"firstProp",
			"jb_firstProp",
			"jb_profileHasValue",
			"jb_run_action_prop",
			"jb_propVal",
			"jb_paramsWithValues",
			"jb_firstProp",
			"params",
			"params:",
			"projDirs",
			"params:"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"params: [ {id: 'path', as: 'string' } ]",
			"params: [ {id: 'path' as: 'string' } ]",
			"preparedParams",
			"Array.isArray",
			"staticPath",
			"studio-script",
			"'goto-url'",
			"notifyModification",
			"itemlist-with-groups",
			"model.",
			"import {model} from './studio-tgp-model';",
			"$jbProbe",
			"open-source-dialog",
			"studio.make-local",
			"studio.open-properties",
			"studio.goto-sublime",
			"profileFromPath",
			"{$: 'studio.property-toobar-feature', path: '%$path%'",
			"studio-position-under-property",
			"'group.wait'",
			"'MdButton'",
			"field.subscribe",
			"studio.subscribe",
			"studio-floating",
			"studio.control-tree",
			"open-control-tree",
			"bindYesNoMappings",
			"bindYesNo",
			"",
			"*ngFor=\"let ",
			"",
			"@angular/core",
			"compAsStr",
			"sortedPropertyNames",
			"property-",
			"pulldown.menu-item",
			"menu-item-separator",
			"modal-overlay",
			"from 'jb-core';",
			"from 'jb-ui'",
			"from 'jb-ui/",
			"from 'jb-ui/jb-rx';",
			"from 'jb-core/jb';",
			"from 'core/jb';",
			",",
			"'",
			",",
			"",
			"profileRefFromPath",
			"import * as ui_utils from 'ui/jb-ui-utils';",
			"import * as jb_ui from 'ui/jb-ui';",
			"jb_ui.Comp(",
			"import {jb_ui} from 'ui/jb-ui'",
			"this"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 18,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 375124,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										219,
										236
									],
									[
										582,
										599
									],
									[
										792,
										809
									],
									[
										981,
										998
									],
									[
										1232,
										1249
									],
									[
										1860,
										1873
									],
									[
										2021,
										2034
									],
									[
										2163,
										2176
									],
									[
										2307,
										2320
									],
									[
										2484,
										2497
									],
									[
										2623,
										2636
									],
									[
										2756,
										2769
									],
									[
										2891,
										2904
									],
									[
										3030,
										3043
									],
									[
										3169,
										3182
									],
									[
										3303,
										3316
									],
									[
										3550,
										3563
									],
									[
										3742,
										3755
									],
									[
										3883,
										3896
									],
									[
										4021,
										4034
									],
									[
										4164,
										4177
									],
									[
										4296,
										4309
									],
									[
										4527,
										4540
									],
									[
										4699,
										4712
									],
									[
										4818,
										4831
									],
									[
										5020,
										5033
									],
									[
										5252,
										5265
									],
									[
										5394,
										5407
									],
									[
										5549,
										5562
									],
									[
										5682,
										5695
									],
									[
										5867,
										5880
									],
									[
										5996,
										6009
									],
									[
										6139,
										6152
									],
									[
										6281,
										6294
									],
									[
										6412,
										6425
									],
									[
										6548,
										6561
									],
									[
										6682,
										6695
									],
									[
										6816,
										6829
									],
									[
										6955,
										6968
									],
									[
										7091,
										7104
									],
									[
										7242,
										7255
									],
									[
										7400,
										7413
									],
									[
										7617,
										7630
									],
									[
										7754,
										7767
									],
									[
										7893,
										7906
									],
									[
										8045,
										8058
									],
									[
										8178,
										8191
									],
									[
										8363,
										8376
									],
									[
										8574,
										8587
									],
									[
										8738,
										8751
									],
									[
										8904,
										8917
									],
									[
										9210,
										9223
									],
									[
										9402,
										9415
									],
									[
										9543,
										9556
									],
									[
										9681,
										9694
									],
									[
										9824,
										9837
									],
									[
										9956,
										9969
									],
									[
										10157,
										10170
									],
									[
										10332,
										10345
									],
									[
										10516,
										10529
									],
									[
										10679,
										10692
									],
									[
										10813,
										10826
									],
									[
										10991,
										11004
									],
									[
										11299,
										11317
									],
									[
										11640,
										11658
									],
									[
										11810,
										11828
									],
									[
										12041,
										12059
									],
									[
										12255,
										12273
									],
									[
										12425,
										12443
									],
									[
										12778,
										12816
									],
									[
										12996,
										13034
									],
									[
										13269,
										13307
									],
									[
										13425,
										13463
									],
									[
										13597,
										13635
									],
									[
										13785,
										13823
									],
									[
										13964,
										14002
									],
									[
										14150,
										14188
									],
									[
										14323,
										14361
									],
									[
										14488,
										14526
									],
									[
										14651,
										14689
									],
									[
										14884,
										14922
									],
									[
										15052,
										15090
									],
									[
										15237,
										15275
									],
									[
										15441,
										15479
									],
									[
										15657,
										15695
									],
									[
										15876,
										15914
									],
									[
										16095,
										16133
									],
									[
										16304,
										16342
									],
									[
										16510,
										16548
									],
									[
										16747,
										16785
									],
									[
										16990,
										17028
									],
									[
										17233,
										17271
									],
									[
										17445,
										17483
									],
									[
										17659,
										17697
									],
									[
										17882,
										17920
									],
									[
										18085,
										18123
									],
									[
										18278,
										18316
									],
									[
										18520,
										18558
									],
									[
										18676,
										18714
									],
									[
										18848,
										18886
									],
									[
										19036,
										19074
									],
									[
										19215,
										19253
									],
									[
										19401,
										19439
									],
									[
										19574,
										19612
									],
									[
										19739,
										19777
									],
									[
										19902,
										19940
									],
									[
										20135,
										20173
									],
									[
										20303,
										20341
									],
									[
										20488,
										20526
									],
									[
										20692,
										20730
									],
									[
										20908,
										20946
									],
									[
										21127,
										21165
									],
									[
										21346,
										21384
									],
									[
										21555,
										21593
									],
									[
										21761,
										21799
									],
									[
										22000,
										22038
									],
									[
										22158,
										22196
									],
									[
										22554,
										22561
									],
									[
										22838,
										22845
									],
									[
										23166,
										23173
									],
									[
										23376,
										23383
									],
									[
										23527,
										23534
									],
									[
										23746,
										23753
									],
									[
										23867,
										23874
									],
									[
										24035,
										24042
									],
									[
										24223,
										24230
									],
									[
										24454,
										24461
									],
									[
										24725,
										24732
									],
									[
										24948,
										24955
									],
									[
										25117,
										25124
									],
									[
										25285,
										25292
									],
									[
										25458,
										25465
									],
									[
										25629,
										25636
									],
									[
										25800,
										25807
									],
									[
										25973,
										25980
									],
									[
										26146,
										26153
									],
									[
										26314,
										26321
									],
									[
										26483,
										26490
									],
									[
										26654,
										26661
									],
									[
										26823,
										26830
									],
									[
										27074,
										27081
									],
									[
										27290,
										27302
									],
									[
										27478,
										27490
									],
									[
										27647,
										27659
									],
									[
										27815,
										27827
									],
									[
										27988,
										28000
									],
									[
										28159,
										28171
									],
									[
										28330,
										28342
									],
									[
										28503,
										28515
									],
									[
										28676,
										28688
									],
									[
										28844,
										28856
									],
									[
										29013,
										29025
									],
									[
										29184,
										29196
									],
									[
										29353,
										29365
									],
									[
										29604,
										29616
									],
									[
										29892,
										29895
									],
									[
										29966,
										29969
									],
									[
										30179,
										30182
									],
									[
										30253,
										30256
									],
									[
										30518,
										30521
									],
									[
										30757,
										30760
									],
									[
										30872,
										30875
									],
									[
										31101,
										31104
									],
									[
										31519,
										31522
									],
									[
										31804,
										31807
									],
									[
										32084,
										32087
									],
									[
										32260,
										32263
									],
									[
										32396,
										32399
									],
									[
										32658,
										32661
									],
									[
										32856,
										32859
									],
									[
										33083,
										33086
									],
									[
										33320,
										33323
									],
									[
										33348,
										33351
									],
									[
										33644,
										33647
									],
									[
										34002,
										34005
									],
									[
										34374,
										34377
									],
									[
										34556,
										34559
									],
									[
										34834,
										34837
									],
									[
										35097,
										35100
									],
									[
										35444,
										35448
									],
									[
										35650,
										35654
									],
									[
										35891,
										35895
									],
									[
										36067,
										36071
									],
									[
										36333,
										36337
									],
									[
										36485,
										36489
									],
									[
										36728,
										36732
									],
									[
										37024,
										37028
									],
									[
										37382,
										37386
									],
									[
										37778,
										37782
									],
									[
										38019,
										38023
									],
									[
										38195,
										38199
									],
									[
										38461,
										38465
									],
									[
										38613,
										38617
									],
									[
										38856,
										38860
									],
									[
										39152,
										39156
									],
									[
										39510,
										39514
									],
									[
										39977,
										39981
									],
									[
										40153,
										40157
									],
									[
										40419,
										40423
									],
									[
										40571,
										40575
									],
									[
										40814,
										40818
									],
									[
										41110,
										41114
									],
									[
										41468,
										41472
									],
									[
										41902,
										41906
									],
									[
										42168,
										42172
									],
									[
										42320,
										42324
									],
									[
										42563,
										42567
									],
									[
										42859,
										42863
									],
									[
										43217,
										43221
									],
									[
										43651,
										43655
									],
									[
										43917,
										43921
									],
									[
										44093,
										44097
									],
									[
										44389,
										44393
									],
									[
										44747,
										44751
									],
									[
										45156,
										45160
									],
									[
										45332,
										45336
									],
									[
										45628,
										45632
									],
									[
										45986,
										45990
									],
									[
										46395,
										46399
									],
									[
										46625,
										46629
									],
									[
										46983,
										46987
									],
									[
										47392,
										47396
									],
									[
										47622,
										47626
									],
									[
										48031,
										48035
									],
									[
										48246,
										48252
									],
									[
										48506,
										48512
									],
									[
										48535,
										48541
									],
									[
										48729,
										48735
									],
									[
										48812,
										48818
									],
									[
										48962,
										48968
									],
									[
										49159,
										49165
									],
									[
										49328,
										49334
									],
									[
										49564,
										49570
									],
									[
										49802,
										49808
									],
									[
										50006,
										50012
									],
									[
										50068,
										50074
									],
									[
										50140,
										50146
									],
									[
										50281,
										50287
									],
									[
										50485,
										50491
									],
									[
										50546,
										50552
									],
									[
										50618,
										50624
									],
									[
										50763,
										50769
									],
									[
										50994,
										51000
									],
									[
										51236,
										51242
									],
									[
										51467,
										51473
									],
									[
										51549,
										51555
									],
									[
										51733,
										51739
									],
									[
										51935,
										51941
									],
									[
										51986,
										51992
									],
									[
										52035,
										52041
									],
									[
										52165,
										52171
									],
									[
										52356,
										52362
									],
									[
										52579,
										52585
									],
									[
										52830,
										52836
									],
									[
										53021,
										53027
									],
									[
										53199,
										53205
									],
									[
										53356,
										53362
									],
									[
										53518,
										53524
									],
									[
										53791,
										53797
									],
									[
										53970,
										53976
									],
									[
										54254,
										54260
									],
									[
										54438,
										54444
									],
									[
										54463,
										54469
									],
									[
										54627,
										54633
									],
									[
										54848,
										54854
									],
									[
										55061,
										55067
									],
									[
										55206,
										55212
									],
									[
										55552,
										55558
									],
									[
										55627,
										55633
									],
									[
										55844,
										55850
									],
									[
										56051,
										56057
									],
									[
										56212,
										56218
									],
									[
										56398,
										56404
									],
									[
										56589,
										56595
									],
									[
										56748,
										56754
									],
									[
										56999,
										57005
									],
									[
										57166,
										57172
									],
									[
										57312,
										57318
									],
									[
										57522,
										57528
									],
									[
										57649,
										57655
									],
									[
										57783,
										57789
									],
									[
										57949,
										57955
									],
									[
										58143,
										58149
									],
									[
										58332,
										58338
									],
									[
										58573,
										58579
									],
									[
										58718,
										58724
									],
									[
										58951,
										58957
									],
									[
										59148,
										59154
									],
									[
										59431,
										59437
									],
									[
										59525,
										59531
									],
									[
										59758,
										59764
									],
									[
										60019,
										60025
									],
									[
										60210,
										60216
									],
									[
										60363,
										60369
									],
									[
										60609,
										60615
									],
									[
										60839,
										60845
									],
									[
										61065,
										61071
									],
									[
										61292,
										61298
									],
									[
										61568,
										61574
									],
									[
										61774,
										61780
									],
									[
										61982,
										61988
									],
									[
										62146,
										62152
									],
									[
										62403,
										62409
									],
									[
										62569,
										62575
									],
									[
										62711,
										62717
									],
									[
										62778,
										62784
									],
									[
										62826,
										62832
									],
									[
										62977,
										62983
									],
									[
										63031,
										63037
									],
									[
										63136,
										63142
									],
									[
										63292,
										63298
									],
									[
										63535,
										63541
									],
									[
										63740,
										63746
									],
									[
										63885,
										63891
									],
									[
										64121,
										64127
									],
									[
										64165,
										64171
									],
									[
										64236,
										64242
									],
									[
										64363,
										64369
									],
									[
										64424,
										64430
									],
									[
										64586,
										64592
									],
									[
										64720,
										64726
									],
									[
										64893,
										64899
									],
									[
										65047,
										65053
									],
									[
										65192,
										65198
									],
									[
										65341,
										65347
									],
									[
										65537,
										65543
									],
									[
										65741,
										65747
									],
									[
										65936,
										65942
									],
									[
										66118,
										66124
									],
									[
										66144,
										66150
									],
									[
										66364,
										66370
									],
									[
										66532,
										66538
									],
									[
										66769,
										66775
									],
									[
										66934,
										66940
									],
									[
										67146,
										67152
									],
									[
										67404,
										67410
									],
									[
										67705,
										67711
									],
									[
										67729,
										67735
									],
									[
										67921,
										67927
									],
									[
										67948,
										67954
									],
									[
										68040,
										68046
									],
									[
										68064,
										68070
									],
									[
										68096,
										68102
									],
									[
										68158,
										68164
									],
									[
										68423,
										68429
									],
									[
										68694,
										68700
									],
									[
										68833,
										68839
									],
									[
										69128,
										69134
									],
									[
										69268,
										69274
									],
									[
										69478,
										69484
									],
									[
										69682,
										69688
									],
									[
										69866,
										69872
									],
									[
										70033,
										70039
									],
									[
										70250,
										70256
									],
									[
										70472,
										70478
									],
									[
										70738,
										70744
									],
									[
										70914,
										70920
									],
									[
										71132,
										71138
									],
									[
										71161,
										71167
									],
									[
										71508,
										71514
									],
									[
										71685,
										71691
									],
									[
										71831,
										71837
									],
									[
										72115,
										72121
									],
									[
										72243,
										72249
									],
									[
										72385,
										72391
									],
									[
										72535,
										72541
									],
									[
										72713,
										72719
									],
									[
										73055,
										73061
									],
									[
										73124,
										73130
									],
									[
										73345,
										73351
									],
									[
										73598,
										73604
									],
									[
										73840,
										73846
									],
									[
										74032,
										74038
									],
									[
										74217,
										74223
									],
									[
										74459,
										74465
									],
									[
										74790,
										74796
									],
									[
										75035,
										75041
									],
									[
										75316,
										75322
									],
									[
										75440,
										75446
									],
									[
										75655,
										75661
									],
									[
										75933,
										75939
									],
									[
										76103,
										76109
									],
									[
										76236,
										76242
									],
									[
										76371,
										76377
									],
									[
										76541,
										76547
									],
									[
										76788,
										76794
									],
									[
										76924,
										76930
									],
									[
										77122,
										77128
									],
									[
										77328,
										77334
									],
									[
										77544,
										77550
									],
									[
										77743,
										77749
									],
									[
										77962,
										77968
									],
									[
										78226,
										78232
									],
									[
										78506,
										78512
									],
									[
										78697,
										78703
									],
									[
										78999,
										79005
									],
									[
										79058,
										79064
									],
									[
										79156,
										79162
									],
									[
										79232,
										79238
									],
									[
										79280,
										79286
									],
									[
										79357,
										79363
									],
									[
										79381,
										79387
									],
									[
										79414,
										79420
									],
									[
										79465,
										79471
									],
									[
										79650,
										79656
									],
									[
										79850,
										79856
									],
									[
										80167,
										80173
									],
									[
										80187,
										80193
									],
									[
										80225,
										80231
									],
									[
										80272,
										80278
									],
									[
										80372,
										80378
									],
									[
										80411,
										80417
									],
									[
										80469,
										80475
									],
									[
										80502,
										80508
									],
									[
										80553,
										80559
									],
									[
										80585,
										80591
									],
									[
										80636,
										80642
									],
									[
										80664,
										80670
									],
									[
										80879,
										80885
									],
									[
										81109,
										81115
									],
									[
										81188,
										81194
									],
									[
										81344,
										81350
									],
									[
										81578,
										81584
									],
									[
										81656,
										81662
									],
									[
										81817,
										81823
									],
									[
										82030,
										82036
									],
									[
										82241,
										82247
									],
									[
										82474,
										82480
									],
									[
										82750,
										82756
									],
									[
										82920,
										82926
									],
									[
										83084,
										83090
									],
									[
										83394,
										83400
									],
									[
										83424,
										83430
									],
									[
										83545,
										83551
									],
									[
										83602,
										83608
									],
									[
										83658,
										83664
									],
									[
										83862,
										83868
									],
									[
										84115,
										84121
									],
									[
										84295,
										84301
									],
									[
										84480,
										84486
									],
									[
										84712,
										84718
									],
									[
										85008,
										85014
									],
									[
										85200,
										85206
									],
									[
										85435,
										85441
									],
									[
										85671,
										85677
									],
									[
										85900,
										85906
									],
									[
										86160,
										86166
									],
									[
										86335,
										86341
									],
									[
										86612,
										86618
									],
									[
										86801,
										86807
									],
									[
										87044,
										87050
									],
									[
										87181,
										87187
									],
									[
										87228,
										87234
									],
									[
										87403,
										87409
									],
									[
										87455,
										87461
									],
									[
										87503,
										87509
									],
									[
										87657,
										87663
									],
									[
										87717,
										87723
									],
									[
										87950,
										87956
									],
									[
										88142,
										88148
									],
									[
										88366,
										88372
									],
									[
										88664,
										88670
									],
									[
										88896,
										88902
									],
									[
										89119,
										89125
									],
									[
										89367,
										89373
									],
									[
										89579,
										89585
									],
									[
										89669,
										89675
									],
									[
										89731,
										89737
									],
									[
										89863,
										89869
									],
									[
										89929,
										89935
									],
									[
										90117,
										90123
									],
									[
										90340,
										90346
									],
									[
										90533,
										90539
									],
									[
										90681,
										90687
									],
									[
										90824,
										90830
									],
									[
										91016,
										91022
									],
									[
										91163,
										91169
									],
									[
										91311,
										91317
									],
									[
										91484,
										91490
									],
									[
										91707,
										91713
									],
									[
										91861,
										91867
									],
									[
										92110,
										92116
									],
									[
										92265,
										92271
									],
									[
										92417,
										92423
									],
									[
										92593,
										92599
									],
									[
										92799,
										92805
									],
									[
										93029,
										93035
									],
									[
										93236,
										93242
									],
									[
										93442,
										93448
									],
									[
										93599,
										93605
									],
									[
										93772,
										93778
									],
									[
										93961,
										93967
									],
									[
										94153,
										94159
									],
									[
										94299,
										94305
									],
									[
										94469,
										94475
									],
									[
										94635,
										94641
									],
									[
										94822,
										94828
									],
									[
										94996,
										95002
									],
									[
										95162,
										95168
									],
									[
										95326,
										95332
									],
									[
										95560,
										95566
									],
									[
										95715,
										95721
									],
									[
										95733,
										95739
									],
									[
										95919,
										95925
									],
									[
										96120,
										96126
									],
									[
										96284,
										96290
									],
									[
										96462,
										96468
									],
									[
										96679,
										96685
									],
									[
										96899,
										96905
									],
									[
										97116,
										97122
									],
									[
										97258,
										97264
									],
									[
										97448,
										97454
									],
									[
										97658,
										97664
									],
									[
										97865,
										97871
									],
									[
										98142,
										98148
									],
									[
										98334,
										98340
									],
									[
										98540,
										98546
									],
									[
										98770,
										98776
									],
									[
										99038,
										99044
									],
									[
										99178,
										99184
									],
									[
										99334,
										99340
									],
									[
										99467,
										99473
									],
									[
										99559,
										99565
									],
									[
										99738,
										99744
									],
									[
										99929,
										99935
									],
									[
										100084,
										100090
									],
									[
										100254,
										100260
									],
									[
										100463,
										100469
									],
									[
										100642,
										100648
									],
									[
										100919,
										100925
									],
									[
										101081,
										101087
									],
									[
										101234,
										101240
									],
									[
										101389,
										101395
									],
									[
										101583,
										101589
									],
									[
										101736,
										101742
									],
									[
										101949,
										101955
									],
									[
										102094,
										102100
									],
									[
										102315,
										102321
									],
									[
										102468,
										102474
									],
									[
										102622,
										102628
									],
									[
										102772,
										102778
									],
									[
										102996,
										103002
									],
									[
										103200,
										103206
									],
									[
										103385,
										103391
									],
									[
										103544,
										103550
									],
									[
										103773,
										103779
									],
									[
										103925,
										103931
									],
									[
										104084,
										104090
									],
									[
										104241,
										104247
									],
									[
										104387,
										104393
									],
									[
										104564,
										104570
									],
									[
										104759,
										104765
									],
									[
										104948,
										104954
									],
									[
										105163,
										105169
									],
									[
										105317,
										105323
									],
									[
										105467,
										105473
									],
									[
										105598,
										105604
									],
									[
										105727,
										105733
									],
									[
										105885,
										105891
									],
									[
										106051,
										106057
									],
									[
										106249,
										106255
									],
									[
										106579,
										106585
									],
									[
										106799,
										106805
									],
									[
										107038,
										107044
									],
									[
										107279,
										107285
									],
									[
										107485,
										107491
									],
									[
										107741,
										107747
									],
									[
										107892,
										107898
									],
									[
										108132,
										108138
									],
									[
										108299,
										108305
									],
									[
										108487,
										108493
									],
									[
										108679,
										108685
									],
									[
										108862,
										108868
									],
									[
										109075,
										109081
									],
									[
										109105,
										109111
									],
									[
										109147,
										109153
									],
									[
										109177,
										109183
									],
									[
										109204,
										109210
									],
									[
										109275,
										109281
									],
									[
										109537,
										109543
									],
									[
										109744,
										109750
									],
									[
										109774,
										109780
									],
									[
										109821,
										109827
									],
									[
										109882,
										109888
									],
									[
										110038,
										110044
									],
									[
										110362,
										110368
									],
									[
										110687,
										110693
									],
									[
										110855,
										110861
									],
									[
										111081,
										111087
									],
									[
										111328,
										111334
									],
									[
										111615,
										111621
									],
									[
										111812,
										111818
									],
									[
										112059,
										112065
									],
									[
										112208,
										112214
									],
									[
										112490,
										112496
									],
									[
										112515,
										112521
									],
									[
										112598,
										112604
									],
									[
										112776,
										112782
									],
									[
										112820,
										112826
									],
									[
										112855,
										112861
									],
									[
										113056,
										113062
									],
									[
										113100,
										113106
									],
									[
										113135,
										113141
									],
									[
										113281,
										113287
									],
									[
										113438,
										113444
									],
									[
										113611,
										113617
									],
									[
										113800,
										113806
									],
									[
										113992,
										113998
									],
									[
										114138,
										114144
									],
									[
										114308,
										114314
									],
									[
										114474,
										114480
									],
									[
										114661,
										114667
									],
									[
										114835,
										114841
									],
									[
										115001,
										115007
									],
									[
										115165,
										115171
									],
									[
										115399,
										115405
									],
									[
										115554,
										115560
									],
									[
										115572,
										115578
									],
									[
										115758,
										115764
									],
									[
										115959,
										115965
									],
									[
										116123,
										116129
									],
									[
										116301,
										116307
									],
									[
										116518,
										116524
									],
									[
										116738,
										116744
									],
									[
										116955,
										116961
									],
									[
										117097,
										117103
									],
									[
										117287,
										117293
									],
									[
										117497,
										117503
									],
									[
										117704,
										117710
									],
									[
										117906,
										117912
									],
									[
										118070,
										118076
									],
									[
										118306,
										118312
									],
									[
										118513,
										118519
									],
									[
										118731,
										118737
									],
									[
										118893,
										118899
									],
									[
										119052,
										119058
									],
									[
										119271,
										119277
									],
									[
										119454,
										119460
									],
									[
										119582,
										119588
									],
									[
										119746,
										119752
									],
									[
										119993,
										119999
									],
									[
										120211,
										120217
									],
									[
										120399,
										120405
									],
									[
										120556,
										120562
									],
									[
										120741,
										120747
									],
									[
										120941,
										120947
									],
									[
										121089,
										121095
									],
									[
										121237,
										121243
									],
									[
										121424,
										121430
									],
									[
										121572,
										121578
									],
									[
										121720,
										121726
									],
									[
										121899,
										121905
									],
									[
										122081,
										122087
									],
									[
										122259,
										122265
									],
									[
										122443,
										122449
									],
									[
										122572,
										122578
									],
									[
										122740,
										122746
									],
									[
										122892,
										122898
									],
									[
										123040,
										123046
									],
									[
										123223,
										123229
									],
									[
										123372,
										123378
									],
									[
										123570,
										123576
									],
									[
										123773,
										123779
									],
									[
										123981,
										123987
									],
									[
										124181,
										124187
									],
									[
										124389,
										124395
									],
									[
										124589,
										124595
									],
									[
										124739,
										124745
									],
									[
										124868,
										124874
									],
									[
										125005,
										125011
									],
									[
										125161,
										125167
									],
									[
										125313,
										125319
									],
									[
										125631,
										125637
									],
									[
										125791,
										125797
									],
									[
										125955,
										125961
									],
									[
										126125,
										126131
									],
									[
										126338,
										126344
									],
									[
										126538,
										126544
									],
									[
										126737,
										126743
									],
									[
										126920,
										126926
									],
									[
										127048,
										127054
									],
									[
										127231,
										127237
									],
									[
										127419,
										127425
									],
									[
										127550,
										127556
									],
									[
										127815,
										127821
									],
									[
										128030,
										128036
									],
									[
										128179,
										128185
									],
									[
										128378,
										128384
									],
									[
										128540,
										128546
									],
									[
										128734,
										128740
									],
									[
										128883,
										128889
									],
									[
										129033,
										129039
									],
									[
										129181,
										129187
									],
									[
										129380,
										129386
									],
									[
										129580,
										129586
									],
									[
										129727,
										129733
									],
									[
										129930,
										129936
									],
									[
										130109,
										130115
									],
									[
										130304,
										130310
									],
									[
										130498,
										130504
									],
									[
										130703,
										130709
									],
									[
										130814,
										130820
									],
									[
										130913,
										130919
									],
									[
										131172,
										131178
									],
									[
										131431,
										131437
									],
									[
										131690,
										131696
									],
									[
										131777,
										131783
									],
									[
										132046,
										132052
									],
									[
										132279,
										132285
									],
									[
										132401,
										132407
									],
									[
										132416,
										132422
									],
									[
										132441,
										132447
									],
									[
										132610,
										132616
									],
									[
										132909,
										132915
									],
									[
										132984,
										132990
									],
									[
										133236,
										133242
									],
									[
										133287,
										133293
									],
									[
										133348,
										133354
									],
									[
										133369,
										133375
									],
									[
										133586,
										133592
									],
									[
										133868,
										133874
									],
									[
										133881,
										133887
									],
									[
										133899,
										133905
									],
									[
										134190,
										134196
									],
									[
										134440,
										134446
									],
									[
										134672,
										134678
									],
									[
										134864,
										134870
									],
									[
										135119,
										135125
									],
									[
										135292,
										135298
									],
									[
										135506,
										135512
									],
									[
										135783,
										135791
									],
									[
										135878,
										135886
									],
									[
										135977,
										135985
									],
									[
										136115,
										136123
									],
									[
										136403,
										136411
									],
									[
										136636,
										136644
									],
									[
										136653,
										136661
									],
									[
										136683,
										136691
									],
									[
										136867,
										136875
									],
									[
										136956,
										136964
									],
									[
										137064,
										137072
									],
									[
										137224,
										137232
									],
									[
										137437,
										137445
									],
									[
										137588,
										137596
									],
									[
										137819,
										137827
									],
									[
										137841,
										137849
									],
									[
										138077,
										138085
									],
									[
										138110,
										138118
									],
									[
										138144,
										138152
									],
									[
										138423,
										138431
									],
									[
										138684,
										138692
									],
									[
										138822,
										138830
									],
									[
										138976,
										138984
									],
									[
										139146,
										139154
									],
									[
										139162,
										139170
									],
									[
										139234,
										139242
									],
									[
										139429,
										139437
									],
									[
										139524,
										139532
									],
									[
										139623,
										139631
									],
									[
										139761,
										139769
									],
									[
										140040,
										140047
									],
									[
										140069,
										140076
									],
									[
										140263,
										140270
									],
									[
										140346,
										140353
									],
									[
										140561,
										140568
									],
									[
										140623,
										140630
									],
									[
										140695,
										140702
									],
									[
										140858,
										140865
									],
									[
										140919,
										140926
									],
									[
										140991,
										140998
									],
									[
										141150,
										141157
									],
									[
										141232,
										141239
									],
									[
										141416,
										141423
									],
									[
										141618,
										141625
									],
									[
										141669,
										141676
									],
									[
										141718,
										141725
									],
									[
										141908,
										141915
									],
									[
										142092,
										142099
									],
									[
										142117,
										142124
									],
									[
										142302,
										142309
									],
									[
										142542,
										142549
									],
									[
										142617,
										142624
									],
									[
										142908,
										142915
									],
									[
										143130,
										143137
									],
									[
										143296,
										143303
									],
									[
										143390,
										143397
									],
									[
										143704,
										143711
									],
									[
										143975,
										143982
									],
									[
										144141,
										144148
									],
									[
										144283,
										144290
									],
									[
										144350,
										144357
									],
									[
										144398,
										144405
									],
									[
										144549,
										144556
									],
									[
										144603,
										144610
									],
									[
										144708,
										144715
									],
									[
										144882,
										144889
									],
									[
										145134,
										145141
									],
									[
										145178,
										145185
									],
									[
										145249,
										145256
									],
									[
										145376,
										145383
									],
									[
										145437,
										145444
									],
									[
										145633,
										145640
									],
									[
										145934,
										145941
									],
									[
										145958,
										145965
									],
									[
										146150,
										146157
									],
									[
										146177,
										146184
									],
									[
										146269,
										146276
									],
									[
										146293,
										146300
									],
									[
										146325,
										146332
									],
									[
										146387,
										146394
									],
									[
										146652,
										146659
									],
									[
										146923,
										146930
									],
									[
										147081,
										147088
									],
									[
										147247,
										147254
									],
									[
										147451,
										147458
									],
									[
										147674,
										147681
									],
									[
										147703,
										147710
									],
									[
										148050,
										148057
									],
									[
										148220,
										148227
									],
									[
										148348,
										148355
									],
									[
										148490,
										148497
									],
									[
										148652,
										148659
									],
									[
										148994,
										149001
									],
									[
										149063,
										149070
									],
									[
										149336,
										149343
									],
									[
										149607,
										149614
									],
									[
										149810,
										149817
									],
									[
										149869,
										149876
									],
									[
										149967,
										149974
									],
									[
										150043,
										150050
									],
									[
										150091,
										150098
									],
									[
										150168,
										150175
									],
									[
										150192,
										150199
									],
									[
										150225,
										150232
									],
									[
										150276,
										150283
									],
									[
										150461,
										150468
									],
									[
										150746,
										150753
									],
									[
										150766,
										150773
									],
									[
										150804,
										150811
									],
									[
										150851,
										150858
									],
									[
										150951,
										150958
									],
									[
										150990,
										150997
									],
									[
										151048,
										151055
									],
									[
										151081,
										151088
									],
									[
										151132,
										151139
									],
									[
										151164,
										151171
									],
									[
										151215,
										151222
									],
									[
										151243,
										151250
									],
									[
										151400,
										151407
									],
									[
										151479,
										151486
									],
									[
										151572,
										151579
									],
									[
										151650,
										151657
									],
									[
										151848,
										151855
									],
									[
										152041,
										152048
									],
									[
										152277,
										152284
									],
									[
										152414,
										152421
									],
									[
										152461,
										152468
									],
									[
										152636,
										152643
									],
									[
										152688,
										152695
									],
									[
										152736,
										152743
									],
									[
										152890,
										152897
									],
									[
										152950,
										152957
									],
									[
										153147,
										153154
									],
									[
										153371,
										153378
									],
									[
										153669,
										153676
									],
									[
										153972,
										153979
									],
									[
										154119,
										154126
									],
									[
										154211,
										154218
									],
									[
										154468,
										154475
									],
									[
										154824,
										154831
									],
									[
										155066,
										155073
									],
									[
										155307,
										155314
									],
									[
										155513,
										155520
									],
									[
										155769,
										155776
									],
									[
										155920,
										155927
									],
									[
										156172,
										156179
									],
									[
										156449,
										156456
									],
									[
										156789,
										156796
									],
									[
										157074,
										157081
									],
									[
										157242,
										157249
									],
									[
										157468,
										157475
									],
									[
										157715,
										157722
									],
									[
										158002,
										158009
									],
									[
										158199,
										158206
									],
									[
										158435,
										158442
									],
									[
										158572,
										158579
									],
									[
										158875,
										158882
									],
									[
										159133,
										159140
									],
									[
										159371,
										159378
									],
									[
										159631,
										159638
									],
									[
										159847,
										159854
									],
									[
										160059,
										160066
									],
									[
										160146,
										160153
									],
									[
										160415,
										160422
									],
									[
										160648,
										160655
									],
									[
										160770,
										160777
									],
									[
										160785,
										160792
									],
									[
										160810,
										160817
									],
									[
										160979,
										160986
									],
									[
										161278,
										161285
									],
									[
										161353,
										161360
									],
									[
										161656,
										161663
									],
									[
										161894,
										161901
									],
									[
										162176,
										162183
									],
									[
										162189,
										162196
									],
									[
										162207,
										162214
									],
									[
										162523,
										162530
									],
									[
										162875,
										162888
									],
									[
										163055,
										163068
									],
									[
										163283,
										163296
									],
									[
										163620,
										163633
									],
									[
										163800,
										163813
									],
									[
										164028,
										164041
									],
									[
										164290,
										164296
									],
									[
										164550,
										164556
									],
									[
										164579,
										164585
									],
									[
										164773,
										164779
									],
									[
										164856,
										164862
									],
									[
										165006,
										165012
									],
									[
										165203,
										165209
									],
									[
										165372,
										165378
									],
									[
										165608,
										165614
									],
									[
										165846,
										165852
									],
									[
										166050,
										166056
									],
									[
										166112,
										166118
									],
									[
										166184,
										166190
									],
									[
										166325,
										166331
									],
									[
										166529,
										166535
									],
									[
										166590,
										166596
									],
									[
										166662,
										166668
									],
									[
										166807,
										166813
									],
									[
										167038,
										167044
									],
									[
										167280,
										167286
									],
									[
										167511,
										167517
									],
									[
										167593,
										167599
									],
									[
										167777,
										167783
									],
									[
										167979,
										167985
									],
									[
										168030,
										168036
									],
									[
										168079,
										168085
									],
									[
										168209,
										168215
									],
									[
										168400,
										168406
									],
									[
										168623,
										168629
									],
									[
										168874,
										168880
									],
									[
										169065,
										169071
									],
									[
										169243,
										169249
									],
									[
										169400,
										169406
									],
									[
										169562,
										169568
									],
									[
										169835,
										169841
									],
									[
										170014,
										170020
									],
									[
										170298,
										170304
									],
									[
										170482,
										170488
									],
									[
										170507,
										170513
									],
									[
										170671,
										170677
									],
									[
										170892,
										170898
									],
									[
										171105,
										171111
									],
									[
										171250,
										171256
									],
									[
										171596,
										171602
									],
									[
										171671,
										171677
									],
									[
										171888,
										171894
									],
									[
										172095,
										172101
									],
									[
										172256,
										172262
									],
									[
										172442,
										172448
									],
									[
										172633,
										172639
									],
									[
										172792,
										172798
									],
									[
										173043,
										173049
									],
									[
										173210,
										173216
									],
									[
										173356,
										173362
									],
									[
										173566,
										173572
									],
									[
										173693,
										173699
									],
									[
										173827,
										173833
									],
									[
										173993,
										173999
									],
									[
										174187,
										174193
									],
									[
										174376,
										174382
									],
									[
										174617,
										174623
									],
									[
										174762,
										174768
									],
									[
										174995,
										175001
									],
									[
										175192,
										175198
									],
									[
										175475,
										175481
									],
									[
										175569,
										175575
									],
									[
										175802,
										175808
									],
									[
										176063,
										176069
									],
									[
										176254,
										176260
									],
									[
										176407,
										176413
									],
									[
										176653,
										176659
									],
									[
										176883,
										176889
									],
									[
										177109,
										177115
									],
									[
										177336,
										177342
									],
									[
										177612,
										177618
									],
									[
										177818,
										177824
									],
									[
										178026,
										178032
									],
									[
										178190,
										178196
									],
									[
										178447,
										178453
									],
									[
										178613,
										178619
									],
									[
										178755,
										178761
									],
									[
										178822,
										178828
									],
									[
										178870,
										178876
									],
									[
										179021,
										179027
									],
									[
										179075,
										179081
									],
									[
										179180,
										179186
									],
									[
										179336,
										179342
									],
									[
										179579,
										179585
									],
									[
										179784,
										179790
									],
									[
										179929,
										179935
									],
									[
										180165,
										180171
									],
									[
										180209,
										180215
									],
									[
										180280,
										180286
									],
									[
										180407,
										180413
									],
									[
										180468,
										180474
									],
									[
										180630,
										180636
									],
									[
										180764,
										180770
									],
									[
										180937,
										180943
									],
									[
										181091,
										181097
									],
									[
										181236,
										181242
									],
									[
										181385,
										181391
									],
									[
										181581,
										181587
									],
									[
										181785,
										181791
									],
									[
										181980,
										181986
									],
									[
										182162,
										182168
									],
									[
										182188,
										182194
									],
									[
										182408,
										182414
									],
									[
										182576,
										182582
									],
									[
										182813,
										182819
									],
									[
										182978,
										182984
									],
									[
										183190,
										183196
									],
									[
										183448,
										183454
									],
									[
										183749,
										183755
									],
									[
										183773,
										183779
									],
									[
										183965,
										183971
									],
									[
										183992,
										183998
									],
									[
										184084,
										184090
									],
									[
										184108,
										184114
									],
									[
										184140,
										184146
									],
									[
										184202,
										184208
									],
									[
										184467,
										184473
									],
									[
										184738,
										184744
									],
									[
										184877,
										184883
									],
									[
										185172,
										185178
									],
									[
										185312,
										185318
									],
									[
										185522,
										185528
									],
									[
										185726,
										185732
									],
									[
										185910,
										185916
									],
									[
										186077,
										186083
									],
									[
										186294,
										186300
									],
									[
										186516,
										186522
									],
									[
										186782,
										186788
									],
									[
										186958,
										186964
									],
									[
										187176,
										187182
									],
									[
										187205,
										187211
									],
									[
										187552,
										187558
									],
									[
										187729,
										187735
									],
									[
										187875,
										187881
									],
									[
										188159,
										188165
									],
									[
										188287,
										188293
									],
									[
										188429,
										188435
									],
									[
										188579,
										188585
									],
									[
										188757,
										188763
									],
									[
										189099,
										189105
									],
									[
										189168,
										189174
									],
									[
										189389,
										189395
									],
									[
										189642,
										189648
									],
									[
										189884,
										189890
									],
									[
										190076,
										190082
									],
									[
										190261,
										190267
									],
									[
										190503,
										190509
									],
									[
										190834,
										190840
									],
									[
										191079,
										191085
									],
									[
										191360,
										191366
									],
									[
										191484,
										191490
									],
									[
										191699,
										191705
									],
									[
										191977,
										191983
									],
									[
										192147,
										192153
									],
									[
										192280,
										192286
									],
									[
										192415,
										192421
									],
									[
										192585,
										192591
									],
									[
										192832,
										192838
									],
									[
										192968,
										192974
									],
									[
										193166,
										193172
									],
									[
										193372,
										193378
									],
									[
										193588,
										193594
									],
									[
										193787,
										193793
									],
									[
										194006,
										194012
									],
									[
										194270,
										194276
									],
									[
										194550,
										194556
									],
									[
										194741,
										194747
									],
									[
										195043,
										195049
									],
									[
										195102,
										195108
									],
									[
										195200,
										195206
									],
									[
										195276,
										195282
									],
									[
										195324,
										195330
									],
									[
										195401,
										195407
									],
									[
										195425,
										195431
									],
									[
										195458,
										195464
									],
									[
										195509,
										195515
									],
									[
										195694,
										195700
									],
									[
										195894,
										195900
									],
									[
										196211,
										196217
									],
									[
										196231,
										196237
									],
									[
										196269,
										196275
									],
									[
										196316,
										196322
									],
									[
										196416,
										196422
									],
									[
										196455,
										196461
									],
									[
										196513,
										196519
									],
									[
										196546,
										196552
									],
									[
										196597,
										196603
									],
									[
										196629,
										196635
									],
									[
										196680,
										196686
									],
									[
										196708,
										196714
									],
									[
										196923,
										196929
									],
									[
										197153,
										197159
									],
									[
										197232,
										197238
									],
									[
										197388,
										197394
									],
									[
										197622,
										197628
									],
									[
										197700,
										197706
									],
									[
										197861,
										197867
									],
									[
										198074,
										198080
									],
									[
										198285,
										198291
									],
									[
										198518,
										198524
									],
									[
										198794,
										198800
									],
									[
										198964,
										198970
									],
									[
										199128,
										199134
									],
									[
										199438,
										199444
									],
									[
										199468,
										199474
									],
									[
										199589,
										199595
									],
									[
										199646,
										199652
									],
									[
										199702,
										199708
									],
									[
										199906,
										199912
									],
									[
										200159,
										200165
									],
									[
										200339,
										200345
									],
									[
										200524,
										200530
									],
									[
										200756,
										200762
									],
									[
										201052,
										201058
									],
									[
										201244,
										201250
									],
									[
										201479,
										201485
									],
									[
										201715,
										201721
									],
									[
										201944,
										201950
									],
									[
										202204,
										202210
									],
									[
										202379,
										202385
									],
									[
										202656,
										202662
									],
									[
										202845,
										202851
									],
									[
										203088,
										203094
									],
									[
										203225,
										203231
									],
									[
										203272,
										203278
									],
									[
										203447,
										203453
									],
									[
										203499,
										203505
									],
									[
										203547,
										203553
									],
									[
										203701,
										203707
									],
									[
										203761,
										203767
									],
									[
										203994,
										204000
									],
									[
										204186,
										204192
									],
									[
										204410,
										204416
									],
									[
										204708,
										204714
									],
									[
										204940,
										204946
									],
									[
										205163,
										205169
									],
									[
										205411,
										205417
									],
									[
										205623,
										205629
									],
									[
										205713,
										205719
									],
									[
										205775,
										205781
									],
									[
										205907,
										205913
									],
									[
										205973,
										205979
									],
									[
										206161,
										206167
									],
									[
										206384,
										206390
									],
									[
										206577,
										206583
									],
									[
										206725,
										206731
									],
									[
										206868,
										206874
									],
									[
										207060,
										207066
									],
									[
										207207,
										207213
									],
									[
										207355,
										207361
									],
									[
										207528,
										207534
									],
									[
										207751,
										207757
									],
									[
										207905,
										207911
									],
									[
										208154,
										208160
									],
									[
										208309,
										208315
									],
									[
										208461,
										208467
									],
									[
										208637,
										208643
									],
									[
										208843,
										208849
									],
									[
										209073,
										209079
									],
									[
										209280,
										209286
									],
									[
										209486,
										209492
									],
									[
										209643,
										209649
									],
									[
										209816,
										209822
									],
									[
										210005,
										210011
									],
									[
										210197,
										210203
									],
									[
										210343,
										210349
									],
									[
										210513,
										210519
									],
									[
										210679,
										210685
									],
									[
										210866,
										210872
									],
									[
										211040,
										211046
									],
									[
										211206,
										211212
									],
									[
										211370,
										211376
									],
									[
										211604,
										211610
									],
									[
										211759,
										211765
									],
									[
										211777,
										211783
									],
									[
										211963,
										211969
									],
									[
										212164,
										212170
									],
									[
										212328,
										212334
									],
									[
										212506,
										212512
									],
									[
										212723,
										212729
									],
									[
										212943,
										212949
									],
									[
										213160,
										213166
									],
									[
										213302,
										213308
									],
									[
										213492,
										213498
									],
									[
										213702,
										213708
									],
									[
										213909,
										213915
									],
									[
										214186,
										214192
									],
									[
										214378,
										214384
									],
									[
										214584,
										214590
									],
									[
										214814,
										214820
									],
									[
										215082,
										215088
									],
									[
										215222,
										215228
									],
									[
										215378,
										215384
									],
									[
										215511,
										215517
									],
									[
										215603,
										215609
									],
									[
										215782,
										215788
									],
									[
										215973,
										215979
									],
									[
										216128,
										216134
									],
									[
										216298,
										216304
									],
									[
										216507,
										216513
									],
									[
										216686,
										216692
									],
									[
										216963,
										216969
									],
									[
										217125,
										217131
									],
									[
										217278,
										217284
									],
									[
										217433,
										217439
									],
									[
										217627,
										217633
									],
									[
										217780,
										217786
									],
									[
										217993,
										217999
									],
									[
										218138,
										218144
									],
									[
										218359,
										218365
									],
									[
										218512,
										218518
									],
									[
										218666,
										218672
									],
									[
										218816,
										218822
									],
									[
										219040,
										219046
									],
									[
										219244,
										219250
									],
									[
										219429,
										219435
									],
									[
										219588,
										219594
									],
									[
										219817,
										219823
									],
									[
										219969,
										219975
									],
									[
										220128,
										220134
									],
									[
										220285,
										220291
									],
									[
										220431,
										220437
									],
									[
										220608,
										220614
									],
									[
										220803,
										220809
									],
									[
										220992,
										220998
									],
									[
										221207,
										221213
									],
									[
										221361,
										221367
									],
									[
										221511,
										221517
									],
									[
										221642,
										221648
									],
									[
										221771,
										221777
									],
									[
										221929,
										221935
									],
									[
										222095,
										222101
									],
									[
										222293,
										222299
									],
									[
										222623,
										222629
									],
									[
										222843,
										222849
									],
									[
										223082,
										223088
									],
									[
										223323,
										223329
									],
									[
										223529,
										223535
									],
									[
										223785,
										223791
									],
									[
										223936,
										223942
									],
									[
										224176,
										224182
									],
									[
										224343,
										224349
									],
									[
										224531,
										224537
									],
									[
										224723,
										224729
									],
									[
										224906,
										224912
									],
									[
										225119,
										225125
									],
									[
										225149,
										225155
									],
									[
										225191,
										225197
									],
									[
										225221,
										225227
									],
									[
										225248,
										225254
									],
									[
										225319,
										225325
									],
									[
										225581,
										225587
									],
									[
										225788,
										225794
									],
									[
										225818,
										225824
									],
									[
										225865,
										225871
									],
									[
										225926,
										225932
									],
									[
										226082,
										226088
									],
									[
										226406,
										226412
									],
									[
										226731,
										226737
									],
									[
										226899,
										226905
									],
									[
										227125,
										227131
									],
									[
										227372,
										227378
									],
									[
										227659,
										227665
									],
									[
										227856,
										227862
									],
									[
										228092,
										228098
									],
									[
										228229,
										228235
									],
									[
										228507,
										228513
									],
									[
										228532,
										228538
									],
									[
										228610,
										228616
									],
									[
										228770,
										228776
									],
									[
										228814,
										228820
									],
									[
										228844,
										228850
									],
									[
										229041,
										229047
									],
									[
										229085,
										229091
									],
									[
										229115,
										229121
									],
									[
										229270,
										229276
									],
									[
										229427,
										229433
									],
									[
										229600,
										229606
									],
									[
										229789,
										229795
									],
									[
										229981,
										229987
									],
									[
										230127,
										230133
									],
									[
										230297,
										230303
									],
									[
										230463,
										230469
									],
									[
										230650,
										230656
									],
									[
										230824,
										230830
									],
									[
										230990,
										230996
									],
									[
										231154,
										231160
									],
									[
										231388,
										231394
									],
									[
										231543,
										231549
									],
									[
										231561,
										231567
									],
									[
										231747,
										231753
									],
									[
										231948,
										231954
									],
									[
										232112,
										232118
									],
									[
										232290,
										232296
									],
									[
										232507,
										232513
									],
									[
										232727,
										232733
									],
									[
										232944,
										232950
									],
									[
										233086,
										233092
									],
									[
										233276,
										233282
									],
									[
										233486,
										233492
									],
									[
										233693,
										233699
									],
									[
										233895,
										233901
									],
									[
										234059,
										234065
									],
									[
										234295,
										234301
									],
									[
										234502,
										234508
									],
									[
										234720,
										234726
									],
									[
										234882,
										234888
									],
									[
										235041,
										235047
									],
									[
										235260,
										235266
									],
									[
										235443,
										235449
									],
									[
										235571,
										235577
									],
									[
										235735,
										235741
									],
									[
										235982,
										235988
									],
									[
										236200,
										236206
									],
									[
										236388,
										236394
									],
									[
										236545,
										236551
									],
									[
										236730,
										236736
									],
									[
										236930,
										236936
									],
									[
										237078,
										237084
									],
									[
										237226,
										237232
									],
									[
										237413,
										237419
									],
									[
										237561,
										237567
									],
									[
										237709,
										237715
									],
									[
										237888,
										237894
									],
									[
										238070,
										238076
									],
									[
										238248,
										238254
									],
									[
										238432,
										238438
									],
									[
										238561,
										238567
									],
									[
										238729,
										238735
									],
									[
										238881,
										238887
									],
									[
										239029,
										239035
									],
									[
										239212,
										239218
									],
									[
										239361,
										239367
									],
									[
										239559,
										239565
									],
									[
										239762,
										239768
									],
									[
										239970,
										239976
									],
									[
										240170,
										240176
									],
									[
										240378,
										240384
									],
									[
										240578,
										240584
									],
									[
										240728,
										240734
									],
									[
										240857,
										240863
									],
									[
										240994,
										241000
									],
									[
										241150,
										241156
									],
									[
										241302,
										241308
									],
									[
										241620,
										241626
									],
									[
										241780,
										241786
									],
									[
										241944,
										241950
									],
									[
										242114,
										242120
									],
									[
										242327,
										242333
									],
									[
										242527,
										242533
									],
									[
										242726,
										242732
									],
									[
										242909,
										242915
									],
									[
										243037,
										243043
									],
									[
										243220,
										243226
									],
									[
										243408,
										243414
									],
									[
										243539,
										243545
									],
									[
										243804,
										243810
									],
									[
										244019,
										244025
									],
									[
										244168,
										244174
									],
									[
										244367,
										244373
									],
									[
										244529,
										244535
									],
									[
										244723,
										244729
									],
									[
										244872,
										244878
									],
									[
										245022,
										245028
									],
									[
										245170,
										245176
									],
									[
										245369,
										245375
									],
									[
										245569,
										245575
									],
									[
										245716,
										245722
									],
									[
										245919,
										245925
									],
									[
										246098,
										246104
									],
									[
										246293,
										246299
									],
									[
										246487,
										246493
									],
									[
										246692,
										246698
									],
									[
										246803,
										246809
									],
									[
										246902,
										246908
									],
									[
										247161,
										247167
									],
									[
										247420,
										247426
									],
									[
										247679,
										247685
									],
									[
										247766,
										247772
									],
									[
										248035,
										248041
									],
									[
										248268,
										248274
									],
									[
										248390,
										248396
									],
									[
										248405,
										248411
									],
									[
										248430,
										248436
									],
									[
										248599,
										248605
									],
									[
										248898,
										248904
									],
									[
										248973,
										248979
									],
									[
										249225,
										249231
									],
									[
										249276,
										249282
									],
									[
										249337,
										249343
									],
									[
										249358,
										249364
									],
									[
										249575,
										249581
									],
									[
										249857,
										249863
									],
									[
										249870,
										249876
									],
									[
										249888,
										249894
									],
									[
										250179,
										250185
									],
									[
										250429,
										250435
									],
									[
										250661,
										250667
									],
									[
										250853,
										250859
									],
									[
										251108,
										251114
									],
									[
										251281,
										251287
									],
									[
										251495,
										251501
									],
									[
										251910,
										251930
									],
									[
										252250,
										252270
									],
									[
										252568,
										252605
									],
									[
										252726,
										252763
									],
									[
										252921,
										252958
									],
									[
										253168,
										253205
									],
									[
										253566,
										253572
									],
									[
										253887,
										253893
									],
									[
										254137,
										254143
									],
									[
										254398,
										254404
									],
									[
										254677,
										254683
									],
									[
										254891,
										254897
									],
									[
										255155,
										255161
									],
									[
										255343,
										255349
									],
									[
										255642,
										255648
									],
									[
										255900,
										255906
									],
									[
										256183,
										256189
									],
									[
										256426,
										256432
									],
									[
										256696,
										256702
									],
									[
										256948,
										256954
									],
									[
										257150,
										257156
									],
									[
										257212,
										257218
									],
									[
										257580,
										257586
									],
									[
										257892,
										257898
									],
									[
										258118,
										258124
									],
									[
										258416,
										258422
									],
									[
										258620,
										258626
									],
									[
										258729,
										258735
									],
									[
										258849,
										258855
									],
									[
										259051,
										259057
									],
									[
										259142,
										259148
									],
									[
										259337,
										259343
									],
									[
										259463,
										259469
									],
									[
										259574,
										259580
									],
									[
										259646,
										259652
									],
									[
										259805,
										259811
									],
									[
										259897,
										259903
									],
									[
										259969,
										259975
									],
									[
										260154,
										260160
									],
									[
										260326,
										260332
									],
									[
										260472,
										260478
									],
									[
										260480,
										260486
									],
									[
										260633,
										260639
									],
									[
										260821,
										260827
									],
									[
										260997,
										261003
									],
									[
										261096,
										261102
									],
									[
										261104,
										261110
									],
									[
										261372,
										261390
									],
									[
										261569,
										261587
									],
									[
										261837,
										261855
									],
									[
										262192,
										262210
									],
									[
										262405,
										262423
									],
									[
										262682,
										262697
									],
									[
										262845,
										262860
									],
									[
										263092,
										263107
									],
									[
										263349,
										263364
									],
									[
										263527,
										263542
									],
									[
										263797,
										263812
									],
									[
										263887,
										263902
									],
									[
										264130,
										264145
									],
									[
										264376,
										264391
									],
									[
										264462,
										264477
									],
									[
										264658,
										264673
									],
									[
										264846,
										264861
									],
									[
										265198,
										265213
									],
									[
										265501,
										265516
									],
									[
										265725,
										265740
									],
									[
										265976,
										265991
									],
									[
										266190,
										266205
									],
									[
										266436,
										266451
									],
									[
										266693,
										266708
									],
									[
										266942,
										266957
									],
									[
										267236,
										267251
									],
									[
										267515,
										267530
									],
									[
										267795,
										267810
									],
									[
										268081,
										268096
									],
									[
										268336,
										268351
									],
									[
										268581,
										268596
									],
									[
										268767,
										268782
									],
									[
										269003,
										269018
									],
									[
										269222,
										269237
									],
									[
										269453,
										269468
									],
									[
										269712,
										269727
									],
									[
										269945,
										269960
									],
									[
										270129,
										270144
									],
									[
										270257,
										270272
									],
									[
										270522,
										270537
									],
									[
										270706,
										270721
									],
									[
										270834,
										270849
									],
									[
										271073,
										271088
									],
									[
										271155,
										271170
									],
									[
										271282,
										271297
									],
									[
										271344,
										271359
									],
									[
										271518,
										271533
									],
									[
										271602,
										271617
									],
									[
										271807,
										271822
									],
									[
										271882,
										271897
									],
									[
										272180,
										272195
									],
									[
										272369,
										272384
									],
									[
										272583,
										272598
									],
									[
										272772,
										272787
									],
									[
										273000,
										273015
									],
									[
										273088,
										273103
									],
									[
										273318,
										273333
									],
									[
										273406,
										273421
									],
									[
										273570,
										273585
									],
									[
										273739,
										273754
									],
									[
										273902,
										273917
									],
									[
										274186,
										274201
									],
									[
										274433,
										274448
									],
									[
										274515,
										274530
									],
									[
										274724,
										274739
									],
									[
										274898,
										274913
									],
									[
										274982,
										274997
									],
									[
										275187,
										275202
									],
									[
										275262,
										275277
									],
									[
										275560,
										275575
									],
									[
										275749,
										275764
									],
									[
										275963,
										275978
									],
									[
										276152,
										276167
									],
									[
										276380,
										276395
									],
									[
										276468,
										276483
									],
									[
										276698,
										276713
									],
									[
										276786,
										276801
									],
									[
										276950,
										276965
									],
									[
										277119,
										277134
									],
									[
										277282,
										277297
									],
									[
										277566,
										277581
									],
									[
										277775,
										277790
									],
									[
										278127,
										278160
									],
									[
										278580,
										278583
									],
									[
										278842,
										278845
									],
									[
										279215,
										279218
									],
									[
										279451,
										279454
									],
									[
										279636,
										279639
									],
									[
										279872,
										279875
									],
									[
										280102,
										280105
									],
									[
										280155,
										280158
									],
									[
										280392,
										280395
									],
									[
										280710,
										280713
									],
									[
										280726,
										280729
									],
									[
										280991,
										280994
									],
									[
										281069,
										281072
									],
									[
										281089,
										281092
									],
									[
										281350,
										281353
									],
									[
										281659,
										281662
									],
									[
										281841,
										281844
									],
									[
										282064,
										282067
									],
									[
										282405,
										282408
									],
									[
										282512,
										282515
									],
									[
										282601,
										282604
									],
									[
										283039,
										283042
									],
									[
										283215,
										283218
									],
									[
										283475,
										283478
									],
									[
										283676,
										283679
									],
									[
										283892,
										283895
									],
									[
										284091,
										284094
									],
									[
										284153,
										284156
									],
									[
										284181,
										284184
									],
									[
										284480,
										284483
									],
									[
										284748,
										284751
									],
									[
										284949,
										284952
									],
									[
										285310,
										285313
									],
									[
										285634,
										285637
									],
									[
										285836,
										285839
									],
									[
										286134,
										286137
									],
									[
										286259,
										286262
									],
									[
										286562,
										286565
									],
									[
										286860,
										286863
									],
									[
										287165,
										287168
									],
									[
										287357,
										287360
									],
									[
										287489,
										287492
									],
									[
										287586,
										287589
									],
									[
										287823,
										287826
									],
									[
										287983,
										287986
									],
									[
										288167,
										288170
									],
									[
										288521,
										288524
									],
									[
										288744,
										288747
									],
									[
										289003,
										289006
									],
									[
										289215,
										289218
									],
									[
										289470,
										289473
									],
									[
										289505,
										289508
									],
									[
										289703,
										289706
									],
									[
										289973,
										289984
									],
									[
										290193,
										290204
									],
									[
										290455,
										290466
									],
									[
										290675,
										290686
									],
									[
										290854,
										290865
									],
									[
										291112,
										291124
									],
									[
										291194,
										291206
									],
									[
										291404,
										291416
									],
									[
										291485,
										291497
									],
									[
										291759,
										291771
									],
									[
										292007,
										292019
									],
									[
										292235,
										292247
									],
									[
										292532,
										292543
									],
									[
										292738,
										292749
									],
									[
										293000,
										293011
									],
									[
										293220,
										293231
									],
									[
										293399,
										293410
									],
									[
										293678,
										293691
									],
									[
										293949,
										293962
									],
									[
										294228,
										294241
									],
									[
										294502,
										294515
									],
									[
										294733,
										294746
									],
									[
										295066,
										295079
									],
									[
										295276,
										295289
									],
									[
										295547,
										295560
									],
									[
										295795,
										295808
									],
									[
										296025,
										296038
									],
									[
										296282,
										296295
									],
									[
										296611,
										296624
									],
									[
										296854,
										296867
									],
									[
										297132,
										297145
									],
									[
										297376,
										297389
									],
									[
										297633,
										297646
									],
									[
										297952,
										297965
									],
									[
										298293,
										298306
									],
									[
										298524,
										298537
									],
									[
										298831,
										298844
									],
									[
										299050,
										299063
									],
									[
										299220,
										299233
									],
									[
										299424,
										299437
									],
									[
										299630,
										299643
									],
									[
										299852,
										299865
									],
									[
										300188,
										300201
									],
									[
										300450,
										300463
									],
									[
										300730,
										300743
									],
									[
										301040,
										301053
									],
									[
										301244,
										301257
									],
									[
										301539,
										301552
									],
									[
										301722,
										301735
									],
									[
										301947,
										301960
									],
									[
										302216,
										302229
									],
									[
										302427,
										302440
									],
									[
										302606,
										302619
									],
									[
										302854,
										302867
									],
									[
										303098,
										303111
									],
									[
										303329,
										303342
									],
									[
										303649,
										303662
									],
									[
										303940,
										303953
									],
									[
										304219,
										304232
									],
									[
										304556,
										304569
									],
									[
										304827,
										304840
									],
									[
										305106,
										305119
									],
									[
										305384,
										305397
									],
									[
										305664,
										305677
									],
									[
										305918,
										305931
									],
									[
										306216,
										306229
									],
									[
										306478,
										306491
									],
									[
										306767,
										306780
									],
									[
										307062,
										307075
									],
									[
										307366,
										307379
									],
									[
										307554,
										307567
									],
									[
										307824,
										307837
									],
									[
										308057,
										308070
									],
									[
										308296,
										308309
									],
									[
										308644,
										308657
									],
									[
										308918,
										308931
									],
									[
										309116,
										309129
									],
									[
										309350,
										309363
									],
									[
										309596,
										309609
									],
									[
										309805,
										309818
									],
									[
										310006,
										310019
									],
									[
										310280,
										310293
									],
									[
										310554,
										310567
									],
									[
										310770,
										310783
									],
									[
										311052,
										311065
									],
									[
										311342,
										311355
									],
									[
										311534,
										311547
									],
									[
										311726,
										311739
									],
									[
										311918,
										311931
									],
									[
										312105,
										312118
									],
									[
										312305,
										312318
									],
									[
										312733,
										312746
									],
									[
										312954,
										312967
									],
									[
										313317,
										313330
									],
									[
										313591,
										313604
									],
									[
										313879,
										313892
									],
									[
										314208,
										314221
									],
									[
										314498,
										314511
									],
									[
										314770,
										314783
									],
									[
										315060,
										315073
									],
									[
										315362,
										315375
									],
									[
										315717,
										315730
									],
									[
										315943,
										315956
									],
									[
										316221,
										316234
									],
									[
										316476,
										316489
									],
									[
										316695,
										316708
									],
									[
										316918,
										316931
									],
									[
										317161,
										317174
									],
									[
										317460,
										317473
									],
									[
										317746,
										317759
									],
									[
										318043,
										318056
									],
									[
										318237,
										318250
									],
									[
										318470,
										318483
									],
									[
										318852,
										318865
									],
									[
										319206,
										319219
									],
									[
										319506,
										319519
									],
									[
										319792,
										319805
									],
									[
										320059,
										320072
									],
									[
										320362,
										320375
									],
									[
										320533,
										320546
									],
									[
										320788,
										320801
									],
									[
										321121,
										321134
									],
									[
										321403,
										321416
									],
									[
										321669,
										321682
									],
									[
										322118,
										322132
									],
									[
										322368,
										322380
									],
									[
										322586,
										322598
									],
									[
										322624,
										322636
									],
									[
										322847,
										322859
									],
									[
										323161,
										323173
									],
									[
										323380,
										323392
									],
									[
										323627,
										323639
									],
									[
										323965,
										323977
									],
									[
										324319,
										324331
									],
									[
										324480,
										324492
									],
									[
										324605,
										324617
									],
									[
										324666,
										324678
									],
									[
										324830,
										324842
									],
									[
										324964,
										324976
									],
									[
										325119,
										325131
									],
									[
										325276,
										325288
									],
									[
										325433,
										325445
									],
									[
										325591,
										325603
									],
									[
										325668,
										325680
									],
									[
										325815,
										325827
									],
									[
										325892,
										325904
									],
									[
										326166,
										326178
									],
									[
										326386,
										326398
									],
									[
										326602,
										326614
									],
									[
										326864,
										326876
									],
									[
										327082,
										327094
									],
									[
										327120,
										327132
									],
									[
										327343,
										327355
									],
									[
										327827,
										327839
									],
									[
										328120,
										328132
									],
									[
										328453,
										328465
									],
									[
										328754,
										328766
									],
									[
										329098,
										329110
									],
									[
										329449,
										329461
									],
									[
										329899,
										329911
									],
									[
										330192,
										330204
									],
									[
										330525,
										330537
									],
									[
										330826,
										330838
									],
									[
										331170,
										331182
									],
									[
										331521,
										331533
									],
									[
										331971,
										331983
									],
									[
										332264,
										332276
									],
									[
										332597,
										332609
									],
									[
										332898,
										332910
									],
									[
										333242,
										333254
									],
									[
										333593,
										333605
									],
									[
										334034,
										334048
									],
									[
										334280,
										334288
									],
									[
										334605,
										334613
									],
									[
										334800,
										334808
									],
									[
										334954,
										334962
									],
									[
										335201,
										335209
									],
									[
										335386,
										335394
									],
									[
										335622,
										335630
									],
									[
										335835,
										335843
									],
									[
										336082,
										336090
									],
									[
										336303,
										336311
									],
									[
										336681,
										336695
									],
									[
										336731,
										336745
									],
									[
										336893,
										336907
									],
									[
										337211,
										337226
									],
									[
										337374,
										337389
									],
									[
										337621,
										337636
									],
									[
										337878,
										337893
									],
									[
										338056,
										338071
									],
									[
										338326,
										338341
									],
									[
										338416,
										338431
									],
									[
										338659,
										338674
									],
									[
										338905,
										338920
									],
									[
										338991,
										339006
									],
									[
										339215,
										339230
									],
									[
										339575,
										339590
									],
									[
										339878,
										339893
									],
									[
										340102,
										340117
									],
									[
										340353,
										340368
									],
									[
										340567,
										340582
									],
									[
										340813,
										340828
									],
									[
										341070,
										341085
									],
									[
										341319,
										341334
									],
									[
										341613,
										341628
									],
									[
										341892,
										341907
									],
									[
										342172,
										342187
									],
									[
										342458,
										342473
									],
									[
										342713,
										342728
									],
									[
										342958,
										342973
									],
									[
										343144,
										343159
									],
									[
										343380,
										343395
									],
									[
										343599,
										343614
									],
									[
										343830,
										343845
									],
									[
										344089,
										344104
									],
									[
										344322,
										344337
									],
									[
										344506,
										344521
									],
									[
										344634,
										344649
									],
									[
										344899,
										344914
									],
									[
										345083,
										345098
									],
									[
										345211,
										345226
									],
									[
										345450,
										345465
									],
									[
										345532,
										345547
									],
									[
										345659,
										345674
									],
									[
										345721,
										345736
									],
									[
										345895,
										345910
									],
									[
										345979,
										345994
									],
									[
										346184,
										346199
									],
									[
										346259,
										346274
									],
									[
										346557,
										346572
									],
									[
										346746,
										346761
									],
									[
										346960,
										346975
									],
									[
										347149,
										347164
									],
									[
										347377,
										347392
									],
									[
										347465,
										347480
									],
									[
										347695,
										347710
									],
									[
										347783,
										347798
									],
									[
										347947,
										347962
									],
									[
										348116,
										348131
									],
									[
										348279,
										348294
									],
									[
										348563,
										348578
									],
									[
										348810,
										348825
									],
									[
										348892,
										348907
									],
									[
										349101,
										349116
									],
									[
										349275,
										349290
									],
									[
										349359,
										349374
									],
									[
										349564,
										349579
									],
									[
										349639,
										349654
									],
									[
										349937,
										349952
									],
									[
										350126,
										350141
									],
									[
										350340,
										350355
									],
									[
										350529,
										350544
									],
									[
										350757,
										350772
									],
									[
										350845,
										350860
									],
									[
										351075,
										351090
									],
									[
										351163,
										351178
									],
									[
										351327,
										351342
									],
									[
										351496,
										351511
									],
									[
										351659,
										351674
									],
									[
										351943,
										351958
									],
									[
										352152,
										352167
									],
									[
										352472,
										352496
									],
									[
										352834,
										352841
									],
									[
										353124,
										353131
									],
									[
										353480,
										353495
									],
									[
										353530,
										353545
									],
									[
										353861,
										353876
									],
									[
										354062,
										354077
									],
									[
										354112,
										354127
									],
									[
										354154,
										354169
									],
									[
										354349,
										354364
									],
									[
										354504,
										354519
									],
									[
										354764,
										354779
									],
									[
										354960,
										354975
									],
									[
										354978,
										354993
									],
									[
										355112,
										355127
									],
									[
										355272,
										355287
									],
									[
										355393,
										355408
									],
									[
										355594,
										355609
									],
									[
										355792,
										355807
									],
									[
										356027,
										356042
									],
									[
										356280,
										356295
									],
									[
										356400,
										356415
									],
									[
										356569,
										356584
									],
									[
										356804,
										356819
									],
									[
										356967,
										356982
									],
									[
										357137,
										357152
									],
									[
										357361,
										357376
									],
									[
										357531,
										357546
									],
									[
										357751,
										357766
									],
									[
										357999,
										358014
									],
									[
										358168,
										358183
									],
									[
										358429,
										358444
									],
									[
										358615,
										358630
									],
									[
										358795,
										358810
									],
									[
										359015,
										359030
									],
									[
										359137,
										359152
									],
									[
										359403,
										359418
									],
									[
										359562,
										359577
									],
									[
										359797,
										359812
									],
									[
										360037,
										360052
									],
									[
										360316,
										360331
									],
									[
										360548,
										360563
									],
									[
										360779,
										360794
									],
									[
										360978,
										360993
									],
									[
										361169,
										361184
									],
									[
										361324,
										361339
									],
									[
										361538,
										361553
									],
									[
										361713,
										361728
									],
									[
										361971,
										361986
									],
									[
										362195,
										362210
									],
									[
										362532,
										362547
									],
									[
										362582,
										362597
									],
									[
										362962,
										362977
									],
									[
										362986,
										363001
									],
									[
										363228,
										363243
									],
									[
										363429,
										363444
									],
									[
										363479,
										363494
									],
									[
										363521,
										363536
									],
									[
										363716,
										363731
									],
									[
										363871,
										363886
									],
									[
										364131,
										364146
									],
									[
										364327,
										364342
									],
									[
										364345,
										364360
									],
									[
										364479,
										364494
									],
									[
										364639,
										364654
									],
									[
										364760,
										364775
									],
									[
										364961,
										364976
									],
									[
										365159,
										365174
									],
									[
										365394,
										365409
									],
									[
										365647,
										365662
									],
									[
										365767,
										365782
									],
									[
										365936,
										365951
									],
									[
										366171,
										366186
									],
									[
										366334,
										366349
									],
									[
										366504,
										366519
									],
									[
										366728,
										366743
									],
									[
										366898,
										366913
									],
									[
										367118,
										367133
									],
									[
										367366,
										367381
									],
									[
										367535,
										367550
									],
									[
										367796,
										367811
									],
									[
										367982,
										367997
									],
									[
										368162,
										368177
									],
									[
										368382,
										368397
									],
									[
										368504,
										368519
									],
									[
										368770,
										368785
									],
									[
										368929,
										368944
									],
									[
										369164,
										369179
									],
									[
										369404,
										369419
									],
									[
										369683,
										369698
									],
									[
										369915,
										369930
									],
									[
										370146,
										370161
									],
									[
										370345,
										370360
									],
									[
										370536,
										370551
									],
									[
										370691,
										370706
									],
									[
										370905,
										370920
									],
									[
										371080,
										371095
									],
									[
										371338,
										371353
									],
									[
										371562,
										371577
									],
									[
										371849,
										371859
									],
									[
										372109,
										372119
									],
									[
										372326,
										372336
									],
									[
										372547,
										372557
									],
									[
										372835,
										372845
									],
									[
										373097,
										373107
									],
									[
										373369,
										373379
									],
									[
										373396,
										373406
									],
									[
										373678,
										373688
									],
									[
										373888,
										373898
									],
									[
										374117,
										374127
									],
									[
										374147,
										374157
									],
									[
										374222,
										374232
									],
									[
										374298,
										374308
									],
									[
										374448,
										374458
									],
									[
										374618,
										374628
									],
									[
										374658,
										374668
									],
									[
										374790,
										374800
									],
									[
										374956,
										374966
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								374450,
								374450
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 55,
							"result_base_dir": "",
							"result_file_regex": "^([^ 	].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 214000.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/jbart5-ng/projects/studio/studio-styles.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11925,
						"regions":
						{
						},
						"selection":
						[
							[
								10935,
								10935
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5519.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/jbart5-ng/src/ui/styles/group-styles.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3398,
						"regions":
						{
						},
						"selection":
						[
							[
								1233,
								1233
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 279.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/jbart5-ng/src/ui/features.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7075,
						"regions":
						{
						},
						"selection":
						[
							[
								4841,
								4847
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2567.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/jbart5-ng/src/ui/styles.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1624,
						"regions":
						{
						},
						"selection":
						[
							[
								700,
								700
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/jbart5-ng/src/loader/load-jbart.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7090,
						"regions":
						{
						},
						"selection":
						[
							[
								6567,
								6567
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3599.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/jbart5-ng/projects/ui-tests/single-test.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 656,
						"regions":
						{
						},
						"selection":
						[
							[
								451,
								463
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/C/jbart5-ng/src/testing/ui-testers.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4449,
						"regions":
						{
						},
						"selection":
						[
							[
								33,
								33
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/C/jbart5-ng/projects/ui-tests/tests.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 531,
						"regions":
						{
						},
						"selection":
						[
							[
								421,
								433
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/C/jbart5-ng/src/ui/editable-text.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1180,
						"regions":
						{
						},
						"selection":
						[
							[
								163,
								163
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/C/jbart5-ng/src/ui/tree/tree.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10863,
						"regions":
						{
						},
						"selection":
						[
							[
								9355,
								9355
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5687.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/C/jbart5-ng/projects/material-demo/material-demo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38034,
						"regions":
						{
						},
						"selection":
						[
							[
								37530,
								37530
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 23225.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/C/jbart5-ng/projects/material-demo/material-demo.html",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 629,
						"regions":
						{
						},
						"selection":
						[
							[
								629,
								629
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/C/jbart5-ng/projects/studio/studio-tree.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5172,
						"regions":
						{
						},
						"selection":
						[
							[
								3680,
								3698
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1897.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/C/jbart5-ng/projects/studio/studio-save.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1364,
						"regions":
						{
						},
						"selection":
						[
							[
								238,
								238
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/C/jbart5-ng/jbart-studio.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13622,
						"regions":
						{
						},
						"selection":
						[
							[
								3621,
								3621
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1375.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/C/jbart5-ng/projects/material-demo/ng-material-demo-loader.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5501,
						"regions":
						{
						},
						"selection":
						[
							[
								1967,
								1967
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/C/jbart5-ng/src/core/components.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21515,
						"regions":
						{
						},
						"selection":
						[
							[
								20706,
								20706
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 15064.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "/C/jbart5-ng/projects/studio/studio-main.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9864,
						"regions":
						{
						},
						"selection":
						[
							[
								8188,
								8188
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3712.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/C/jbart5-ng/src/ui/tree/json-tree.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1363,
						"regions":
						{
						},
						"selection":
						[
							[
								117,
								117
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/C/jbart5-ng/src/ui/css-features.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3582,
						"regions":
						{
						},
						"selection":
						[
							[
								2534,
								2534
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1079.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/C/jbart5-ng/projects/studio/studio-testers.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3879,
						"regions":
						{
						},
						"selection":
						[
							[
								1560,
								1572
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 487.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/C/jbart5-ng/projects/studio-helper/path-tests.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4108,
						"regions":
						{
						},
						"selection":
						[
							[
								1121,
								1121
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 564.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/C/jbart5-ng/projects/studio/studio-jb-editor.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10628,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "/C/jbart5-ng/projects/studio/studio-model-components.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4507,
						"regions":
						{
						},
						"selection":
						[
							[
								907,
								945
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 324.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/C/jbart5-ng/projects/studio/studio-path.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5417,
						"regions":
						{
						},
						"selection":
						[
							[
								36,
								46
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "/C/jbart5-ng/projects/studio/studio-popups.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5599,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "/C/jbart5-ng/projects/studio/studio-properties.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17160,
						"regions":
						{
						},
						"selection":
						[
							[
								3682,
								3690
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2200.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/C/jbart5-ng/projects/studio/studio-tgp-model.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20002,
						"regions":
						{
						},
						"selection":
						[
							[
								5868,
								5868
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 3497.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "/C/jbart5-ng/projects/ui-tests/ui-tests.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22040,
						"regions":
						{
						},
						"selection":
						[
							[
								6257,
								6260
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3905.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "/C/jbart5-ng/src/ui/jb-ui.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22256,
						"regions":
						{
						},
						"selection":
						[
							[
								7605,
								7605
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 3600.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "/C/jbart5-ng/projects/data-tests/data-tests.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 993,
						"regions":
						{
						},
						"selection":
						[
							[
								778,
								778
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "/C/jbart5-ng/src/core/core.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17931,
						"regions":
						{
						},
						"selection":
						[
							[
								16568,
								16568
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6812.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "/C/jbart5-ng/projects/studio/studio-utils.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3213,
						"regions":
						{
						},
						"selection":
						[
							[
								1280,
								1280
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 279.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "/C/jbart5-ng/projects/data-tests/data-tests.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 563,
						"regions":
						{
						},
						"selection":
						[
							[
								563,
								563
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "/C/jbart5-ng/src/ui/button.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2395,
						"regions":
						{
						},
						"selection":
						[
							[
								1060,
								1071
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 27.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "/C/jbart5-ng/src/core/pretty-print.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5115,
						"regions":
						{
						},
						"selection":
						[
							[
								747,
								747
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 144.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "/C/jbart5-ng/projects/studio/studio-undo.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1584,
						"regions":
						{
						},
						"selection":
						[
							[
								620,
								620
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 500.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "jbart.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"main",
				"jbart5-ng\\projects\\studio\\studio-main.ts"
			],
			[
				"pre",
				"jbart5-ng\\src\\core\\pretty-print.js"
			],
			[
				"pret",
				"jbart5-ng\\src\\core\\pretty-print.js"
			],
			[
				"loader",
				"jbart5-ng\\projects\\material-demo\\ng-material-demo-loader.ts"
			],
			[
				"mater",
				"jbart5-ng\\projects\\material-demo\\material-demo.js"
			],
			[
				"model",
				"jbart5-ng\\projects\\studio\\studio-tgp-model.ts"
			],
			[
				"save",
				"jbart5-ng\\projects\\studio\\studio-save.ts"
			],
			[
				"uti",
				"jbart5-ng\\projects\\studio\\studio-utils.ts"
			],
			[
				"core",
				"jbart5-ng\\src\\core\\core.js"
			],
			[
				"tests.html",
				"jbart5-ng\\projects\\ui-tests\\tests.html"
			],
			[
				"data-te",
				"jbart5-ng\\projects\\data-tests\\data-tests.ts"
			],
			[
				"jb-ui",
				"ui\\jb-ui.ts"
			],
			[
				"ui-test",
				"jbart5-ng\\projects\\ui-tests\\ui-tests.ts"
			],
			[
				"tgp-mo",
				"jbart5-ng\\projects\\studio\\studio-tgp-model.ts"
			],
			[
				"tree",
				"jbart5-ng\\projects\\studio\\studio-tree.ts"
			],
			[
				"",
				"jbart5-ng\\projects\\material-demo\\material-demo.js"
			],
			[
				"prett",
				"jbart5-ng\\src\\core\\pretty-print.js"
			],
			[
				"proper",
				"jbart5-ng\\projects\\studio\\studio-properties.ts"
			],
			[
				"fix",
				"jbart5-ng\\fixParams.js"
			],
			[
				"data-br",
				"jbart5-ng\\projects\\studio\\studio-data-browse.ts"
			],
			[
				"path",
				"jbart5-ng\\projects\\studio-helper\\path-tests.ts"
			],
			[
				"utils",
				"jbart5-ng\\src\\core\\utils.js"
			],
			[
				"tests.ht",
				"jbart5-ng\\projects\\ui-tests\\tests.html"
			],
			[
				"load",
				"jbart5-ng\\src\\loader\\load-jbart.js"
			],
			[
				"edita",
				"ui\\editable-text.js"
			],
			[
				"studio-sa",
				"jbart5-ng\\projects\\studio\\studio-save.ts"
			],
			[
				"studio-un",
				"jbart5-ng\\projects\\studio\\studio-undo.ts"
			],
			[
				"jb-rx",
				"ui\\jb-rx.ts"
			],
			[
				"tgp-mode",
				"jbart5-ng\\projects\\studio\\studio-tgp-model.ts"
			],
			[
				"probe",
				"jbart5-ng\\projects\\studio\\studio-probe.ts"
			],
			[
				"rxjs",
				"C:\\jbart5-ng\\node_modules\\rxjs\\bundles\\Rx.js"
			],
			[
				"jb",
				"ui\\jb-ui.ts"
			],
			[
				"stu",
				"jbart5-ng\\projects\\studio\\studio-utils.ts"
			],
			[
				"util",
				"jbart5-ng\\src\\core\\utils.js"
			],
			[
				"studut",
				"jbart5-ng\\projects\\studio\\studio-utils.ts"
			],
			[
				"studio-mode",
				"jbart5-ng\\projects\\studio\\studio-tgp-model.ts"
			],
			[
				"lo",
				"jbart5-ng\\src\\loader\\load-jbart.js"
			],
			[
				"compo",
				"jbart5-ng\\src\\core\\components.js"
			],
			[
				"pack",
				"jbart5-ng\\package.json"
			],
			[
				"code",
				"ui\\styles\\codemirror-styles.ts"
			],
			[
				"undo",
				"jbart5-ng\\projects\\studio\\studio-undo.ts"
			],
			[
				"uno",
				"ui\\tree\\tree-undo.ts"
			],
			[
				"todo",
				"jbart5-ng\\todo.txt"
			],
			[
				"studio-uti",
				"jbart5-ng\\projects\\studio\\studio-utils.ts"
			],
			[
				"dial",
				"ui\\dialog.ts"
			],
			[
				"fea",
				"ui\\features.ts"
			],
			[
				"sugg",
				"jbart5-ng\\projects\\studio\\studio-suggestions.ts"
			],
			[
				"ng-",
				"jbart5-ng\\projects\\material-demo\\ng-material-demo-loader.ts"
			],
			[
				"ng",
				"jbart5-ng\\projects\\material-demo\\ng-material-demo-loader.ts"
			],
			[
				"http",
				"ui\\http.ts"
			],
			[
				"feature",
				"ui\\features.ts"
			],
			[
				"stud",
				"jbart5-ng\\projects\\studio\\studio-main.ts"
			],
			[
				"test",
				"jbart5-ng\\src\\testing\\ui-testers.ts"
			],
			[
				"pickli",
				"ui\\picklist.ts"
			],
			[
				"tg",
				"jbart5-ng\\projects\\studio\\studio-tgp-model.ts"
			],
			[
				"feat",
				"ui\\features.ts"
			],
			[
				"tgp-",
				"jbart5-ng\\projects\\studio\\studio-tgp-model.ts"
			],
			[
				"dialog",
				"ui\\dialog.ts"
			],
			[
				"labe",
				"ui\\label.ts"
			],
			[
				"grou",
				"ui\\group.ts"
			],
			[
				"hell",
				"jbart5-ng\\projects\\hello-world\\hello.ts"
			],
			[
				"hello",
				"jbart5-ng\\projects\\hello-world\\hello.ts"
			],
			[
				"path-",
				"jbart5-ng\\projects\\studio-helper\\path-tests.ts"
			],
			[
				"com",
				"jbart5-ng\\src\\core\\components.js"
			],
			[
				"pro",
				"jbart5-ng\\projects\\studio\\studio-probe.ts"
			],
			[
				"jb-edi",
				"jbart5-ng\\projects\\studio\\studio-jb-editor.ts"
			],
			[
				"tab-m",
				"ui\\md-styles\\tabs-md.ts"
			],
			[
				"button-m",
				"ui\\md-styles\\button-md.ts"
			],
			[
				"but",
				"ui\\button.ts"
			],
			[
				"ui-tester",
				"jbart5-ng\\src\\testing\\ui-testers.ts"
			],
			[
				"text",
				"ui\\text.ts"
			],
			[
				"lab",
				"ui\\label.ts"
			],
			[
				"core.",
				"jbart5-ng\\src\\core\\core.js"
			],
			[
				"label",
				"ui\\label.ts"
			],
			[
				"rx-test",
				"jbart5-ng\\projects\\ui-tests\\rx-tests.js"
			],
			[
				"tests.",
				"jbart5-ng\\projects\\ui-tests\\tests.html"
			],
			[
				"load-",
				"jbart5-ng\\src\\loader\\load-jbart.js"
			],
			[
				"studio.",
				"jbart5-ng\\projects\\studio\\studio.html"
			],
			[
				"ui-te",
				"jbart5-ng\\src\\testing\\ui-testers.ts"
			],
			[
				"tot",
				"jbart5-ng\\todo.txt"
			],
			[
				"style",
				"ui\\styles.ts"
			],
			[
				"prob",
				"jbart5-ng\\projects\\studio\\studio-probe.ts"
			],
			[
				"studio",
				"jbart5-ng\\projects\\studio-helper\\studio-helper.html"
			],
			[
				"ut",
				"jbart5-ng\\src\\core\\utils.js"
			],
			[
				"studio-te",
				"jbart5-ng\\projects\\studio\\studio-tests.ts"
			],
			[
				"testi",
				"jbart5-ng\\src\\testing\\ui-testers.ts"
			],
			[
				"ui-",
				"jbart5-ng\\src\\testing\\ui-testers.ts"
			],
			[
				"itemlis",
				"ui\\itemlist-heading.ts"
			],
			[
				"itemlist",
				"ui\\itemlist.ts"
			],
			[
				"jb.ts",
				"jbart5-ng\\src\\core\\jb.ts"
			],
			[
				"sty",
				"ui\\styles.ts"
			],
			[
				"dialo",
				"ui\\dialog.ts"
			],
			[
				"md-car",
				"ui\\md-styles\\card-md.ts"
			],
			[
				"styl",
				"ui\\styles.ts"
			],
			[
				"md-in",
				"ui\\md-styles\\input-md.ts"
			],
			[
				"material-de",
				"jbart5-ng\\projects\\material-demo\\material-demo.ts"
			],
			[
				"input",
				"ui\\md-styles\\input-md.ts"
			],
			[
				"head",
				"ui\\itemlist-heading.ts"
			],
			[
				"itemli",
				"ui\\itemlist.ts"
			],
			[
				"to",
				"jbart5-ng\\todo.txt"
			],
			[
				"item",
				"ui\\itemlist.ts"
			],
			[
				"mai",
				"jbart5-ng\\projects\\studio\\studio-main.ts"
			],
			[
				"bu",
				"ui\\button.ts"
			],
			[
				"butt",
				"ui\\button.ts"
			],
			[
				"read",
				"jbart5-ng\\README.md"
			],
			[
				"group",
				"ui\\group.ts"
			],
			[
				"features",
				"ui\\features.ts"
			],
			[
				"readm",
				"jbart5-ng\\README.md"
			],
			[
				"ng-ma",
				"jbart5-ng\\projects\\material-demo\\ng-material-demo-loader.ts"
			],
			[
				"ng-mater",
				"jbart5-ng\\projects\\material-demo\\ng-material-demo-loader.ts"
			],
			[
				"ng-mat",
				"jbart5-ng\\projects\\material-demo\\ng-material-demo-loader.ts"
			],
			[
				"ui-co",
				"ui\\ui-common.ts"
			],
			[
				"studiocss",
				"jbart5-ng\\projects\\studio\\css\\studio.css"
			],
			[
				"input-m",
				"ui\\md-styles\\input-md.ts"
			],
			[
				"md-ta",
				"ui\\md-styles\\tabs-md.ts"
			],
			[
				"mate",
				"jbart5-ng\\projects\\material-demo\\material-demo.ts"
			],
			[
				"materil",
				"jbart5-ng\\projects\\material-demo\\material-demo.ts"
			],
			[
				"ui-comm",
				"ui\\ui-common.ts"
			],
			[
				"checkb",
				"C:\\jbart5-ng\\node_modules\\@angular2-material\\checkbox\\checkbox.js"
			],
			[
				"pac",
				"jbart5-ng\\package.json"
			],
			[
				"ng2-s",
				"jbart5-ng\\css\\ng2-styles.css"
			],
			[
				"css",
				"jbart5-ng\\projects\\studio\\css\\ng2-styles.css"
			],
			[
				"tabs",
				"ui\\tabs.ts"
			],
			[
				"comp",
				"jbart5-ng\\src\\core\\components.js"
			],
			[
				"menu",
				"jbart5-ng\\projects\\studio\\studio-properties-menu.ts"
			],
			[
				"tool",
				"jbart5-ng\\projects\\studio\\studio-toolbar.ts"
			],
			[
				"prop",
				"jbart5-ng\\projects\\studio\\studio-properties.ts"
			],
			[
				"pick",
				"jbart5-ng\\projects\\studio\\studio-pick-dialog.ts"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 244.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
