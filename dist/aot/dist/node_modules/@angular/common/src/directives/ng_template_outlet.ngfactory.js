/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
System.register(['@angular/common/src/directives/ng_template_outlet', '@angular/core/src/change_detection/change_detection', '@angular/core/src/linker/view_utils'], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var import0, import1, import2;
    var Wrapper_NgTemplateOutlet;
    return {
        setters:[
            function (import0_1) {
                import0 = import0_1;
            },
            function (import1_1) {
                import1 = import1_1;
            },
            function (import2_1) {
                import2 = import2_1;
            }],
        execute: function() {
            Wrapper_NgTemplateOutlet = (function () {
                function Wrapper_NgTemplateOutlet(p0) {
                    this.changed = false;
                    this.changes = {};
                    this.context = new import0.NgTemplateOutlet(p0);
                    this._expr_0 = import1.UNINITIALIZED;
                    this._expr_1 = import1.UNINITIALIZED;
                }
                Wrapper_NgTemplateOutlet.prototype.check_ngOutletContext = function (currValue, throwOnChange, forceUpdate) {
                    if ((forceUpdate || import2.checkBinding(throwOnChange, this._expr_0, currValue))) {
                        this.changed = true;
                        this.context.ngOutletContext = currValue;
                        this.changes['ngOutletContext'] = new import1.SimpleChange(this._expr_0, currValue);
                        this._expr_0 = currValue;
                    }
                };
                Wrapper_NgTemplateOutlet.prototype.check_ngTemplateOutlet = function (currValue, throwOnChange, forceUpdate) {
                    if ((forceUpdate || import2.checkBinding(throwOnChange, this._expr_1, currValue))) {
                        this.changed = true;
                        this.context.ngTemplateOutlet = currValue;
                        this.changes['ngTemplateOutlet'] = new import1.SimpleChange(this._expr_1, currValue);
                        this._expr_1 = currValue;
                    }
                };
                Wrapper_NgTemplateOutlet.prototype.detectChangesInInputProps = function (view, el, throwOnChange) {
                    var changed = this.changed;
                    this.changed = false;
                    if (!throwOnChange) {
                        if (changed) {
                            this.context.ngOnChanges(this.changes);
                            this.changes = {};
                        }
                    }
                    return changed;
                };
                Wrapper_NgTemplateOutlet.prototype.detectChangesInHostProps = function (view, el, throwOnChange) {
                };
                return Wrapper_NgTemplateOutlet;
            }());
            exports_1("Wrapper_NgTemplateOutlet", Wrapper_NgTemplateOutlet);
        }
    }
});
