/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
System.register(['@angular/common/src/directives/ng_switch', '@angular/core/src/change_detection/change_detection', '@angular/core/src/linker/view_utils'], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var import0, import1, import2;
    var Wrapper_NgSwitch, Wrapper_NgSwitchCase, Wrapper_NgSwitchDefault;
    return {
        setters:[
            function (import0_1) {
                import0 = import0_1;
            },
            function (import1_1) {
                import1 = import1_1;
            },
            function (import2_1) {
                import2 = import2_1;
            }],
        execute: function() {
            Wrapper_NgSwitch = (function () {
                function Wrapper_NgSwitch() {
                    this.changed = false;
                    this.context = new import0.NgSwitch();
                    this._expr_0 = import1.UNINITIALIZED;
                }
                Wrapper_NgSwitch.prototype.check_ngSwitch = function (currValue, throwOnChange, forceUpdate) {
                    if ((forceUpdate || import2.checkBinding(throwOnChange, this._expr_0, currValue))) {
                        this.changed = true;
                        this.context.ngSwitch = currValue;
                        this._expr_0 = currValue;
                    }
                };
                Wrapper_NgSwitch.prototype.detectChangesInInputProps = function (view, el, throwOnChange) {
                    var changed = this.changed;
                    this.changed = false;
                    return changed;
                };
                Wrapper_NgSwitch.prototype.detectChangesInHostProps = function (view, el, throwOnChange) {
                };
                return Wrapper_NgSwitch;
            }());
            exports_1("Wrapper_NgSwitch", Wrapper_NgSwitch);
            Wrapper_NgSwitchCase = (function () {
                function Wrapper_NgSwitchCase(p0, p1, p2) {
                    this.changed = false;
                    this.context = new import0.NgSwitchCase(p0, p1, p2);
                    this._expr_0 = import1.UNINITIALIZED;
                }
                Wrapper_NgSwitchCase.prototype.check_ngSwitchCase = function (currValue, throwOnChange, forceUpdate) {
                    if ((forceUpdate || import2.checkBinding(throwOnChange, this._expr_0, currValue))) {
                        this.changed = true;
                        this.context.ngSwitchCase = currValue;
                        this._expr_0 = currValue;
                    }
                };
                Wrapper_NgSwitchCase.prototype.detectChangesInInputProps = function (view, el, throwOnChange) {
                    var changed = this.changed;
                    this.changed = false;
                    return changed;
                };
                Wrapper_NgSwitchCase.prototype.detectChangesInHostProps = function (view, el, throwOnChange) {
                };
                return Wrapper_NgSwitchCase;
            }());
            exports_1("Wrapper_NgSwitchCase", Wrapper_NgSwitchCase);
            Wrapper_NgSwitchDefault = (function () {
                function Wrapper_NgSwitchDefault(p0, p1, p2) {
                    this.changed = false;
                    this.context = new import0.NgSwitchDefault(p0, p1, p2);
                }
                Wrapper_NgSwitchDefault.prototype.detectChangesInInputProps = function (view, el, throwOnChange) {
                    var changed = this.changed;
                    this.changed = false;
                    return changed;
                };
                Wrapper_NgSwitchDefault.prototype.detectChangesInHostProps = function (view, el, throwOnChange) {
                };
                return Wrapper_NgSwitchDefault;
            }());
            exports_1("Wrapper_NgSwitchDefault", Wrapper_NgSwitchDefault);
        }
    }
});
