/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
System.register(['@angular/common/src/directives/ng_style', '@angular/core/src/change_detection/change_detection', '@angular/core/src/linker/view_utils'], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var import0, import1, import2;
    var Wrapper_NgStyle;
    return {
        setters:[
            function (import0_1) {
                import0 = import0_1;
            },
            function (import1_1) {
                import1 = import1_1;
            },
            function (import2_1) {
                import2 = import2_1;
            }],
        execute: function() {
            Wrapper_NgStyle = (function () {
                function Wrapper_NgStyle(p0, p1, p2) {
                    this.changed = false;
                    this.context = new import0.NgStyle(p0, p1, p2);
                    this._expr_0 = import1.UNINITIALIZED;
                }
                Wrapper_NgStyle.prototype.check_ngStyle = function (currValue, throwOnChange, forceUpdate) {
                    if ((forceUpdate || import2.checkBinding(throwOnChange, this._expr_0, currValue))) {
                        this.changed = true;
                        this.context.ngStyle = currValue;
                        this._expr_0 = currValue;
                    }
                };
                Wrapper_NgStyle.prototype.detectChangesInInputProps = function (view, el, throwOnChange) {
                    var changed = this.changed;
                    this.changed = false;
                    if (!throwOnChange) {
                        this.context.ngDoCheck();
                    }
                    return changed;
                };
                Wrapper_NgStyle.prototype.detectChangesInHostProps = function (view, el, throwOnChange) {
                };
                return Wrapper_NgStyle;
            }());
            exports_1("Wrapper_NgStyle", Wrapper_NgStyle);
        }
    }
});
